full_text
quantum computing platform assessing impact quality attribute sdlc activity balwinder sodhi department computer science engineering indian institute technology ropar punjab india sodhiiitrpracinritu kapur department computer science engineering indian institute technology ropar punjab india devritukapurgmailcom abstract practical quantum computing rapidly becoming reality harness quantum computer real potential software application one need indepth understanding characteristic quantum computing platform qcps relevant software engineering perspective strictions copying deletion transmission qubit state hard dependency quantum algorithm many example qcp characteristic signicant implication building quantum software thus developing quantum software requires paradigm shift thinking software engineer paper present key ndings perspective resulting indepth examination stateoftheart qcps available today main contribution present include proposing general architecture qcps proposing programming model developing quantum software iii determining architecturally signicant characteristic qcps determining impact characteristic various quality attribute qas software development life cycle sdlc activity show nature qcps make useful mainly specialized application area scientic computing except performance scalability qas maintainability testability reliability adversely affected different characteristic qcp index term quantum computing quantum software engi neering software development life cycle computing platform ntroduction origin quantum information processing traced back early however commercially viable quantum computer reported recent qcp space development include intels delivery qubit superconducting quantum chip ibms qubit quantum computer today possible programmer real quantum computer cloudbased quantum programming platform ibm experience perspective software development quantum computing one recent paradigm shift paper term quantum computing platform qcp refer entire apparatus hardware software necessary develop deploy quantum software application typical software application run qcp consists native quantum part classical nonquantum software part today native quantumparts relatively small size considering pace development happening domain qcps pertinent investigate largescale professional development quantum software different similar building software purely classical computing platform critical question context could essential characteristic qcps efcacious software development way qcp affect quality attribute nonfunctional requirement quantum software application software development life cycle sdlc activ ities affected characteristic qcp paper address question via indepth examination qcps available today relationship qas computing platform characteristic method research work central tenet computing platform characteristic affect design software development platform past author established experimental ndings computing platform characteristic affect qas software application relationship qas platform characteristic expected qas realized partii using design tactic tactic leverage characteristic computing platform illustrated ieee international conference software architecture icsa ieee doi icsa ieee international conference software architecture icsa ieee doi icsa ieee xplore restriction apply item qas tactic always occur context software development result imply sdlc activity also affected computing platform characteristic understand point consider example build ing performance application often demand exploit parallelism present task however target computing platform offer multiprocessing one singlecore cpu application truly realize performance approach present work seek answer question highlighted preceding section based ndings central idea underlying approach stated follows identify set crucial characteristic qcps indepth examination available literature software artifact various qcps validate via prototyping reference data necessary identify causeandeffect relationship qas sdlc activity step performed examining denition partii sdlc activity step carried independent professional software engineering expert experience building complex software delphi method used arrive consensus mixed result approach application demonstrated section deter mine qcp characteristic impact various qas sdlc activity however develop quantum software application conducting research study purely experience report based experimental programming professional software engineering expert paper structure broadly reects carried work start describing section quantum computing basic relevant perspective developing quantum software indepth examination different qcps available various provider bring section iic general architecture qcp section iid present technique exploited currently known quantum algorithm propose programming model quantum software development section iie present detail experiment performed various quantum computing toolkits determine pro con working various qcps section iii determine prominent qcp char acteristics identify qas sdlc activity affected section iva present characteristic qcps impact various qas finally discus effect characteristic sdlc activity section ivb uantum computing platform determining software architectural aspect quantum soft ware development requires deeper comprehension essential difference classical quantum computer though detailed treatment theoretical underpinningof quantum phenomenon computing available standard quantum computing text present quantum computing concept necessary discussion description concept necessary set ground identication necessary quantum computing characteristic study impact various sdlc tivities qas make quantum computing different classical computer store process information form binary bit using bit realized physical level using suitable property voltage current physical device nbit memory cell classical computer potentially represent ndifferent symbol moment represent one npossibilities information quantum computer represented stored using quantum bit qubits qubits physically realized via suitable physical phenomenon obey law quantum mechanic example phenomenon spin single electron individual ion conguration qubit observed one two basis state labeled asjior aji generally qubit state jicorresponds classical bit jito classical bit one remarkable property qubits allows quantum computer compute much faster classical computer number possible state qubit exist different observable state one basis state instant one qubit ajistate quantum superposition two word basis state jiandji linear combination xjiyjidescribe possible state single qubit exist given time contrast one classical bit one time one two possible state relevance property computing quantum computer represent much larger state space number qubits classical computer bit qubit xjiyjican thought vector complex plane phase difference andjibasis state qubit represents signicant quantity certain type probabilistic algorithm exploit property perform faster computation another quantum property exploited quantum computing entanglement qubits two indi vidually independent quantum object said entangled behavior random individually time strongly correlated despite object independent multiqubit state expressed list individual constituent qubits tangled consider bell state jijip example entangled twoqubit state way expressing list onequbit state suppose measure axis one qubits say ieee xplore restriction apply comprise entangled state behave randomly caseqcan bejiorjiwith equal probability suppose measuredqto beji value qwill certainly beji predict exactly qubit would behave measured along axis unentangled state exhibit type perfect correlation perfect individual randomness relevance property computing set independent random variable phenomenon modeled using set qubits qubits chosen entangled possible develop algorithm need operate subset entangled qubits thus making computation faster could many scenario property entanglement useful two property quantum superposition quantum entanglement useful resource quantum computing following nogo theorem put additional con straints computation may carried qcp nocloning theorem state impossible create identical copy clone quantum state impossible actual qubit state point time therefore possible clone unknown quantum state nocommunication theorem state measurement entangled quantum state possible make measurement subsystem total state communicate theorem disallows kind communication shared quantum state thenoteleportation theorem state arbitrary quantum state converted sequence classical bit also state reverse false thenodeleting theorem state given two copy arbitrary quantum state impossible delete one related work author present study open source quantum computing tool covering various detail quantum toolchain different quantum computing paradigm author study characteristic documentation licence choice programming language compliance norm software engineering used tool author report challenge select suitable paradigm corresponding quantum algorithm solve specic problem support one claim study provides good insight feature present various toolkits based study author conclude hard newcomer become handy quantum computing toolkits difcult experienced quantum developer switchto opensource toolkits author provide comparison four cloudbased quantum computing platform rigettis forest pyquil ibms qiskit projectq microsofts quantum developer architecture quantum computing platform kit also experimented three toolkits objective gaining experience inherent feature support offered developer author provide detail related various aspect toolkits requirement installation language syntax library support quantum simulator capability intent author lie providing feature comparison various quantum toolkits quick installation guide example guide beginner quick start toolkits author introduce novel platform sharing quantum software qusp connects various software community member quantumdomain expert developer endusers work existing quantum computing algorithm available different source infor mation book web research paper work currently progress towards developing prototype qusp author introduce quantumspecic sdlc titled quantum software lifecycle qslc developing gatebased quantum software application qslc com prises ten software development phase viz quantum classi cal splitting hardwareindependent implementation quantum circuit enrichment hardwareindependent optimization quan tum hardware selection readouterror mitigation preparation compilation hardwaredependent optimization integration execution result analysis author provide comprehensive description goal method applicable tool viable inputoutput data qslc phase ieee xplore restriction apply author provide survey various quantum software engineering technique author categorize existing literature per quantum technique present various sdlc activity review provides detail variety quantum software engineering denitions quantum concept quantum computing differs classical computing author point negligence towards quantum software reuse critical issue author discus challenge implementing gatebased quantum computing algorithm noisy intermediate scale quantum nisq device author dis cuss essential concept related state preparation oracle expansion connectivity circuit rewriting readout play signicant role implementing quantum algorithm author validate ndings performing several experiment ibm quantum computing toolkit provide detailed discussion clearly exist many useful source gaining sight quantum computing basic quantum toolkits best knowledge exist work study impact quantum computing characteristic sdlc activity qas general architecture today physical quantum computing machinery reminis cent early classical computer signi cant requires particular physical environment condition operating correctly examined qcps available today various provider considering salient characteristic qcps propose general architecture qcp depicted comprises layer three contain purely quantum hardware circuitry two consists classical hardware software quantum layer one think layer comprising quantum processing unit qpu aphysical building block includes quantum hard ware typically us superconducting loop physical realization qubits also contains physical qubit coupler interconnectcircuitry among element needed qubit addressing control operation bquantum logic gate physical circuitry make quantum logic gate cquantumclassical interface includes hard ware software provides interfacing tween classical computer qpu classical layer aquantum programming environment provides item quantum assembly language nec essary instructing qpu programming abstraction needed writing quantum program highlevel programming language iii simulator support idestable technique used quantum algorithm technique example target problem amplitude amplication searching collection database item grovers algorithm quantum fourier transform discrete logarithm problem integer factorization problem polynomial time shors algorithm predominant application eld cryptography phase kick back estimating gauss sum application area include simulation complex physical process uid dynamic etc quantum phase estimation estimate phase unitary transformation add one eigenvectors application area include simulation complex physical process uid dynamic etc quantum walk element distinctness problem triangle nding problem formula evaluation group commutativity application area include analysis network natural language processing etc bsoftware application quantum software applica tions written cater business scientic requirement development quantum software preceding section introduced two fundamental property quantum superposition andquantum entanglement make quantum computer much faster classical computer solving specic problem nature two property inherently make quantum computation mostly probabilistic thus implying quantum program likely probabilistic randomized expressing logic algorithm executed quantum com puter requires special technique programming model quantum algorithm key harnessing power qcps usefulness quantum program lie ability exploit fundamental characteristic superposition entanglement qubits quantum computer past decade quantum computing researcher developed handful technique exploit quantum computer characteristic quickly solving specic prob lem take much longer solve classical computer technique example algorithm exploit shown table several algorithm available today exploit technique solve various com puting problem much faster classical computer derive benet quantum computer capability one must map problem hand one problem quantum algorithm known quantum circuit one standard model representing quantum computation like digital logic gate employed classical computer quantum gate used compose quantum circuit model quantum algo rithms step expressed sequence quantum logic gate quantum logic gate transforms input qubits ieee xplore restriction apply example quantum circuit developed using ibms quantum computing simulator quantum programming model welldened manner typically expressed operation matrix vector ibm qexperience composer take approach expressing quantum computation show screenshot quantum circuit implementing grovers algorithm ibm qexperience square box horizontal line represent quantum gate used circuit horizontal line except one bottom represents qubits lifeline different quantum gate applied qubit along lifeline left right measurement operation typically last item lifeline qubit programming model quantum paradigm evalu ated programming abstraction highlevel program ming language library expose abstraction typical step involved composing quantum program different qcps observe quantum program typically comprises part execute classical cpu quantum processing unit qpu creating quantum program mainly involved following task mapping inputoutput classical bit represen tation qubits initializing qubits state compose quantum circuit using suitable quantum logic gate express quantum algorithm step step repeated suitable number time get reliable measurement outcome measure output qubits state measuring qubit force collapse classical bit transfer classical bit suitable highlevel programming api instruction typically used compose quantum programsbased observation quantum programming model derived shown also checked adherence programming model manually examining sample quantum program supplied different qcps experimenting major qcps discover characteristic various qcps experi mented three major quantum programming platform viz ibms quantum experience platform composer qasm editor microsofts quantum development kit rigettis quantum computing service qcps freely accessible userfriendly interface ibms quantum experience platform ibms qcp pro vides user easy interface quantum logic gate build quantum circuit experimented subset stateoftheart quantum computing algorithm using ibm qubit qcp named ibmqx example circuit diagram grovers algorithm implemented using ibmqx shown programming interface implementing quantum computing algorithm work quantum assembler qasm language called qasm editor ibm provides support quantum computing cloud service cloud service benet cloud based platform available microsofts quantum development kit qdk crosofts qdk work visual studio environmentand installed machine window macos linux operating system code sample prominent quantum algorithm freely available github implemented subset algorithm screenshots etc setup available httpsbitlyjplx microsofts qdk provides good documentation devel oper support resource however programming interface via qasm thus imposes additional learning curve developer accustomed low level programming language rigettis quantum computing service qcs rigettis qcs consists pyquil python quantum instruc tion languagelibrary rigetti quil compiler quilc quantum virtual machine qvm quilc compiles quantum program written quil run quantum stract machine qam rigettis qvm qam provided httpsdocsmicrosoftcomenusquantumviewqsharppreview httpsreadthedocsorgprojectspyquil ieee xplore restriction apply implementing various quantum algorithm local machine run quantum script one need initialize quilc qvm server hosted locally quantum run quil instruction python compiled native quil form quilc compiled code run qvm server instance produce result implemented subset quantum computing algorithm snippet using sdk rigettis qcs allows implementing quantum algorithm wellknown programming language python iii etermining qcp characteristic impact describe approach determining salient characteristic qcps characteristic impact various qas sdlc activity determining qcp characteristic qcps available today provide set sam ple software program demonstrate capability respective qcps qcps also provide detailed doc umentation artifact explain internals qcps highlevel apis allow programming qcps carefully examining prototyping artifact identied key characteristic presented section qcps cited relevant artifact qcps presenting respective characteristic rest paper major qas quality attribute may described factor systemwide impact application architecture implementation operation qas concern application may categorized depending whether affect design runtime system user quality application overall design quality many software appli cation considered acceptable application posse reasonable level least following qas performance reliability scalability security usability however considered slightly expanded list qas examining affected software built using qcp availability interoperability maintainability manageability performancereliability scalability security testability usability current body software design architecture knowl edge contains extensive detail discussion denitions various qas signicant reference realize software using various design tactic partii characteristic computing platform lever aged various tactic order realize thus covered detail however identifying impact various qcp characteristic different qas relied mainly knowledge body subsequent paragraph discus aspect relevant identifying affected various characteristic qcps take qcp characteristic identied section turn discus affect various qas consideration characteristic may favorable unfavorable orneutral impact building application sdlc activity core activity involved software development requirement design engineering construction testing bugging deployment maintenance considered following determine core activity likely affected developing software qcps denitions property various sdlc activity dened swebok mapping various qas different sdlc activity mapping done based relevance sdlc activity realization table show mapping derived using denitions property qas sdlc activity know whether qcp characteristic impact mapping crosscheck whether sdlc activity likely affected table mappingof qas sdlc activity quality attributessdlc activityrequirements design construction testing deployment maintenance availability interoperability maintainability manageability performance reliability scalability security testability usability cell value indicates level relevance high low iscussion qcp characteristic impact section describe critical characteristic qcps discussed section iie impact characteristic various qas sdlc activity detail impact qas presented inline description characteristic discussion ieee xplore restriction apply impact sdlc activity presented dedicated section section ivb hope presentation make easier understand convey detail without loss relevant information major qcp characteristic impact qas lower level programming abstraction pro gramming abstraction offered qcps today low level programmer must work level quantum logic gate usually via highlevel language representation expressing computational step want execute via qpu effect qas working quantum gate level implement quantum algorithm complicated develop program using low level abstraction errorprone increase complexity code moreover many today least expert quantum program mers adversely affect qas maintainability testability reliability availability platform heterogeneity published technical detail different qcps available today show heterogeneous nature qcps furthermore various quantum nogo theorem please see section iia disallow copy deletion qubit state transmission certain condition due restriction dependency classical hardware software inevitable thus qcps expected inherently heterogeneous classical quantum hardware software involved effect qas heterogeneity make challenging implement high softwarecohesion partii therefore qas maintainability reliability robustness reusability understandability get adversely affected due low cohesion heterogeneous environment also mean disparate element software hardware managed thus adversely affecting manageability testability system physical environment quantum hardware requires entirely different type physical environment existing implementation quantum hardware circuitry superconducting loop requiring ultra low temperature achieving maintaining physical condition necessitates specialized environment reliable operation qcp effect qas highly specialized physical environment needed qcp challenging create maintain operate effect ambient noise interference pronounced case qpus cpu property adversely affect qas availability due brittle nature physical qubits manageability scal ability due difculties quickly launching additional qpu instance testability system large form factor due requirement particular physical environment quantum computer today massive instance main box dwaveq system measure roughly ftftftin size effect qas qas except scalability remain unaffected property qcps large form factor make difcult augment qcp capability thus adversely affecting scalability energy efciency energy consumption looked two main aspect energy consumed qpu energy requirement cooling ancillary circuitry make quantum computer observed quantum computer spends energy cool ing qpu however consumes much le energy computation speed grow exascale petaops energy consumption qpu expected increase fast cpu gpu experiment conducted dwaves qubit system showed overall energy efciency improvement order compared stateoftheart classical computing server considering pure computation time running specialized algorithm effect qas except improving performance scalability property signicantly impact qas list remote software development deployment pro gramming tool ides debugger simulator software developer create quantum software invariably cloudbased minimal portion quantum programming tool stack deployed used programmer local machine development testing productionready quantum software programmer typically requires access remote qcp environment effect qas development tool environment used developing software qcp usually distributed nature decentralized typically offered via cloudbased ide development environment het erogeneous nature make programming testing debugging quantum program slower tedious adversely affect maintainability testability dependency known quantum algorithm exploit quantum computer real potential programmer must express software logic using quantum algorithm computing task one looking gain speedup running qcp typically mapped broken another task quantum algorithm known effect qas dozen quantum algorithm known different type problem software engineer map problem one existing quantum algorithm adversely affect ability perform enhancement corrective maintenance moreover probabilistic nature quantum computation result adversely affect testability interoperabil ity classical software synthesizing realistic pair hinputexpected output ifor test case scenario repro ducing defect one want debug requires particular approach ieee xplore restriction apply portability software quantum computing platform infancy though rapid growth lack standard necessary developing quantum program executed transparently different qpus signicant provider qcps offer proprietary programming apis tool effect qas qcps lack standardization several area ranging highlevel programming apis lowlevel hard ware example quantum program written using rigettis quantum isa may executable open qasm supported ibm portability software adversely affected qcps lack portability adversely affect part availability interoperability maintainability scalability quantum networking though longdistance quantum entanglement distribution feasible realizing practical quantum communication network still work progress moreover various nogo theorem please see section iia pose restriction extracting qubit state practical quantum software depends availability reliable quantum network would hard achieve effect qas reliable quantum network necessary building reliable highperformance quantum software make development nontrivial quantum soft ware tedious errorprone quantum network yet productionready thus performance scalability reliability availability adversely affected lack native quantum operating system quantum processor still controlled via classical computing operat ing system yet mature multitasking multiprocessing capability available quantum processor existing qcps expose quantum gate qubits direct manipulation programmer mature protocol apis implement example practical timesharing qpu available yet similarly quantum algorithm may exploit multiple qpus parallel yet explored effect qas native operating system help harness full potential hardware securely effectively lacking case qcps prohibits instance practical timesharing qpu thus performance man ageability reliability scalability security adversely affected part multitasking multiprocessing result due lack native quantum operating system pro grammer must rely classical computer achieving type multitasking multiprocessing given set qpus effect qas scenario effect described section iva fundamentally different programming model dis cussed section iid quantum program inherently probabilistic programmer looking harness power oftable iii impactof qcp characteristic qas qas characteristic availability interoperability maintainability manageability performance reliability scalability security testability usability platform heterogeneity special physical environment large form factor higher energy efciency lower level programming abstractionsu remote software development deployment dependency quantum algorithm portability softwareu quantum networkingu lack native quantum operating system fundamentally different programming model dependency classical storage cell value indicates impact favorable unfavorable unknown neutral qcp must identify design suitable quantum algorithm solve problem hand effect qas quantum program require fundamentally different approach programming please see section iid affect ease underlying technology turn code complexity essential factor inuence development maintenance dependable software thus qcp adversely affect maintainability interoperability security testability qas dependency classical storage though time storage entangled qubits feasible long term persistence qubits passive medium still impossible side feasible store arbitrary nonentangled qubits due different nogo theorem noteleportation page nocloning nodeleting theorem quantum nogo theorem disallow copy deletion transmission qubit state certain condition thus permanent persistence critical data quantum program still requires classical storage device effect qas durably persisting critical data quantum program depend classical storage device due different nogo theorem please see section iia quantum nogo theorem disallow copying deletion trans mission qubits certain condition restriction qcp adversely affect manageability performance scalability effect sdlc activity core activity involved software development requirement design engineering construction testing bugging deployment maintenance examine core activity likely affected building software qcps considered standard denitions various sdlc activity provided swebok analyzing ieee xplore restriction apply table impactyof qcp characteristic sdlc activity sdlc activity characteristic requirement design construction testing deployment maintenance platform heterogeneity special physical environment large form factor higher energy efciency lower level programming abstractionsn remote software development deploymentn dependency quantum algorithmsn portability softwaren quantum networkingn lack native quantum operating systemn fundamentally different programming modeln dependency classical storagen ycell value indicate whether sdlc activity impacted neutral activity may affected characteristic quantum platform requirement engineering considering denition requirement engineering task outlined swebok one safely deduce except analysis validation requirement engineering task affected nature target computing platform essential commonly employed tool requirement validation prototyping developing prototype demand handson knowledge target platform software architectural characteristic qcps affect analysis allocation requirement requirement validation via prototyping example lack ability store copy exact state qubits classical bit make impossible realize case depend copying information qcp similarly simulator available qcps pose difculties reliable prototyping simulator represent qpus small number qubits design engineering software design critical tivity software development primary goal deliver model dene blueprint solution implemented design mainly deal two signicant aspect software development dening structural decomposition system addressing essential quality attribute scalability performance reliability security usability almost qcp characteristic listed section affect software design developed qcp instance centralized deployment quantum program would limit design choice software architect whendistributing component solution qcp charac teristics dependency quantum algorithm portability quantum program affect ability realize various qas portability testability maintainability quantum software moreover native quantum service related multitasking multipro cessing qcp yet available limit design choice building scalability quantum software construction sdlc phase deal working software product per design arrived preceding phase effect adopted qcp implementing part software prominent phase three prominent aspect qcps affect phase also others programming model heteroge neous nature qcp iii decentralized development environment quantum computing take fundamentally differ ent approach programming expressing logic algorithm algorithm invariably probabilistic sig nicant implication qcps concerning software construction lack rich set quantum software library today twenty quantum algorithm known different type problem software engineer map problem one existing quantum algorithm critical limitation qcps phase dozen quantum algorithm every problem mapped easily one algorithm another implication writing software qcp serious programming one requires access least reasonably powerful machine simulate qcp typical alone sufce moreover access real quantum computer may hard requirement writing program certain type application scenario therefore developing software qcp expected follow client server model programmer pc program remotely perhaps via cloudbased ide qcp programming remote machine ide known limit programmer productivity testing debugging activity signicantly impacted ability detect isolate fault soft ware ease creating test assessment criterion system component iii ease executing test checking criterion met signicant implication activity arises probabilistic nature quantum computation result synthesizing realistic pair ofhinputexpected output ifor test case scenario reproducing defect one want debug require particular approach highlighted construction case centralized typically offered via cloudbased ide heterogeneous nature development environment make testing debugging quantum program slower tedious mainly happens qcp introduces additional layer please see communication ieee xplore restriction apply deployment activity affected factor ease system administrator manage software typically one relies instrumenta tion embedded system allowing system monitoring debugging performance tuning availability mature tooling support ease making change system two signicant aspect qcps software deployment perspective heterogeneous nature overall system please see unavailability full capability qcps organization country already highlighted quantum software application distributed deployment model com prising classical quantum software component application likely remain case entirely native qcps native operating system become reality heterogeneity inevitable measuring state qubit force collapse classical bit state difculties due nogo theorem copying moving data directly qubits classical device direct access fullpower qcps may difcult impossible many organization due potential misuse complexity sophistication qcps scenario implies access qcps controlled interfacing happen network thus requiring distributed deployment model software application maintenance maintenance software classied either correction enhancement former two type viz corrective preventive latter adaptive perfective regardless type maintenance following essential factor inuence maintenance software staff experience code complexity levelprogramming language abstraction easeofuse underlying technology considering characteristic qcps today score poorly factor instance programming qcps requires one work quantum gate level compose necessary quantum circuit implement quantum algorithm working lowlevels abstraction easy increase complexity code moreover many today least expert quantum programmer thus maintenance development general software easy qcps application impact information one critical outcome presented paper information qcps impact various qas sdlc activity information signicant plication evaluation design decision computing platform selection information presented table iii table easily used design decision support tool method one presented typ ically tool make multicriteria decision making technique maut topsis evaluate choice considering impact contributing factorson choice choice could design decision computing platform qcp nonqcp threat validity quantum computing fastevolving area technology characteristic qcps identied based study currently available stateoftheart quantum hardware software expect advance quantum com puting invalidate characteristic coming year example productionready native quantum operating system likely feasible year come list characteristic given exhaustive likely additional qcp characteristic taken together may signicance specic software development scenario would like highlight ndings derived published information qcps experimental programming qcps accessi ble likely unpublished feature information qcps affect quantum software applica tions software architecture next covered every relevant broader set application type may qas auditability distributability extensibility relevant may affected qcps onclusions programmer interest applying quantum computing surged recent past leveraging technology solving scientic business problem requires deeper understanding essential characteristic qcps particularly relevant software development shown critical characteristic qcp make entirely different classical computing plat form instance availability knowhow quantum algorithm solving task hand hard require ment developing quantum software application characteristic qcp affect various qas quantum software application qcp characteristic portability quantum program inability copy move delete qubits data certain condition dependency quantum algorithm adversely affect ability realize various qas scalability portability testability maintainability quantum application software qas favorably impacted qcp characteristic include performance scalability study qcps impact qas benecial design decision evaluation task sdlc activity require special handling building software qcp overall specialized nature qcps appears signicant implication limit qcps specialized application area performance chief importance however quantum computing undergoing rapid development expect tech nologys evolution likely introduce additional factor high likelihood affect architecture quantum software application ieee xplore restriction apply reference johnston quantumcomputing open box httpphysicsworldcomcwsarticlenewsmay quantumcomputingrmopensthebox physicsworldcom retrieved feb inc intel delivers qubit superconducting chip advanced packaging qutech http newsroomintelcomnewsinteldeliversqubit superconductingchipadvancedpackagingqutech intel inc retrieved feb knight ibm raise bar qubit quantum computer httpswwwtechnologyreviewcoms ibmraisesthebarwithaqubitquantumcomputer technolo gyreviewcom retrieved feb ibm ibm experience httpsquantumexperiencengbluemixnetqx experience ibm inc retrieved feb sodhi prabhakar assessing platform suitability achiev ing quality guest application asiapacic software engineering conference dec assessing suitability cloud oriented platform application development proceeding ninth working ieeeifip conference software architecture ser wicsa washington usa ieee computer society bass software architecture practice edition pearson bachmann bass klein illuminating fundamental contributor software architecture quality carnegiemellon univ pittsburgh software engineering inst tech rep deriving architectural tactic step toward methodical chitectural design carnegiemellon univ pittsburgh software engineering inst tech rep bass klein bachmann quality attribute design primo tives carnegiemellon univ pittsburgh software engineering inst tech rep caper jones economics software maintenance twenty century httpciteseerxistpsueduviewdocdownloaddoi repreptypepdf software productivity research inc retrieved bourque fairley guide software engineering body knowledge version ieee computer society linstone turoff delphi method technique application addisonwesley nielsen chuang quantum computation quantum information kwiat weinfurter embedded bellstate analysis phys rev wootters zurek single quantum cloned nature popescu rohrlich causality nonlocality axiom quantum mechanic causality locality modern physic springer pathak element quantum computation quantum communica tion taylor francis pati braunstein impossibility deleting unknown quantum state nature fingerhuth babej wittek open source software quantum computing plo one larose overview comparison gate level quantum software platform quantum leymann barzen falkenthal towards platform sharing quantum software proceeding advanced summer school service oriented computing weder barzen leymann salm vietz quantum software lifecycle proceeding acm sigsoft international workshop architecture paradigm engineering quantum software zhao quantum software engineering landscape horizon arxiv preprint arxiv leymann barzen bitter truth gatebased quantum algorithm nisq era quantum science technology inc introduction dwave quantum hardware httpswwwdwavesyscomtutorialsbackgroundreadingseries introductiondwavequantumhardwareh retrieved microsoft new microsoft breakthrough general purpose quantum computing move closer reality httpsnewsmicrosoft comfeaturesnewmicrosoftbreakthroughsgeneralpurpose quantumcomputingmovescloserreality retrieved inc rigetti qpu pyquil documentation httppyquilreadthedocsioenlatestqpuhtml rigetti inc retrieved brandl quantum von neumann architecture largescale quantum computing arxiv quantph arxiv online available httparxivorgabs inc dwave quantum computer technol ogy overview httpswwwdwavesyscomsitesdefaultlesdwave qtechcollateral fpdf retrieved microsoft microsoft quantum development kit http wwwmicrosoftcomenusquantumdevelopmentkit retrieved cleve ekert macchiavello mosca quantum algo rithms revisited proceeding royal society london mathematical physical engineering science royal society brassard hoyer mosca tapp quantph quantum amplitude amplication estimation httpsarxivorg absquantph retrieved grover fast quantum mechanical algorithm database search proceeding twentyeighth annual acm symposium theory computing acm hale hallgren improved quantum fourier transform algorithm application foundation computer science proceeding annual symposium ieee van dam seroussi efcient quantum algorithm estimating gauss sum arxiv preprint quantph venegasandraca quantum walk comprehensive review quantum information processing ambainis quantum walk algorithmic application international journal quantum information ottonen vartiainen bergholm salomaa quantum circuit general multiqubit gate phys rev lett inc rigetti qvm pyquil documentation httppyquilreadthedocsioenlatestqvmhtml rigetti inc trieved cross bishop smolin gambetta open quantum assembly language arxiv preprint arxiv smith curtis zeng practical quantum instruction set architecture arxiv quantph online available httparxivorgabs ibm corporation ibm quantum experience published online httpsquantumexperiencengbluemixnet microsoft get started quantum development published online httpswwwmicrosoftcomenusquantumdevelopmentkit rigetti computing introduction quantum cloud service pub lished online httpswwwrigetticomqcsdocsintrotoqcs cole eidenbenz pakin adedoyin ambrosiano anisimov casper chennupati coffrin djidjev quantum algorithm implementation beginner arxiv preprint arxiv andrez paz rolfhuisman andrew helwer lee james oriordan microsoft quantum development kit sample published github httpsgithubcomrigettigroveblobmasterexamples groversalgorithmipynb year rigetti computing rigetti forest sdk published online http wwwrigetticomforest smith robert curtis michael zeng william rigetti grove published github httpsgithubcomrigettigrove year microsoft pattern practice team microsoft application architec ture guide edition microsoft ieee xplore restriction apply isoiec isoiecen system software engineer ing system software quality requirement evaluation square system software quality model httpswwwisoorg obpuiisostdisoiecedven retrieved hsu much power quantum computing need httpsspectrumieeeorgtechtalkcomputinghardware howmuchpowerwillquantumcomputingneed ieee spectrum technology engineering science news retrieved ikonen salmilehto ottonen energyefcient quantum computing npj quantum information line available httpswwwnaturecomarticless inc computational power consumption speedup httpswwwdwavesyscomsitesdefaultlesa dwp computational power consumption speeduppdf dwave system inc retrieved fylaktopoulos goumas skolarikis sotiropoulos maglogiannis overview platform cloud based development springerplus online available http wwwncbinlmnihgovpmcarticlespmc shor progress quantum algorithm quantum information processing yin satellitebased entanglement distribution kilometer arxiv physic physicsquantph online available httparxivorgabs simon towards global quantum network nature photonics online available http wwwnaturecomarticless kimble quantum internet nature corrigangibbs boneh quantum operating system proceeding workshop hot topic operating system ser hotos acm clausen usmani bussieres sangouard afzelius riedmatten gisin quantum storage photonic tanglement crystal nature bussi eres clausen tiranov korzh verma nam marsili ferrier goldner herrmann quantum teleportation telecomwavelength photon solidstate quantum memory nature photonics pati braunstein impossibility deleting unknown quantum state nature sommerville software engineering addisonwesley richards software architecture pattern oreilly medium incorpo rated isoiecieee international standard software engineering software life cycle process maintenance isoiec ieee std revision ieee std wallenius dyer fishburn steuer zionts deb multiple criterion decision making multiattribute utility theory recent accomplishment lie ahead manage sci jul sodhi simplied description fuzzy topsis arxiv preprint arxiv ieee xplore restriction apply
research quality model quantum simulator software chao wang shanghai key laboratory computer software testing evaluating shanghai development center computer software technology shanghai china wcsscentershcn xuezhong shanghai key laboratory computer software testing evaluating shanghai development center computer software technology shanghai china wxzsscentershcn jingwei chen qudoor technology inc hefei china chenjingweiqudoorcn qianqian software engineering computer information engineering college shanghai polytechnic university shanghai china qqqcom jianxin shanghai key laboratory computer software testing evaluating shanghai development center computer software technology shanghai china gjxsscentershcn luo qudoor technology inc school physic astronomy sun yatsen university zhuhai china luolemailsysueducn abstract recent year demand arithmetic power walk life growing especially increasing popularity aigc make people realize huge technological progress made without support large arithmetic power quantum computing may bring leap computing power become trigger catalyst accelerate development science technology innovation technical development trend application prospect become hot issue concern quantum simulator important part development process development quantum simulator important part process however due lack systematic evaluation theory method difficult quantify analyze quality increasing number simulator market may hinder researcher practicing quantum algorithm objectively developing quantum technology reason paper proposes quality model quantum simulator software reflects quality characteristic simulator seven aspect functionality performance efficiency selects simulator experimental validation proposed model prove rationality keywordsquantum simulator software quality evaluation introduction quantum computing utilizes unique property quantum bit superposition entanglement achieve exponential increase representational capacity storage capacity parallel computing ability provides industry potentially powerful new computing paradigm intractable problem classical computing may solved quantum computing real machine scalability encounter technical bottleneck utilizing abundant classical computing resource simulate quantum computing essential important way quantum computing theoretical research algorithm design application exploration important tool mean quantum computing simulation research theoretical design implementation evaluation standardization simulator significant significance find functionality performance two main aspect evaluation standard quantum simulator design purpose simulator play decisive role functionality different design purpose require different functionality practice development simulator often multiple purpose meaning diversity design purpose significant various simulator home abroad launched development different design purpose requirement function characteristic performance singlemachine simulation parallel simulation distributed simulation partial simulation fully simulation languagelevel simulation specific algorithm simulation specific physical model simulation general simulation addition user also different characteristic requirement simulator ease correctness stability universality completeness scalability representation quantum state quantum gate determines temporal spatial performance simulator first problem solved simulator design development direction new generation simulator parallelism multithreading multicore multicpu gpu heterogeneous computing accelerate computation multiple processor distributed quantum computing simulation solve largerscale problem relatively little research evaluation quantum computing simulator currently corresponding evaluation standard method case etc almost blank area developing evaluation standard evaluating quantum simulator guiding development quantum simulator quantum computing important guiding significance innovation paper propose quality model quantum simulator software demonstrate experimentally feasibility model derive result ieee snpd july taiyuan china acis international winter conference software engineering artificial intelligence networking paralleldistributed computing snpdwinter ieee doi snpdwinter ieee xplore restriction apply valuation selected quality model identify advantage simulator common problem elated work quantum simulator software quantum computing research began entered stage engineering experimental verification principal prototype quantum computing contains quantum processor coding algorithm software key technology reaching number quantum bit quantum fault tolerance engineering condition required generalpurpose quantum computing dedicated quantum computer quantum simulator become next important milestone development quantum computing quantum system simulation molecular mechanism analysis optimization large data set machine learning algorithm development typical application effectively exploit processing advantage quantum computing area quantum system simulation molecular mechanism resolution optimization large data set acceleration machine learning algorithm open door radicalization quantum computing meanwhile quantum simulator solve difficult problem classical computer providing mean explore new physical phenomenon many simulator developed home abroad previously quantum insider published list top simulator like intel quantum simulator one mainstream simulator us matrix calculation optimization algorithm sparse matrix evolution quantum system mainly determined schrdinger equation shown classical simulation start solving differential equation quantum simulation actually similar solving schrdingers equation know hamiltonian quantity without time solution take form shown software quality model jim mccalls software quality model also known model mccall attempted bridge gap developer end user series software quality attribute boehm software quality model attempted quantify software quality series attribute isoiec model built mccall boehm model addition functional requirement identification internal external quality attribute software product isoiec replaced isoiec deprecated software quality model contains characteristic decomposed multiple internal external sub characteristic measured model cover many industry provides effective assistance development software widespread aigc error reference source found also proposed corresponding quality model development software construction technique influenced creation model assessing quality paper quality model proposed quantum simulator besides benchmark evaluation objective evaluation method play important role development many field computer artificial intelligence cloud computing also play driving role development application exploration quantum computing technology currently research quantum computing benchmark evaluation technology standard mainly focus real machine focusing developing applying quantum computing prototype among two benchmark testing method proposed ibm quality evaluation clop speed evaluation become industry facto standard evaluating quantum computer iii uality model typically evaluate quality classical software using model raised isoiec evaluation method mentioned isoiec quantum simulator software based classical computer essentially used kind classical software simulate scientific research process quantum computing therefore propose quality model based characteristic quantum simulator software referring isoiec used evaluate whether quality quantum simulator software meet expectation find shortcoming retained measure classic software quality model including functional suitability performance efficiency usability reliability security maintainability considering quantum simulator software generally run independent relatively fixed classical computing environment required compatible simulator software compatibility portability measure longer included quality model user documentation set also essential guiding researcher completely new software domain effectively measure quality well combining requirement quantum simulator software specific capability simulation accuracy computational speed maximum simulation size redesign evaluation submetrics evaluate quality quantum simulator software effectively proposed quantum simulator software quality model shown quality model quantum simulator software ieee xplore restriction apply also design measurement method measure subcharacteristics set initial weight lue weighted accumulated shown obtain quality score evaluated quantum simulator software quantify software quality according score initial weight measure shown able rationality weight setting analyzed based experimental result optimized subsequent work represents total score one measure represents weight measure table initial weight measure initial weight measure measure weight measure weight functional suitability security performance efficiency maintainability usability reliability user documentation set total functional suitability quantum simulator quantum computer ba classical computer simulating working proces quantum computing scientific research software mainly sed simulate behavior quantum system design quantum computing algorithm view characteristic evaluate imp lementation term functionality following spects completeness functional completeness refers extent whi feature set cover specified task user goal typically requirement document user manual character ize functional completeness score percentage coverage following two degree cover functional suitability submeasures calculated way correctness functional correctness refers extent whic quantum simulator software provides correct result required accuracy submeasure talked gene ric function simulation accuracy evaluated othe functional submeasures suitability functional suitability refers extent whic capability quantum simulator software cont ribute achievement specified task goal simulation accuracy simulating evolution quantum system ecessary feature implemented quantum simulator softwa characterize score submeasure compa ring evolution expected benchmark quantum computi algorithm result obtained software compared traditional computing indicator uniqu quantum simulator prediction accuracy benchmark quantum algorithm supported scale real quantum computing device make predic tions quantum simulator software derive well xpected result match real resultscompared tradit ional computing indicator unique quantum simu lators performance efficiency stage performing simulation operation quantum simulator software make full established resource obtain accurate result quickly possible condition maximum simu lation size degree adaptability different pe quantum problem directly determine whether software universal therefore design quality evaluation dimensi quantum simulator term performance efficienc follows computing speed maximum simulation size supported type according calculation speed maximum simulat ion size number different type problem tha quantum simulator software need achieve user ocumentation especially specified product description actual implementation different kind simulated quan tum computing algorithm verified actu performance efficiency evaluated result quality specified user documentation evaluation performance efficiency quality fers benchmark test method result benchmarking quantum simulator using quantum chaos benchmark ndicators resource utilization resource utilization refers extent quantity type resource used quantum simulator software perform function meet demand quality odel specify cpu memory occupancy exce perfect score take median ove score submeasure memory cpu calculate separately finally combine value bmeasure score usability term usability combined quality eval uation classical software characteristic quant simulator software meet need changing usage scenar io designed five submeasures operability interface friendliness comprehensibility usability subcharact eristic classical software quality model addition configurability programmability measure fectively evaluate whether quantum simulator software widely promoted used believe two featur play important role quality evaluation usabili quality evaluation following submeasures quantit atively divided possessive imperfect nonexistent excellent good average level operability operability used evaluate degree quantum simulator easy operate control indicator operation consistency message clarity function customization evaluated ieee xplore restriction apply configurability component connector data element sim ulator reused application without modific ation used establish extent multip system asset reusable programmability programmability offer useful expansion enabli user customize important parameter replicate comp utation logic certain simulation scenario additionall researcher find simulator software simple understandability submeasure used ass extent ich quantum simulator used user term effectiveness efficiency risk resistance satisfaction learning using specified goal specified usage cont ext evaluate integrity user guidance default lues input field ease understanding error information self interpretation user interface interface friendliness user interface friendliness used ass egree user interface provides pleasant satisf ying interaction determining consistency interfac layout color layout interactivity input output reliability reliability refers degree quant simulator software performs specified function der specified condition within specified period maturity maturity refers extent quantum simu lator software meet reliability requirement norm operation specific indicator reliability speci fied user documentation set compared user documentation set measure accordi requirement hour stable operation availability quantum simulator unavailable due ilure necessary record repair time average downtime time compare actual running time provi ded system specified running time determine availability simulator fault tolerance controllability quantum simulator fault occur failure avoidance efficiency component redundancy average failure notification time simula tor evaluated obtain fault tolerance degree simulator recoverability whether quantum simulator recovered dire ctly restarted continued simulation event outage failure requires assessment mea recovery time data backup integrity security determining extent security measure required ensuring effectiveness quantum simulator software protect information data propose submeasure integrity ensuring data accessed furt protects security information confidentiality confidentiality degree simulato guarantee data accessed whether software designed implemented user authentication function module whether softwar authentication information invisible corresponding antiattack ability encrypti method method security intensity rry security protection storing transmitting integrity integrity refers extent simulat prevents unauthorized access tampering simulated computing program data quantification graded ully preventable partially preventable unrealized maintainability maintainability refers degree effectivene efficiency quantum simulator software modified intended maintainer reusability extent component connector data element simulator reused plication without modification used build multi ple system asset determine reusability avai lable analyzability analyzability refers extent ossible ass impact expected change simula tor diagnose cause defect failure mulator identify effectiveness efficiency rts modified time quantum computing imulation ease analysis simulation result also factor quantitative value analyzability divided three level easy analyze average analyze difficult analyze dev maintenance plan considering rapid development quantum eld technology may change improve time whic lead problem quantum simulator software longer updated maintained encounter problem longer adapted new environment longterm development maintenance plan product allo user conclude whether simulator worth using certain period incorporate quality model user documentation set user documentation set mainly evaluates qua lity document including whether easily access ible whether key element included etc product quality usage quality also considered quality model quantum simulator main way quantify measure examining whether element clearly stated user documentation set easy user underst ieee xplore restriction apply experiment analysis environmental preparation ensure experimental result aff ected environmental variable experiment conduc ted environmental condition ensure sci entific accurate experimental data hardware config uration information test environment three imulators follows operating system centos linux core cpu intelr xeonr gold cpu ghz memory hard disk space algorithm description grover quantum search algorithm used te three simulator grover algorithm algorithm based rando mized search part quantum random walk algor ithm used solve largescale search problem ore idea exploit advantage quantum computer incr ease efficiency search reducing search ran search space exponential rate grover algorithm input set containing element targ element algorithm first initializes element random quantum state transforms element as ociated special state using quantum gate operation next algorithm randomly selects element swap element associated thus remo ving special state finally algorithm rand omly initializes element repeat step target element found simulator evaluation qutrunk projectq find target state defining number quantum bit iter ations simulated quantum simulator target stat search random state display probabili iteration quest define bit bit string output corresponding bit alternate bit string simu lation testing three simulator using grover algorithm result simulator shown functional fitness evaluate functional compliance correctne selected three quantum simulator software based function listed relevant instruction docume nt implemented found qutrunk realized quantum circ uit foundation quantum computing backend quantum gat operation quantum operator function specified relevant document functional test case designed executed passed including building quantu circuit executing quantum gate operation visualizing quan tum output circuit printing quantum circuit running quantu circuit obtaining correct result obtaining corresponding probability circuit state obtaining state vector exp orting quantum circuit deserializing file object running antum circuit calculating expected value quantum circuit used test method perform functional test bot projectq quest quantum simulator projectq implemented function proposed document quantum random number quantum teleportation shors algorithm factoring correctly quest also met expectation term established function density matrix mix ing calculation hamiltonians diagonal operator complex number three simulator mentioned passed evaluation result term relevant docum entation description specific software implementation imensions simulation accuracy quantum simulator pends many factor number quantum bit accuracy simulator computational sou rce largescale quantum computing real quantum comp uting environment real machine noise interference etc real prediction accuracy related native gate encoding method specific algorithm impl emented real part complex probability amplitude qutrunk projectq quest imaginary part double precision quest also set sing precision quadruple precision simulate qua ntum computing process higher precision performance efficiency based existing test environment grover algorithm computes slower rate qutru simulator faster rate quest sim ulator moderate rate projectq simulator maximum simulation size hardware dependent three type simulator basically satisfy common type quantum computing quantum search proble represented grover algorithm quantum decomp osition problem quantum optimization problem quantu approximation problem quantum computing simulation mainly matrix operation quantum algorithm mostly compu tationally intensive cpu usually fully loaded duri execution three type simulator ensure classical computing environment smooth state availability availability performance indicator shown table table usability indicator usability dicators qutrunk projectq quest operability configurability programmability comprehensibility ieee xplore restriction apply interface friendliness reliability three simulator complete corresponding quantum computing process within specified time rame failure condition abnormal power failure execution sufficient recovery time bei related corresponding hardware facility security existing simulator security requir ements consider maintainability regular update regular update simulator including fixing known bug error introducing new eatures technical support technical support prov ided including answering user question providing sistance official forum mailing list social edia channel user feedback user welcome provide feedback suggestion open sourcethe three simulator fully open sou rce code posted github user participation aintenance encouraged user documentation set user documentation set set document writ ten help user better understand simulator document cover aspect simulator inclu ding installation configuration using managing virtual environment write run code mai detail reviewed table iii table iii user documentation set function point user documentation set function point qutrunk projectq quest easy learn available contains keywords complete description correct consistent easy understand product quality description description description valid quality description description description data analysis quantitative eva luation module three simulator carried method displaying area score interval considered facilitate intuitive qua lity differentiation result shown property score quantum simulator qutrunk property score quantum simulator projectq property score quantum simulator quest based initial weight metric mulator score result calculated calculation formula abcdefg total simulator evaluation score total nctional suitability evaluation score total perfor mance efficiency evaluation score total usability evaluati score total reliability evaluation score tal maintainable line evaluation score total score user documentation set evaluation calculation evaluation score qutrunk projectq achieved evaluation score ile quest achieved result analysis summary result analysis three simula tor simulate computing process performance quantum computer simulate different type qua ntum computer perform various quantum algorithm quan tum communication quantum encryption quantum chemi stry quantum neural network term usability reliability maintainabi lity three simulator perform well meet requiremen large extent term performance efficiency quest fficient run faster support largerscale quantum syste relatively powerful term programmable maintenance qutrunk projectq written python provides gherlevel programming interface compared quest offering oncepts like quantum template quantum route quantum gate making intuitive easier understand write quantum program future work continue select quantum algorithm test benchmark input increase application tness rather functional suitability performan efficiency usability reliability maintaina bility user document ation set qutrunk functional suitability performanc efficiency usability reliability maintainab ility user documenta tion set projectq functional suitability performan efficiency usability reliability maintaina bility user document ation set quest ieee xplore restriction apply using one algorithm foundation ind expand number software quality assessment quantum simulator worldwide expand number experi ment sample demonstrate rationality model fully discover shortcoming model futu iteratively optimize proposed model con tinuous experiment refining feature imensions current quality model quantifying finegra ined evaluation assigning weight acknowledgment author would like thank reviewer heir suggestion work paper supported science technology commission shanghai municipalitychin nosdzdz reference gyongyosi laszlo imre sandor survey antum computing technology computer science review ladd thaddeus jelezko fedor laflamme aymond nakamura yasunobu monroe christopher brien jeremy lloyd quantum computer nature yazhen wang quantum computation quantum informa tion arxiv johnson tomi clark stephen jaksch eter quantum simulator epj quantum technology buluta iulia nori franco quantum simulator science guerreschi gian giacomo hogaboam justin aruffa fabio sawaya nicolas intel quantum simulator clo udready high performance simulator quantum circuit quantum science technology iso iso iec system software engi neeringsystems software quality requirement evaluation quaresystem software quality model international organizatio standardization cao yihan siyu liu yixin yan zhi ling dai yutong philip sun lichao comprehensive survey generated content aigc history generative gan chatgpt arxiv preprint arxiv cross andrew bishop lev sheldon sara nation paul gambetta jay validating quantum computer using randomized model circuit physical review wack andrew paik hanhee javadiabhari jurcevic petar faro ismael gambetta jay john son blake quality speed scale three key attribute measure performance nearterm quantum computer arxiv preprint arxiv isoiec isoiec system software ngineering system software quality requirement evalu ation square requirement quality ready software roduct rusp instruction testing mark daniel choi joonhee shaw adam endres manuel choi soonwon benchmarking quantum sim ulators using quantum chaos arxiv preprint arxiv ieee xplore restriction apply
owards set metric quantum circuit understandability jos cruzlemusb luis marcelo mario piattini institute technology information system escuela superior informtica university castillala mancha ciudad real spain joseantoniocruzmariopiattiniuclmes luisalbertomarceloaluuclmes abstract quantum computing basis new revolution several quantum computer already available quantum programming language quantum software development kit platform quantum error correction optimization tool proposed presented continuously connection withthis discipline quantum software engineering appearing applying knowledge acquired time corresponding classical relative besides measurement well known key factor assessing andimproving needed quality model term instance standability easier understand model easier maintain reuse etc work present denition set metric assessing theunderstandability quantum circuit example calculation metric also presented beginning thorough process empirically validated performance empirical studiesespecially experiment keywords quantum circuit quantum metric quantum circuit understandability quantum circuit complexity introduction thcentury machine age thcentury information age stcentury quantum age several knowledge business area might beneted quantum computing economics nance service chemistrymedicine health supply chain logistics energy agriculture cybersecurity articial intelligence etc fact several quantum computer already available dwave google quan tum ibm ionq microsoft quantum rigetti etc dozen quantum programming language openqasm language qgcl qiskit qml quipper quantum software development kit cirq forest orquestra qdk qiskit platform forge liqui experience quantum inspire quantum play ground quantum error correction optimization tool proposed recent year several quantum algorithm created since seminal one ofshor grover deutsch springer nature paiva ed cruzlemus besides quantum software manifesto promoted several researcher practitioner state given recent rapid advance quantum hardware urgent step effort quantum software manifesto stress importance quantum software quantum software enough necessary step raise awareness quantum software engineeringqse produce quantum software adequate quality productivity main approach quantum computing gatebased quantum computing consisting dividing algorithm sequence basic primitive operation gate one used tool creating quantum program quantum circuit exist several quantum circuit simulator quirk ibm us circuit main element qiskitprogramming quantum circuit could taken quantum software model must standable exible enough easily incorporate modications reect change thing model well known model easy understand easier maintain reuse etc fact understandability traditionally recognized one main factor inuencing software quality desired changed ofany model including quantum circuit identied designed implemented must well understood understandability conceptual model widely recognized literature relevant quality attribute far concerned studied yet context quantum circuit claim important quantum programmer designer understand quantum circuit properly order design high quality circuit ideain mind would important metric conceptual level stated talavera manifesto quantum software engineering must agnostic intends precisely main contribution work initial proposal set metric establishing basis measurement quantum circuit understandability remainder paper sect introduces overview quantum circuit sect summarized related work focusing several metric already proposed related different aspect quantum software sect present set proposed metric example calculation explained sect nally sect highlight main conclusion work together following step taken future work quantum circuit circuit model quantum computation describes computation term circuitcomposed simple gate followed sequence measurement quantum circuit originally described deutsch stan dard acyclic variant quantum circuit model proposed investigated fewyears later yao httpsalgassertcomquirk httpsqiskitorg towards set metric quantum circuit understandability quantum circuit generalizes idea classical circuit family replacing gate elementary quantum gate also represented nxnmatrices applied nqubits signicant distinction classical cmos quantum circuit design quantum mechan ical operation unitary reversible every quantum circuit composed gateswhich represent quantum mechanical operation thus quantum circuit must onetoone correspondence reversible quantum circuit design er must reversible gate sometimes additional resource cost ancillaqubits related work lot research metric classical conceptual model quantum software quantum circuit exist quantum volume metric summarizes performance factor number physical qubits number gate con nectivity device number operation run parallel thought hardware performance metric measuring useful amount quantum computing done device space time alternative mean malizing quantum algorithm complexity reduction physical layer implementation cost quantum circuit simulation quantum volume useful quantum researcher systematically measure understand incremental technology conguration design change affecta quantum computer overall power performance also would benet ceo investor lack indepth technical knowledge necessary make condent investment decision technology maslov miller proposed three different measure ncv cost circuit composed ncv gate number gate quantum cnot controlledv controlledv circuit ncv cost ncv circuit linear weight associated gate cnot controlledv controlledv respectively ncv cost ncv circuit linear weight associated gate cnot controlledv controlledv respectively used metric breadthrst search method determining optimal line circuit composed quantum circuit thapliyal muozcoreas point different quantum circuit performance measure qubit cost total number qubits required design quantum circuit gate count total number gate used quantum circuit httpswwwforbescomsitesmoorinsightsquantumvolumeayardsticktomea surethepowerofquantumcomputersshbbacdbf cruzlemus garbage output output exist preserve reversibility primary input useful output ancillae constant input quantum circuit depth number gate layer circuit oumarou propose quantify opensource framework quan titative analysis quantum circuit metric used number physical qubits determined width computation amount time operatingthe physical qubits determined depth computation metric also inuence total energy consumed perform computation miller propose tcount number toffoli fredkin csw gate produce accurate resource estimation implemented circuit azad us circuit size circuit depth interaction connection different qubits circuit centric quantum architecture design author focus quantum metric quantum algorithm complexity instance chaudhuri dene metric number gate required network quantum cost number twoqubit gate required generating given network complexity network quantum cost reversible function dened assummationtext ntofx tofx ii cost ith toffoli gate complexity given mvariable reversible function given bysummationtextm iaibi iand iare corresponding minputoutput haug investigate capacity trainability hardware efcient pqc parametrized quantum circuit using quantum geometric structure parameter space introduce effective quantum dimension parameter dimensiondc quantitative measure capacity pqc parameter dimension measure total number independent parameter quantum state dened pqc express effective quantum dimension local measure quantifythe space state accessed locally perturbing parameter pqc buet focus quantum machine learning measure power learning model depends statistical complexity proposing measure vapnikchervonenkis dimension metric entropy rademacher complexity gaussian complexity nevertheless algorithm learning model computational complexity resource hardware oriented cost metric enough necessary dene metric considering quantum software complexity sense sicilia propose preliminary study structure source code quantum software using initially metric typically used classical software focused language metric dened alogical level conceptual one zhao recently proposed software metric measure inherent complexity quantum software measuring code size linesofcode loc halsteads software science design size considering architectural design size detailed design sizetowards set metric quantum circuit understandability specication size based extension uml called quml counting number quantum class object number quantum element quantumvariables quantum operation number quantum interface number quantum attribute number quantum method bestknown artifact designing quantum software quantum circuit review stated section could conclude still need quantum circuit metric oriented designer need understandability amongothers metric proposal section denition proposed metric assessing understandability quantum circuit presented grouped several category circuit size intuitively bigger circuit complex understood width number qubits circuit depth maximum number operation applied qubit circuit circuit density show several equivalent circuit gate deployed differently thus density circuit referred quantity gate applied qubit circuit certain step maxdens maximum number operation applied circuit qubits parallel vgdens average number operation applied circuit qubits parallel two equivalent circuit different density single qubit gate commonly used gate quantum circuit cruzlemus nopx number paulix gate nopy number pauliy gate nopz number pauliz gate tnop total number pauli gate circuit calculated addition previous three noh number hadamard gate spposq ratio qubits hadamard gate initial gate qubits superposition state noothersg number othersinglequbit gate circuit tnosqg total number singlequbit gate tnocsqg total number controlled singlequbit gate multiple qubit gate gate involving several qubits input output nocanyg number controlled gate nosw number swap gate nocnot number controlled cnot gate qincnot ratio qubits affected cnot gate controlled target qubit cnot considered affected calculation metric vgcnot average number cnot gate targeting qubit circuit maxcnot maximum number cnot gate targeting qubit circuit number toffoli gate qint ratio qubits affected toffoli gate controlled qubit target qubits taken account affected calculation vgt average number toffoli gate targeting qubit circuit maxt maximum number toffoli gate targeting qubit circuit gate circuit nogate total number gate circuit nocgates total number controlled gate circuit sgates ratio single total gate oracle aware certain characteristic relative oracle quantum circuit could affect understandability behaving black box possible calculated nevertheless thorough study oracle affect understandability quantum circuit intended future work referred singlequbit gate pauli hadamard gatetowards set metric quantum circuit understandability noor number oracle circuit nocor number controlled oracle circuit qinor ratio qubits affected oracle input qubits oracle considered affected calculation metric qincor ratio qubits affected controlled oracle controlled qubit input qubits oracle considered affected calculation metric vgord average depth oracle circuit maxord maximum depth oracle circuit measurement gate noqm number qubits measured ratio qubits measured anc ratio ancilla auxiliary qubits circuit denition metric step mainly based experience author dealing model understandability measurement metric validity term relationship understandability quantum circuit need conrmed performance empirical study experiment metric calculation example section couple example used illustrating calculation metric proposed previous section table show calculation applied example two example quantum circuit cruzlemus calculation proposed metric metric value leftvalue rightexplanation width depth measurement gate taken account maxdens avgdens nopx cnot taken account nopy nopz tnop noh spposq noothersg tnosqg tnocsqg nocanyg nosw nocnot qincnot avgcnot maxcnot notoff qintoff avgtoffq maxtoffq nogates nocgates sgates noor nocor qinor qincor avgord oracle depth maxord noqm anc conclusion future work involved dawning new era software quantum computing take limitation established hardware traditional computer establishing strong foundation creating new discipline quantumsoftware engineering qse crucial one main principle qse set establishment qse agnostic regarding quantum programming language technology assures quality quantum software thus awaretowards set metric quantum circuit understandability easier understand quantum circuit kind modeling artifact easier task quantum software debugging testing general maintainingit become necessary develop several refactoring technique quantum circuit allow improve understandability new improved equivalent versionwhich keep every original functionality work introduced set metric assessing understandability quantum circuit step step several challenge put effort one obviously consists validation set metric performance empirical study experiment case study intention also develop software tool able automatize calculation validated metricsas well correct visualization interpretation result also intend explore denition set complex metric derived initial set metric proposed paper get empirically validated possible correlation interaction among metric also estudied also interested closer look presence oracle affect understandability quantum circuit moreover able spot design pattern quantum circuit another topic able face future another promising topic qse extent set metric used easingthe reuse circuit could allow designbyreuse quantum circuit nearby concept also interested studying depth subcir cuits quantum circuit quantum algorithm come normally sequence ofelementary gate measurement many quantum algorithm naturally described term manipulation level entire subcircuits rather individ ual gate method introduced break circuit smaller subcircuits fragment thus make possible run circuit either wide deep given quantum processor consider circuit fragmentation could promising order increase quantum circuit understandability finally interesting aspect study future extent complexity quantum circuit affect complexity quantum program generated different existing quantum platform acknowledgment would like thank aquantum member especially guido peterssen pepe hevia help support work partially funded qhealth quantum pharmacogenomics applied aging project part cdti mi sion program center development industrial technology ministry scienceand innovation spain gema testimo project funded consejera edu cacin cultura deportes junta comunidades castilla mancha fondo europeo desarrollo regional feder grant sbply gema andsbply testimo reference abhijith quantum algorithm implementation beginner arxivv cruzlemus allouche baboulin goubault brugire valiron reuse method quantum circuit synthesis kilgour kunze makarov melnik wang ed ammcs spms springer cham ayral rgent saleem alexeev suchara quantum divide compute hardware demonstration noisy simulation arxivv azad papneja saini behera panigrahi circuit centric quantum architecture design iet quantum commun bishop bravyi cross gambetta smolin quantum volume httpsstorageco nsortiumdecontentsitesdefaultlesquantumvolumehpcovboccfrpdf accessed may koh luo zhang effect quantum resource statistical complexity quantum circuit arxiv burgholzer wille advanced equivalence checking quantum circuit ieee trans computaided de integr circuit syst httpsdoiorgtcad chaudhuri sultana sengupta chaudhuri novel reversible two com plement gate tcg quantum mapping device integrated circuit devic kalyani india cruzlemus maes genero poels piattini impact structural complexity understandability uml statechart diagram inf sci deutsch quantum computational network proc soc lond garhwal ghorani ahmad quantum programming language systematic review research topic top cited language arch comput method eng genero piattini calero survey metric uml class diagram object technol genero manso visaggio canfora piattini building measurebased prediction model uml class maintainability empir softw eng genero piattini chaudron quality uml model inf softw technol green lumsdaine ross selinger valiron quipper scalable quantum programming language acm sigplan gyongyosi imre optimizing highefciency quantum memory quantum machine learning nearterm quantum device sci rep haug bharti kim capacity quantum geometry parametrized quantum circuit arxivv humble thapiliyal muozcorreas mohiyaddin bennink quantum computing circuit device ieee de test larose overview comparison gate level quantum software platform quantum arxivv maslov miller comparison cost metric reversible quantum logic synthesis iet comput digital tech miller quantum resource count operation constructed addition circuit ieee computer society annual symposium vlsi isvlsi limassol cyprus mosca roetteler selinger quantum programming language dagstuhl seminar dagstuhl rep nelson poels genero piattini quality conceptual modeling example state art data knowl eng towards set metric quantum circuit understandability nielsen chuang quantum computation quantum information cambridge university press oumarou paler basmadjian quantify framework resource analysis design verication quantum circuit ieee computer society annual symposium vlsi isvlsi limassol cyprus prezdelgado perezgonzalez towards quantum software modeling language first international workshop quantum software engineering qse piattini peterssen prezcastillo quantum computing new software engineering golden age acm sigsoft softw eng newsl piattini talavera manifesto quantum software engineering program ming international workshop quantum software engineering programming qanswer talavera reina spain piattini serrano prezcastillo peterssen hevia toward quantum software engineering prof rieffel polak quantum computing gentle introduction mit press serrano trujillo calero piattini metric data warehouse conceptual model understandability inf softw technol sicilia snchezalonso moracantallops garcabarriocanal source code structure quantum code insight qdk brito eabreu rodrigues silva prezcastillo ed springer cham thapliyal muozcoreas design quantum computing circuit prof yao quantum circuit complexity proceeding annual ieee symposium foundation computer science palo alto usa zhao quantum software engineering landscape horizon arxivv zhao size structure metric quantum software second international workshop quantum software engineering qse colocated icse madrid spain arxivv
size structure metric quantum software jianjun zhao kyushu university zhaoaitkyushuuacjp abstract quantum software play critical role exploiting full potential quantum computing system result drawing increasing attention recently research quantum programming reach maturity number active research practical product software metric researcher need focus new paradigm evaluate rigorously quantitatively step paper proposes basic metric quantum software mainly focus measuring size structure quantum software metric dened different abstraction level represent various size structure attribute quantum software explicitly proposed metric used evaluate quantum software various viewpoint index term quantum software metric quantum software engineering quantum software design ntroduction software metric aim measure inherent complexity software system predict overall project cost evaluate quality effectiveness design soft ware metric many application software engineering task testing maintenance reengineering reuse project management research software measurement must adapt emergence new software development method metric new language design paradigm must dened based model relevant new paradigm quantum programming process designing building executable quantum computer program achieve particular computing result number quantum programming approach available instance scaf fold qiskit projectq quipper quantum program consists block code contains classical quantum component quantum operation divided unitary operation reversible preserve norm operand nonunitary oper ations reversible probabilistic implementation quantum program executed quantum computer us quantum register qubits perform quantum operation classical register classic bit record measurement qubits state apply quantum operator condition ally research quantum programming reach maturity number active research practical product software metric researcher need focus new paradigm evaluate rigorous quantitative fashion however although large number software metric havebeen proposed classical software metric proposed quantum software due quantum software specic feature existing model abstraction classical software applied model quantum software straightforwardly step towards evaluating quantum software paper proposes basic metric quantum software mainly focus measuring size structure quantum software metric dened different straction level represent various size structure attribute quantum software explicitly proposed metric used evaluate quantum software various viewpoint rest paper organized follows section review fundamental terminology quantum computing section iii section propose basic size structure metric quantum software respectively related work discussed section concluding remark given section ackground section briey introduces basic quantum mechanic form basis quantum computing quantum bit classical bit binary unit information used classical computation take two possible value quantum bit qubit different classical bit state theoretically represented linear combination two base quantum state space represented column vector length dene two qubits jiand described andji qubitsjiandjiare computational basis state qubit word set basis quantum state space qubitjeican expressed linear combination two basis asjei complex number andj also called normalization condition quantum gate circuit logic gate digital circuit modify state bit quantum gate change state aarxivv csse mar qubit quantum gate one input one output transition single quantum state multiple input multiple output transition multiple quantum state number input output equal operator need reversible mean information lost quantum computing gate gate work single qubit exchange coefcients two basis vector quantum gate extension gate classical digital circuit single inputoutput quantum gate represented matrix state quantum state passing quantum gate determined value quantum state vector leftmultiplied quantum gate matrix quantum gate matrix corresponding gate isx therefore result qubit passing gate denoted hadamard gate hadamard gate also work single qubit decompose existing quantum state according coefcients follows represented matrix although hadamard gate directly related gate classical digital circuit important plication many quantum computing algorithm interested reader try prove applying hadamard gate twice row quantum state return original state behavior consistent gate controlled gate computer program full conditional judgment statement otherwise something else quantum computing also expect state one qubit changed another qubit requires quantum gate multiple input output following controllednot gate cnot gate two input two output input output taken whole state expressed jiji wherejijijijiare column vector length generated concatenating jiandji state also need satisfy normalization condition jjj cnot gate twoqubit operation qubit usually referred control qubit second qubit target qubit control qubit state leaf target qubit unchanged controlqubit stateji leaf control qubit unchanged performs paulix gate target qubit expressed mathematical formula follows cnot jiji jiji action cnot gate represented matrix quantum circuit quantum circuit also known quantum logic circuit commonly used general purpose quantum computing model represent circuit operate qubits abstract concept quantum circuit collection interconnected quantum gate actual structure quantum circuit number type gate interconnection scheme determined unitary transformation performed circuit result quantum circuit read quantum measurement quantum programming quantum programming process designing building executable quantum computer program achieve particular computing result quantum program consists block code contains classical quantum component quantum operation divided intounitary operation reversible preserve norm operand nonunitary operation reversible probabilistic implementation quantum program executed quantum computer us quantum register qubits perform quantum operation classical register classic bit record measurement qubits state apply quantum operator conditionally therefore typical quantum program usually consists two type instruction statement one called classical instruction operate state classical bit apply conditional statement another called quantum instruction operate state qubits measure qubit value iii asic sizemetrics quantum software software size represents one signicant internal attribute software product many software effort estimation model size metric main effort driver estimate software development effort section introduce basic metric used measure size quantum software different level code design specication code size program code integral component software code includes source code intermediate code even executable code focus source code quantum software discus widely used size metric classical software extended measure size quantum software simulator aergetbackend qasmsimulator qreg quantumregister creg classicalregister circuit quantumcircuit qreg creg circuit circuit circuit circuit cxqq circuit circuit iinrange circuit measure job execute circuit simulator result job result count result getcounts circuit print count simple quantum program qiskit linesofcode loc know commonly used metric source code program length number line code loc loc metric used predict amount effort required develop program also used estimate programming productivity maintainability software product completed similarly quantum software may also consider loc metric measure internal attribute software specically related quantum attribute let qbe quantum program basic loc metric qcan dened follows number loc observed general metric consists classical quantum statement used measure total size quantum program also dene metric especially measure size related quantum aspect qas follows number loc related quantum gate operation number loc related quantum measurement based metric nally derive general size metric quantify total size quantumrelated aspect inqas moreover even consider number qubits gate used qto obtain following size metric total number qubits used total number unique quantum gate used figure show simple qiskit program denitions calculate value loc metric program obtain following result halsteads software science halstead introduces size metric classical software according hal stead computer program implement algorithm considered collection token divided operator operand halstead observes software met rics reect algorithm implemented different programming language independent platform andlanguage used metric computable statically source code program letpbe classical program collection token classied either operator oroperands basic number token pcan dened follows number unique operator number unique operand total occurrence operator total occurrence operand based number several metric could dened quantify various aspect classical software length pnnn vocabulary estimated length pneloglog volume pvnlog difculty effort required generate pedv letqbe quantum program consists classi cal quantum statement dene basic number qas well number unique classical quantum operator number unique classical quantum operand total occurrence classical quantum operator total occurrence classical quantum operand dene metric quantum software extend ing classical halsteads metric based number metric used quantify various aspect quantum software length qmmm vocabulary estimated length qmeloglog volume qvqmlog difculty qdq effort qeqdqvq design size quantum software design process transform user requirement suitable form help programmer quantum software implementation coding classical software design quantum software design may also involve two stage architectural design anddetailed design like measuring size quantum software code level measure size quantum software design architectural level well architectural design size architectural design denes collection quantum software component function interaction interface establish framework developing quantum software system software architec ture system denes highlevel structure revealing overall organization set interacting component welldened architecture allows engineer reason system property high level abstraction measure size quantum architectural design based formal architectural specications architectural patternsarchitectural description language adls formal language representing architecture software system using adls software architect specify system functionality using component interaction component using connector like classical adls quantum architectural description language qadl extension classical adl formally specify architecture quantum software system support architecturallevel design quantum system qadl specify quantum system architecture mechanism including specications classical component connector classical component specications quantum component connector quantum component specications connector tween classical quantum component letsbe formal architectural specication quantum software architecture consists group component connector component dene general architecturallevel size metric sa follows number line architectural specications number component connector also dene size metric specically quantify size quantum aspect sfrom different viewpoint number quantum component number connector quantum component number connector quantum component classical component based metric nally derive general size metric quantify total size quantumrelated aspect insas detailed design size detailed design renes pends architectural design describe internals quantum software component algorithm processing logic data structure data denitions recently research carried study ing design pattern quantum system dene design size metric quantum system based quantum pattern letdbe design quantum system dene general size metric term design pattern number unique design pattern used number design pattern realization pattern type moreover also dene size metric specic quantify quantum attribute term quantum design pattern da follows number unique quantum design pattern used number quantum design pattern realization pattern type specication size unied modeling language uml general purpose wellknown modeling language eld clas sical software engineering provides standard way visualize design classical software developmentlife cycle recently erezdelgado perezgonzalez present extension uml called quml model quantum software system extension cover two type uml diagram class diagram andsequence diagram work claim addition classical element classical uml quml contain element related quantum aspect quantum class quan tum element quantum variable quantum operation quantum supremacy quantum aggregation quantum com munications similar classical uml quml serve base dening size metric quantum software system specication level example metric used quantify quantum aspect system dened follows number quantum class object number quantum element quantum variable quantum operation number quantum interface number quantum attribute number quantum method asic structure metric quantum software structural analysis program essential component software development software evaluation effort struc ture metric try take account complexity individ ual module interaction module product system quantify interaction many approach structure metric proposed good example include mccabes cyclomatic complexity metric information metric henry kafura section discus classical software metric extended evaluate quantum software mccabes complexity metric wellknown metric measuring complexity classical program control structure cyclomatic com plexity metric mccabe program cyclomatic complexity metric ofpis dened number linearly independent path controlow graph cfg pand computed follows wheregis cfg pto measured ni number node representing statement andeis number edge presenting control one statement another similarly measure complexity quantum program control structure dening extended cyclomatic complexity metric quantum software denition metric based quantum control graph qcfg extension classical cfg represent quantum programfig quantum controlow graph qiskit program figure letgqbe qcfg quantum program qto measured cyclomatic complexity metric vgqofqcan dened follows vgq eqnq wherenqis number node gqandeqis number edge similar classical cfg node nnqrepresents either classical quantum related statement eeqrepresents control one statement another qcfg qcan constructed based ast derived static analysis onq example figure show qcfg qiskit program figure based qcfg calculate cyclomatic complexity metric program henry kafuras information metric perhaps common design structure metric known information metric deal complexity system observing information among system component module among metric one wellknown approach henry kafuras information metric measure total level information individual module rest system metric considers complexity software module could affected following two factor complexity module code complexity due module connection environment effect factor included loc line code metric quantication second factor henry kafura dened two term fan inandfanout fanin module mi number local ows intom plus number data structure mretrieves information fanout module mi number local ows fromm plus number data structure update based concept henry kafura dene information metric value module length multiplied square fanin multiplied fanout ifm length mfinmfoutm wherelength mi number programming language statement andfinandfoutare fanin fanout ofm respectively quantum software system usually composed classical quantum module module independent therefore may interaction among may lead information ows classicalquantum module classicalquantum module measure com plexity quantum system observing infor mation among system module extend henry kafuras information metric domain quantum system letmqbe classicalquantum module quantum systemlength mqbe number quantum programming language statement andfinandfoutbe fanin fanout ofmq respectively dene structure metric based information measure complexity module fanin fanout system follows ifmq length mqfinmqfoutmq elated work although large body research software metric proposed classical software metric proposed quantum software best knowledge work propose size structure metric quantum software various viewpoint several metric proposed measure per formance quantum computer system one called total quantum factor tqf sete tqf provide rough estimate quantum circuit size circuit width time circuit depth run proces sors performance decoheres another metric used measure quantum computing system performance called quantum volume salm propose metric measure performance gatebased quantum computer used determine quantum circuit successfully executable given gatebased quantum computer also discus quantum system noise error affect metric rened precise estimation piattini present talavera manifesto quan tum software engineering programming collect principle commitment eld quantum software engineering programming among princi ples commitment one qse assures quality ofquantum software mentioned new metric quantum software developed however dene concrete metric regarding quantum software measurement manifesto sicilia present preliminary study structure source code quantum software using initially metric typically used classical software study focus module structure quantum gate library microsofts quantum development platform qdk quantum development kit us specic lan guage however propose software metric used quantify attribute quantum software oncluding remark paper proposed basic metric quantum software mainly focus measuring size structure quantum software metric extension classical counterpart others specically designed quantify quantum feature quantum software metric dened different straction level represent various size structure attribute quantum software explicitly proposed metric used evaluate quantum software various viewpoint implementing metric collection tool quantum programming language qiskit automatically derive result proposed metric qiskit program next step perform experiment collect data evaluation hope primary evaluation metric available soon acknowledgment grateful anonymous reviewer suggestion improve paper hidenori ooka valuable discussion reference hetzel making software measurement work building effective measurement program john wiley son inc gilb finzi principle software engineering management addisonwesley reading arnold frakes software reuse reengineering case trend poulin measuring software reuse principle practice economic model addisonwesley longman publishing inc fenton bieman software metric rigorous practical approach crc press zuse framework software measurement walter gruyter bieman metric development objectoriented software soft ware measurement understanding software engineering miszczak highlevel structure quantum computing morgan claypool publisher ying foundation quantum programming morgan kaufmann abhari faruque dousti svec catu chakrabati chiang vanderwilt black chong scaffold quantum programming language department computer science princeton university tech rep research qiskit accessed online available httpsqiskitorg svore geller troyer azariah granade heim kliuchnikov mykhailova paz roetteler enabling scalable quantum computing development highlevel dsl proceeding real world domain specic language workshop team projectq accessed online available httpsprojectqch green lumsdaine ross selinger valiron quipper scalable quantum programming language proceeding acm sigplan conference programming language design implementation cross bishop smolin gambetta open quantum assembly language arxiv preprint arxiv zhao quantum software engineering landscape horizon arxiv preprint arxiv piattini peterssen erezcastillo hevia serrano hern andez guzm paradela polo murina talavera manifesto quantum software engineering programming qanswer zhao assessing complexity software architecture pro ceedings third international workshop software architecture halstead element software science elsevier new york mccabe complexity measure ieee transaction software engineering henry kafura software structure metric based infor mation ieee transaction software engineering nielsen chuang quantum computation quantum information albrecht gaffney software function source line code development effort prediction software science validation ieee transaction software engineering jones applied software measurement mcgrawhill education boehm clark horowitz westland madachy selby cost model future software life cycle process cocomo annals software engineering perry wolf foundation study software architecture acm sigsoft software engineering note mary david software architecture perspective emerging discipline prenticehall clements survey architecture description language proceeding international workshop software specication design ieee weigold barzen leymann salm data encoding pattern quantum computing pattern language program conference plop leymann towards pattern language quantum algorithm ininternational workshop quantum technology optimization problem springer uml version omg specication superstructure infrastruc ture online available httpswwwomgorgspecuml erezdelgado perezgonzalez towards quantum software modeling language first international workshop quan tum software engineering qse sete zeng rigetti functional architecture scalable quantum computing ieee international conference rebooting computing icrc ieee bishop bravyi cross gambetta smolin quantum volume salm barzen leymann weder criterion successfully executing circuit nisq era eff really mean proceeding acm sigsoft international workshop architecture paradigm engineering quantum software sicilia anchezalonso moracantallops garc barriocanal source code structure quantum code insight qdk international conference quality information communication technology springer
jos maria fernandes guilherme travassosvalentina lenarduzzixiaozhou ed international conference aveiro portugal september proceedingsquality information communication technologycommunications computer information science communication computer information science editorial board member joaquim filipe polytechnic institute setbal setbal portugal ashish ghosh indian statistical institute kolkata india raquel oliveira prate federal university mina gerais ufmg belo horizonte brazil lizhu zhou tsinghua university beijing chinarationale series devoted publication proceeding computer science con ferences aim efciently disseminate original research result informatics printed electronic form focus publication peerreviewed fullpapers presenting mature work inclusion reviewed short paper reporting work progress welcome besides globally relevant meeting internationally repre sentative program committee guaranteeing strict peerreviewing paper selectionprocess conference run society high regional national relevance also considered publication topic topical scope span entire spectrum informatics ranging foun dational topic theory computing information communication science technology broad variety interdisciplinary application eld information volume editor author publication free charge royalty paid however offer registeredconference participant temporary free access online version conference proceeding springerlink httplinkspringercom mean http referrer conference website andor number complimentary printed copy speciedin ofcial acceptance email event proceeding published time distribution conference post proceeding delivered form printed book andor electronically usbs andor econtent license accessing proceeding springerlink furthermore proceeding included electronic book series hosted springerlinkdigital library httplinkspringercombookseries conference publishing allowed online conference service ocs managing whole proceeding lifecycle submission reviewing preparing publication freeof charge publication process language publication exclusively english author publishing sign springer copyright transfer form however free material published substantially changed elaborate subsequent publication elsewhere preparation cameraready papersles author strictly adhere springer author instruction strongly encouraged latex style le template abstractingindexing abstractedindexed dblp google scholar eicompendex mathematical review scimago scopus volume also submitted inclusion isi proceeding start start evaluation proposal inclusion series please send email ccisspringercom jos maria fernandes guilherme travassos alentina lenarduzzi xiaozhou editor quality information communicationstechnology international conference qua tic aveiro portugal september proceedingseditors jos maria fernandes university aveiro aveiro portugal alentina lenarduzzi university oulu oulu finlandguilherme travassos federal university rio janeiro rio janeiro brazil xiaozhou university oulu oulu finland issn issn electronic communication computer information science isbn isbn ebookhttpsdoiorg editor applicable author license springer nature work subject copyright right reserved publisher whether whole part material concerned specically right translation reprinting reuse illustration recitationbroadcasting reproduction microlms physical way transmission informationstorage retrieval electronic adaptation computer software similar dissimilar methodology known hereafter developed general descriptive name registered name trademark service mark etc publicationdoes imply even absence specic statement name exempt relevant protective law regulation therefore free general publisher author editor safe assume advice information bookare believed true accurate date publication neither publisher author theeditors give warranty expressed implied respect material contained herein error omission may made publisher remains neutral regard jurisdictional claim published map institutional afliations springer imprint published registered company springer nature registered company address gewerbestrasse cham paper product recyclablepreface international conference quality information communication tech nology qua tic forum disseminating advanced method technique tool supporting quality ict engineering management approach practitioner andresearchers meet conference exchange idea approach adopt quality culture ict process product improvement provide practical study varying context qua tic held september aveiro portugal orga nizing chair edition qua tic jos maria fernandes ildio oliveira hosted locally university aveiro program chair guilherme horta travassos federal university rio janeiro brazil alentina lenarduzzi university oulu finland xiazhou university oulu finland wasthe proceeding chair volume collates paper selected member program committee presented conference published conference proceeding qua tic attracted many submission different area spanning several thematic track proposed call paper various cuttingedge technology specialized focus following thematic track together track chair together ajournalrst track considered qua tic ict process improvement organization governance andreia malucelli puc brazil karol frhauf infogem quality requirement including emerging quality aspect daniela cruzes ntnu norway michael unterkalmsteiner bth sweden erication alidation testing domenico amaltano university naples italy matteo camilli politecnico milano italy quality aspect digital transformation antonio guerrieri icar italy claudio micelli farias ufrj brazil quality aspect human factor software engineering fabian fagerholm aalto university finland maria teresa baldassarre university bari italy journalfirst special issue andrea janes orarlberg university applied science austria technical review summary technical program committee qua tic comprised international aca demic industrial domain expert organization different country vecontinents best quality paper identied presentation publication based rigorous peerreview process technical program committee member external expert reviewer review done doubleblind process atleast three review per submission submitted paper came country andvi preface accepted paper originated country submission pool paper accepted full paper discussion period conrmation reviewer apart paper two journalrst paper included qua tic program paper correspond article published topnotch jour nals prior publication workshop conference paper two paper following jensen seceleanu enoiu lundqvist correctness guaranteed strategy synthesis compression multiagent autonomous system science computer programming gariano servetto potanin using capability strict runtime invariant checking science computer programming invited talk conference year included two outstanding keynote speaker keynote davide taibi full professor university oulu finland associate professor tampere university finland head cloud research group research mainly focused migration cloudnative technology investigating process technique developingcloud native application identifying cloudnative specic pattern antipatterns method prevent degradation member international software engineering network isern since formerly worked free universityof bozenbolzano italy technical university kaiserslautern germany fraun hofer iese kaiserslautern germany universit degli studi dellinsubria italy one cofounder opensoftengineering srl spinoff company universit degli studi dellinsubria talk microservices monolithic organizational quality perspective davide addressed migrating monolithic system microservices impact organization presented success failure case providing academic practitioner perspective orga nizational quality aspect including case company started revert theirsystems microservice monolithic achieved expected benet microservices second keynote speaker jos carlos almeida santos hold licenciatura engenharia informtica master degree articial intelligence faculdade cincias tecnologia universidade nova lisboa phd computer science logicbased machine learning algorithm imperialcollege london jos santos software engineer microsoft bing division since principal software engineer since jos worked multiple bing team past year query alteration autosuggest shoppingrelevance price insight recently working integrating generative pretrained gpt language model various product feature talk aiassisted programming revolutionizing way code explored exciting new world aiassisted programming revolutionizing job developer software engineer aiassisted programming tool underpinned large languagepreface vii model trained terabyte source code popular programming language python javascript java among many others also included live demonstration github copilot advanced aipair programmer tool microsoft integrates ide signicantly improves coding experienceto solve complex programming problem streamline development testing process panel year conference included two open panel academy industry entitled scaling quality startup corporate mod erated eduardo miranda carnegie mellon university usa eduardo ribeiro critical software portugal daniel gonalves wtvision portugal alentina lenarduzzi university oulu finland qua tic panel explored potential synergy academic state art soa real world extending beyond technical software development process quality ict evolves early day techdriven startup structured large corporate environment change encompass pure technical implementation practice strategic business continuity qos quality service client orientation diverse perspective quality explored changing challenging contextsin tech company lifecycle second panel entitled building software system prepared yet moderated guilherme horta travassos federal university rio dejaneiro brazil jos carlos santos microsoft portugal paulo dimas unbabel portugal davide taibi university oulu finland departing software engineering challenge posed contemporary software system cyberphysical smart environment internet thing paradigm panel explored potential articial intelligence techniquesto develop ensure quality software system improve software process prepared support contemporary software system qual ity challenging question used panel lead discussion andpromote experience sharing primary quality concern desirable feature tackled technique software engineer incorporate term responsibility ethic bias mitigate potential danger using technique sedes doctoral symposium addition colocated doctoral student symposium chaired paula enturamartins university algarve portugal marielba zacarias university algarve portugal proceeding expected included zenodo free open platform backed cern data centre zenodo enables discovery andcitability scientic paper assigning digital object identier doi every upload particularly pleased support event doctoral student represent much future communityviii preface proceeding editor thank people organization directly indirectly supported event thanks thematic track chair member program committee many contribution review guaranteed quality qua tic conference thanks colleague university aveiro organizational detail required hosting conference colleague different level organization thanks steering committee member trusting organize theconference guidance support throughout process thanks comisso setorial para tecnologias informao comunicaes instituto portugus qualidade harboring promoting qua tic sinceits inception also special thanks organization involved conference including supporter university aveiro federal university rio janeiro universityof oulu university algarve university coimbra university institute lisbon nov school science technology university porto university minho instituto superior tcnico also thank ordem do engenheiros promotionand endorsement qua tic ieeta institute electronics informatics engineering aveiro integrated member associated laboratory intelligent system lasi inovaria association company innovation networkin aveiro finally warm kind mention author participant qua tic organizing conference producing proceeding would hard without effort thank contributing critical mass researcher keep qua tic history alive expect many year come september jos maria fernandes guilherme travassos alentina lenarduzzi xiaozhou liorganization program committee chair guilherme horta travassos coppeufrj brazil alentina lenarduzzi university oulu finland thematic track chair ict process improvement organization governance andreia malucelli pucpr brazil karol frhauf infogem quality requirement including emerging quality aspect daniela cruzes ntnu norway michael unterkalmsteiner bth sweden verication validation testing domenico amaltano university naples italy matteo camilli politecnico milano italy quality aspect digital transformation antonio guerrieri icar italy claudio micelli farias ufrj brazil quality aspect human factor software engineering fabian fagerholm aalto university finland maria teresa baldassarre university bari italyx organization journalfirst special issue andrea janes orarlberg university applied science austria program committee alberto silva universidade lisboa portugal ana paiva universidade porto portugalana rosa cavalli institut polytechnique paristlcom sudparis france antonia bertolino national research council cnr italyantonio allecillo mlaga spainfernando brito abreu instituto universitrio lisboa portugalguilherme horta travassos coppeufrj braziljoo pascoal faria universidade porto portugaljoost visser leiden university netherlandsmario piattini elthuis university castilla mancha spainmartin brunel university london ukmiguel brito universidade minho portugalmiguel goulo universidade nova lisboa portugalpaulo rupino cunha universidade coimbra portugalv alentina lenarduzzi university oulu finlandv asco amaral universidade nova lisboa portugal organizing chair jos maria fernandes university aveiro portugal ildio oliveira university aveiro portugal proceeding chair xiaozhou university oulu finland tutorial chair jos pereira do real istariscte istec portugal antoine craske grupo lusiaves portugalorganization phd symposium chair paula entura martin university algarve portugal marielba zacarias university algarve portugal social medium chair simone asconcelos instituto federal fluminense brazil duarte almeida istariscte portugalcontents scientic workow management software quality assessment replication open source architecture jos pereira do real fernando brito abreu glauco carneiroand duarte almeida quality assurance digital twin experience report automotive industry alican tzn georg hackenberg continual service improvement systematic literature review sanna heikkinen marko jntti markku tukiainen elevating software quality product discovery technique key mag stefan trieinger lukas wei jrgen mnch visual milestone planning hybrid development context eduardo miranda quantum service architecture security smart city vita santa barletta danilo caivano alfred lako anibrata pal retrospective analysis grey literature aisupported test filippo ricca alessandro marchetto andrea stocco process improvement using scientic method demonstration requirement engineering isabel lope margarido log based erication tool serious game autistic child arini nur rohmah nelly condorifernandez beyond dashboard operationalising measurement framework gijsbert boon christoph stettina joost visser yassin elbaz exploring data analysis visualization technique project tracking insight itc andr barrocas alberto rodrigues silva joo saraivaxiv content professional association steer digital transformation case study belgian notary industry ziboud van veldhoven kani kili divya prakash ryan michael smithcooper jan vanthienen dqbrk data quality business rule identication based isoiec ramn galera fernando gualo ismael caballero moiss rodrguez pitching big fish elevating presentation communication skill software quality course miguel moralestrujillo ismael caballero muozreja quantum service generation deployment process qualityoriented approach jaime alvaradovaliente javier romerolvarez ana daz moiss rodrguez ignacio garcarodrguez enrique moguel jose garciaalonso juan murillo external dependency software development ale hosry nicolas anquetil measuring team effectiveness scrum kars beek gerard wagenaar laura kester sietse overbeek evert rooij author index scientic workow management software quality assessment replication open source architecture jose pereira do reisb fernando brito abreu glauco carneiro duarte almeida instituto superior tecnologias avan cadas istec lisboa portugal josevicentereismyistecpt instituto universit ario lisboa iscteiul istariul lisboa portugal jvprsfbadsbaa iscteiulpt federal university sergipe ufs aracaju brazil glaucocarneirodcompufsbr abstract replication research experiment important estab lishing validity generalizability ndings building cumulative body knowledge addressing issue publication bias questfor replication led concept scientic workow structured systematic process carrying research denes series step method tool needed collect analyze data generate result study propose cloudbased framework built upon open source software facilitates construction execution workows replicationreproduction software quality study demonstrate feasibility describe replication software qual ity experiment automatically detecting code smell machinelearning technique proposed framework mitigate two type validity threat software quality experiment internal validity threat due instrumentation since measurement instrument used repli cation thus aecting validity result external validity threat due reduced generalizability since dierent researcher easily replicate experiment dierent setting popula tions context reusing scientic workow keywords scientic workow software quality quality assessment replication code smell open source introduction replication science replication refers conscious systematic repeat orig inal study replication important process software engineering cthe author license springer nature fernandes ed do real research many author emphasized relevance instance kitchenham claim replication basic component scientic method hardly need justied shull replication allows tobetter understand software engineering phenomenon improve practice software development one important benet replication thatthey help mature software engineering knowledge addressing internal external validity problem author also mention term external validation replication help generalize result demonstratingthat depend specic condition original study regard ing internal validity replication also help researcher show range condi tions experimental result hold however replication consensual author like replication often used gain condence empirical ndings opposed reproduction goal showing correctness validity pub lished result thus almost replication conrmatory pre diction interval wide suggests limit replication matter reproducibility warranted one framework objective presented paper enhance replicationreproduction study repeating previously performed experiment software quality assessment software development maintenance especially complex system existence code smell jeopardizes quality software hinders sev eral operation reuse code code smell bug since prevent program func tioning rather symptom software maintainability problem often correspond violation fundamental design principle negatively impact quality software development maintenance complex task hin dered presence code smell causing code misunderstanding therefore reducing maintenance eciency promoting defect injection theirremoval achieved refactoring operation thereby improving soft ware quality reusability ease maintenance readability code smell detection easy task requires lot eort process entirely manual depending mainly size complexity source code developer experience greater experienceof latter easier detect code smell well greater complexity detected code although progress recent year detection visualization code smell main problem remain subjectivity detection process make manual diculties process automation lacking data model calibration absenceof detection visualization tool ide help developer recent year seen evolution automatic detection smell various automation technique based machine learning appliedscientic workow management software quality assessment remains detection dicult two main prob lem formal denition code smell according wang automatic detection code smell studied help user part application code refactored however code smell dened formal manner calibration detection algorithm key point good accuracy existence reliable data needed context focus software quality namely automatic detection code smell machine learning scientic workows scientic workows provide visual representation research process including data input processing step output enable researcher organize automate complex task enacting scientic workows help improve reproducibility eciency collaboration quality control reusability research leading reliable impactful research result dening scientic workows several advantage research reproducibility scientic workows dene clear systematic process carrying research enables others reproduce research result making workow explicit transparent researcher ensure others follow step obtain result eciency scientic workows provide structured ecient way carry research breaking research process smaller manageable step workows enable researcher identify bottleneck optimize resource utilization reduce time eort required complete research collaboration scientic workows facilitate collaboration among researcher providing common framework data information exchange standardizing data method used research workows enable researcher share data result easily collaborate commonresearch objective quality control scientic workows help ensure quality accuracy research result standardizing method data collection workows help minimize error inconsistency enable researcher toidentify correct error easily reusability scientic workows reused dierent research project saving time eort future research standardizing method data collection workows adapted dierent research context andas starting point future research project taverna workow tool suite designed combine distributed web service andor local tool complex analysis pipeline taverna work ows designed executed local desktop machine tav erna workbench executed client web interface using taverna server taverna workbench connects myexperiment allow ing import export workows directly collaborative environ ment myexperiment virtual research environment collaboration sharing workows experiment do real contribution study present framework supported two open source software taverna servertaverna workbench jgu weka rest service allows construction workows replicationreproduction quality study based machine learning demonstrate availability framework present replication study aim understandthe best machine learning algorithm code smell detection noted application used create framework example pegasus instead using taverna server manage workows goal contribute solution problem presented ivie thain claim workow run single machine solution exist replicability distributed system andor forreproducibility existing system generally inadequate scientist expert scientic domain expert computer system paper organized following section introduce related work describe framework based taverna weka server present example replication based framework finally sect provides conclusion future work background although replicationreproduction study widely considered essential requirement scientic process play important role building knowledge software engineering several serious concern recently raised thus software engineering workows replica tionreproduction study still far standard practice unlike area bioinformatics biomedical science scientic workows management system increasingly used software engineering yet common practice example searching myexperiment workows software engineering found universe nearly workows collaborative environment ivie thain describe set problem make replication dicult technical barrier author claim principle bepossible specify computation sucient detail anyone able reproduce study exactly practice fundamental technical social barrier also present various authorshave dened reproducibility need consensus subject another signicant contribution study chapter technical barrier reproducing workow present advantage using scienticworkows present set recommendation magalh aes performed systematic mapping study analyzed paper reporting study replication published last application developed institute computer science johannes gutenberg university mainz inserted openrisk projectscientic workow management software quality assessment year purpose paper understand current state work replication empirical software engineering research author concluded replication frequently used mean achieving robust result still long way replication yet set stan dardized concept terminology important software engineering research community engage eort create evaluate taxonomy framework guideline methodology support replication development fully regarding replication study important work subject emphasize importance replication dened concept guideline performing replication regarding scientic workows several work point chal lenges recommendation application allow machine learning workows cre ated user expert computer system still application free server system architecture systemswill presented azure machine learning studio webbased integrated development envi ronment ide developing data experiment collaborative draganddrop tool build test deploy predictive analytics solution data user develop predictive analytics model creating machine learning workow draganddrop block weka according author collection machine learning algo rithms data mining task contains tool data preparation classica tion regression clustering association rule mining visualization wekais local open source software rapidminer present concept similar azure machine learning studio creating machine learning workows provides product local operationsuch rapidminer studio visual workow designer predictive model server rapidminer server share reuse predictive model automate process deploy model production rapidminer open source software orange open source machine learning data visualization us concept azure rapidminder create machine learning pro ce orange work locally haioers full suite product designed make easy every user every enterprise accelerate adoption machine learning articial intelligence providing webbased platform none solution cumulatively exibility framework term cost free software possibility since httpsstudioazuremlnet httpswwwcswaikatoacnzmlindexhtml httpsrapidminercom httporangebiolabsi httpswwwhoai do real build interface intend taverna workbench local solution installed microservices ease ofavailability scientic workows myexperiment description proposed framework introduction model present based creating workows experience per formed study making workows publicly available way allow entire community replicate experience conrm theresults obtained proposed framework based taverna creating scientic workows jgu weka rest service creating machine learning model create workow taverna workbench design workows perform test ensuring workow work workow essentially task set interacts weka server web service case restful web service taverna workbench figure show example workow produce training weka machine learning algorithm creating model workow input algorithm used egj randomforest libsvm etc thescientic workow management software quality assessment training dataset output model model task creating workows taverna workbench consists choosing component want add workow menu since interface graphical workow create machine learning model taverna workbench work local mode local desktop machine using large datasets cause machine slow even enough resource workow processing second phase taverna server solve problem process create workows taverna workbench import run taverna server taverna server cloud weka server problem processing speed lack resource architecture convinced contribute solving problem presented ivie thain say workow run single machine solution exist replicability distributedsystems andor reproducibility existing system generally inadequate scientist expert scientic domain expert computer system architecture framework framework based two docker container one jgu weka rest service another taverna server communicating restful api application program interface illustrated do real framework architecture already mentioned taverna workbench work local mode serf produce workows loaded taverna server model taverna server available called dierent local client client call workow taverna server interacts jgu weka rest service another docker container api provided weka server workows created software quality assessment replication using machine learning technique see although principle hold true experiment thus operating principle follows workow taverna server receives algorithm training dataset input parameter stored taverna server invoking jgu weka rest service api pas weka two parame ters previous point weka performs training algorithmwith dataset return result json format containing various information training success model etc taverna server extract various information json obtain jgu weka rest service created model eval uation passing parameter model framework present scalable solution possible add docker container service thus creating possibility produce elaborate workows functionalitiesscientic workow management software quality assessment currently developing java graphical user interface user easily interact taverna server currently workows placement taverna server performed manually result consulted server directory also manually browser however noted always possible invoke workow directly taverna workbench see particularly datasets small require large computational resource replication example exemplify framework replicated article compare various machine learning algorithm determine best algorithm detecting codesmells study replicated chose replicate fontanas paper code smell detection towards machine learningbased approach paper conducted study author six dierent machine learning algorithm detect four codesmell type data class large class feature envy long method study aim compare benchmark code smell detection super vised machine learning technique purpose four datasets createdone code smell train machine learning algorithm applica tion used experiment train evaluate machine learning algorithm weka open source software waikato university followingalgorithms available weka implemented implementation decision tree three type pruning technique pruned unpruned reduced error pruning jrip implement propositional rule learner random forest consists large number individual decision tree operate ensemble bayes probabilistic model based bayes theorem smo sequential minimal optimization algorithm widely used training support vector machine libsvm library support vector machine svms integrated software support vector classication experiment performed evaluate performance value machine learning algorithm default parameter type code smell crossvalidation statistical technique applied test theperformance machine learning model three standard performance mea sures used accuracy fmeasure area roc receiver operating characteristic do real result show experienced algorithm obtained high perfor mances regardless type code smell hand svmalgorithms tend perform worse algorithm random forest classiers obtaining highest accuracy replication using framework framework easy accessible everyone replicate type study scientic workows avoids repetitive work understand application used training evaluation dierent machine learning algorithm weka case replication facility essentially fact workow input parameter desired algorithm train ing dataset output parameter model performance measure thus obtain result dierent algorithm change twoinput parameter example test performance algorithm detecting code smell data class necessary invoke workow passing input algorithm identier case training dataset previously prepared code smell arff format arff attributerelation file format ascii text describes list instance sharing set attribute arff le developed machinelearning project department computer science university waikato weka machine learning software possible value workow parameter algorithm identication randomforest jadaboost naivebayes naivebayesadaboost naivebayesbagging libsvm libsvmadaboost libsvm bagging smo note jrip algorithm implemented version jgu weka rest service impossible compare algorithm result regarding second workow parameter dataset four datasets provided paper author used one code smell dataset class level data class large class code smell featureenvy long method code smell datasets method level dataset contains identication java project used package class method method code smell level code metric class method value whether code smell result presented fontanas paper show random forest jrip smo accuracy value greater datasets andon average best performance naive bayes slightly lower performance data class feature envy two smell libsvm performance lower others far lower three case offour httpswwwcswaikatoacnzmlwekaarhtml scientic workow management software quality assessment table performance result data class code smell classier accuracy fmeasure roc area random forest naive bayes smo libsvm table performance result god class code smell classier accuracy fmeasure roc area random forest naive bayes smo libsvm table performance result feature envy code smell classier accuracy fmeasure roc area random forest naive bayes smo libsvm table present result dierent machine learning algo rithms code smell congure parameter inthese algorithm used default setting evaluate performance model used fold crossvalidation study author see slight dierences value comparing result original study compare original study ndings conrm result obtained author original study random forest smo algorithm accuracy value greater datasets average best performance conrm result second result naive bayes algorithm slightlylower performance four code smell also conrm result nal result libsvms performance lower algorithm much lower three case four see table worst performing algorithm libsvm god class feature envy do real table performance result long method code smell classier accuracy fmeasure roc area random forest naive bayes smo libsvm long method code smell result much lower algorithm thus also conrm last result conclusion study present framework allows replicationreproduction study based scientic workows unlike area bioinformatics biomedical science scientic workows management system long used software engineering yet common practice framework weaim present simple scalable way create reuse scientic workows framework based two open source software system taverna servertaverna workbench archi tecture allows workows performed local computer require large computational resource remote execution cloudbased architecture allows processing large datasets workows created inthetaverna workbench also run loaded tav erna server available run multiple user exemplify feasibility proposed framework replicated study named code smell detection towards machine learningbased approach published compare six machine learning algorithm determine best one detecting code smell type data class large class feature envy long method comparing result study conrm ndings framework think contributed facilitating appli cationreproduction study thus contributing software engineering devel opment acknowledgement research partially funded istars project fct uidb uidp reference abbuhl replicate research research method second language acquisition practical guide httpsdoi orgchscientic workow management software quality assessment bryton brito abreu monteiro reducing subjectivity code smell detection experimenting long method proceeding interna tional conference quality information communication technologyquatic ieee httpsdoiorgquatic cohenboulakia chen missier goble williams froidevaux distilling structure taverna scientic workows refactoring approach bmcbioinformatics suppl magalh aes silva santos suassuna investigation replication empirical study software engineering systematic map ping study inf softw technol httpsdoiorgjinfsof roure goble stevens design realisation experi mentmy virtual research environment social sharing workows futur genercomput syst httpsdoiorgjfuture deelman future scientic workows int highperform com put appl deelman pegasus workow management system science automa tion future gener comput syst httpsdoiorgj future fokaefs tsantalis stroulia jdeodorant identication application extract class refactorings proceeding international conferenceon software engineering icse acmieee fontana mangiacavalli pochiero zanoni experimenting refactoring tool remove code smell proceeding workshop acm press new york fontana zanoni marino antyl code smell detection towards machine learningbased approach proceeding international conference software maintenance icsm ieee icsm omez juristo vega understanding replication experiment software engineering classication inf softw technol httpsdoiorgjinfsof harman mcminn souza yoo search based software engi neering technique taxonomy tutorial meyer nordio ed laser lncs springer heidelberg httpsdoi org ivie thain reproducibility scientic computing acm comput surv juristo omez replication software engineering experiment meyer nordio ed empirical software engineering verication lecture note computer science springer berlin kitchenham role replication empirical software engineeringa word warning empir softw eng sorte replication verication technique survey research paradigm sociol httpsdoiorgj tbx do real liu shao niu schedule bad smell detection resolution new way save eort ieee trans softw eng http doiorgtse mantyla lassenius subjective evaluation software evolvability using code smell empirical study empir softw eng http doiorgs mantyla vanhanen lassenius bad smell human code critic proceeding international conference software maintenance icsm httpsdoiorgicsm palomba bavota penta oliveto poshyvanyk lucia mining version history detecting code smell ieee trans software eng httpsdoiorgtse pessoa brito abreu monteiro bryton eclipse plugin support code smell detection proceeding inforum simp osio inform atica httpsarxivorgabs pereira do real brito abreu figueiredo carneiro anslow code smell detection visualization systematic literature review archcomput method eng httpsdoiorgs replication study considered harmful proceeding international conference software engineering icse acmieee shull carver vega juristo role replication empirical software engineering empir softw eng taylor deelman gannon shield workows escience scientic workows grid springer cham tsantalis chaikalis chatzigeorgiou jdeodorant identication removal typechecking bad smell proceeding european con ference software maintenance reengineering csmr httpsdoiorgcsmr wang hirasawa takizawa kobayashi identication elimination platformspecic code smell high performance computing application int networking comput httpsdoiorgijnc wolstencroft taverna workow suite designing executing work ows web service desktop web cloud nucleic acid re web server issue httpsdoiorgnargkt wolstencroft fisher goble scientic workows overview connexion yamashita moonen extent maintenance problem predicted code smell detection empirical study inf softw technol httpsdoiorgjinfsofquality assurance digital twin experience report automotive industry alican tznband georg hackenberg josef ressel centre datadriven business model innovation university applied science upper austria wehrgrabengasse steyr austria alicantuzuenfhwelsat school engineering university applied science upper austria wels upper austria austria georghackenbergfhwelsat abstract digital twin becoming increasingly important ecient eective development operation cyberphysical system however digital twin useful reect realworld system accurately enough quality high enough claim entail question term quality context digitaltwins mean measured article author pre sented experience quality assurance digital twin assembly line automotive industry author explained preliminary denition digital twin quality author derived clas sical quality model general software system furthermore author described quality issue able detect digital twinof assembly line automotive industry finally author con cluded leverage experience dierent context generalize underlying approach introduction notion digital twin gained popularity recent year often subject vague ambiguous envisions mispresenting notion began physical twin apollo spacecraft twin apollo merely tangible replication spacecraft utilized physical simulation even though digital aspect expectedto present wasnt another physical twin historic dday map also known big board southwick house england used simultaneously operation argued similar board twin operation included model battalion ship reected actual location correspondingformations furthermore synchronization implemented give directive real system control operation update physical twin state contrast digital twin virtual information possible cthe author license springer nature fernandes ed tzn hackenberg constructed real system synchronized selected frequency delity envision digital twin emerged grief conceptual model called mirrored space model later referenced journal article furthermore introduced information mirroring model ideal form product lifecycle management time one goal goal gather much relevant useful informa tion real system leverage information trade requiredenergy time material source system operation initially model four main part real system virtual system connection real virtual system virtual simulation later grief removed latter simplify model lastly coauthoring vicker grief decided nasainvented digital twin word instead information mirroring model recent year evidence digital twin play crucial role manufacturing industry life science healthcare infrastructure smartcities example digital wind farm general electric good illustration building digital twin helped design better turbine used collect analyze data real system making theprocess real system ecient another fascinating example digital twin philip virtual heart model twin heart evolves data generated ultrasonic sensor calculate well real heartis pumping blood information used predict potential heart failure allowing early intervention potentially lifesaving treatment lastly felice another interesting example digital twin application inmanufacturing project twin model machinesequipment agent utilized support realtime decisionmaking conduct whatif analysis experiment previous study predominantly focused design implementa tion digital twin however crucial aspect remains unclear achieve quality highly intricate evolvable system fore ascertaining requisite level quality digital twin arduous undertaking requires research paper aim review digital twin artifact utilized felice project evaluate quality issue associated also target enhance scientic understanding quality digitaltwins artifact analyzed study include process video showing current assembly procedure scope denition requirement specication general operational conceptual model discrete event simulation module evaluate artifact considered crucial quality attribute correctness completeness delity eciency evolvability related work quality notion quality dened many form literature scholar dened quality conformance specications requirement whilequality assurance digital twin others saw value tness evolved tness purpose later abstain loss meeting exceeding customer expectation even iso standard denes quality dierently inherent characteristic entity denitions endeavor pro vide universal understanding quality ass subsequently howeverthey come strength weakness example conforming requirement specications useful assessing quality sys tem may always reect need stakeholder hence quality ofthe system depends accurately requirement set serious discussion subcategorization quality trace back beginning century emergence productfocused quality management practice manufacturing later development new technology subcategorization quality evolved extended area software appeared emergence assessing software quality became inevitable result considerable amount software quality model characteristic beenestablished example isoiec standardized eight soft ware quality characteristic including functional suitability performance ciency compatibility usability reliability security maintainability portability determine software quality late another important subcategory context paper computer simulation quality considered sur prisingly conway alidentied several potential problem computer simulation system era still relevant today evaluate problem validation verication technique emerged validation process evaluating simulation quality comparison real system perspective intended application hand verication procedure evaluate implementation simulationmodel associated data concerning conceptual description speci cation model developer technique broadly categorized six area informal static dynamic symbolic constraint formal tech niques formal technique involve mathematical formality whereas informal technique rely human intervention reasoning although mathematicaltechniques precise informal technique commonly used digital twin quality analyze state digital twin quality literature analysis executed analysis especially focused digital twin quality mentioned assessed within academic dissertation therefore various tool scopus google scholar used perform extensive literature analysis digital twin publication however due vast amount available literature scope research narrowed resulting identication dissertation linked digital twin quality verication validation thorough review considered relevant paper result following ndings revealed tzn hackenberg first zhang developed consistency evaluation approach digital twin model used ass quality author also discussessential concept consistency real virtual system ultradelity model yet another insightful article zhang introduced updating method digital twin model accuracy coherence model concept addressed furthermore selch presented machinelearning approach based bayesian network track quality digital twin unique aspect study author determined contribution subsystem forecast overall quality digital twin rather analyzing asingle system digital coupling linkage subsystem also identied source extra uncertainty however since one digital twin used practice multiple subsystem digital twin validated additionally stability digital twin model assessed another study using kolmogorovsmirnov statistical test measure degree similarity probability distribution model prediction distribution actual data edward hua identify open problem digital twin model validation including modeling realism data uncertainty system dynamic case alignment reporting invalid mode address challenge theauthors propose digitaltwin model validation framework paper also high light three area future research including uncertainty sensitivity anal ysis model validation systemofsystems combining expert knowledgeand collected data finally shotaro hamato demonstrated successful realtime anomaly detection using unscented kalman filter digital twin model however determining appropriate threshold anomaly detection remains prob lematic dissertation provide valuable insight various aspect digital twin quality assessment including model consistency stability validation well machine learningbased approach realtime anomaly detectionhowever identied open problem including modeling realism data uncer tainty system dynamic usecase alignment reporting invalid mode call research eld improve quality reliability digitaltwins moreover lack welldened quality parameter digital twin put forward signicant challenge ensuring quality necessitates development appropriate quality metric standard digital twin method form felices digital twin digital twin instance implies real system already constructed important note sake convenience author utilized term digital twin subsequent chapter instead digital twin instancequality assurance digital twin moreover since digital twin still design phase methodology assessing quality consists several key step including identication ofthe artifact manual review artifact mapping quality attribute identied ndings evaluation artifact quality ultimately evaluation digital twin overall quality artifact current stage review encompassed key artifact including process video displaying current assembly procedure without adaptive worksta tion cobot scope denition outlining object shop oor requiring tracking twinning requirement specication summarizing functional andnonfunctional requirement digital twin general operational conceptual model elucidating highlevel structure assembly proce dure discrete event simulation module implement structuresprescribed conceptual model process video utilized explain manual assembly proce dures performed three workstation three video initially provided project partner sequence assembly step extracted least one product variant tool part needed assemblyoperation observed additionally approximate duration assem bly step estimated ergonomic characteristic operation derived derivable ergonomic characteristic mainly included posesand motion performed operator scope denition determined using methodology based hierar chical task analysis process video provided project partner whichaids better understanding context focus digital twin resulted scope denition identied entity twinned entity tracked important area scene entity twinned needed berepresented accurately simulation model including position pose speed fatigue state variable entity tracked hand required position information scope denition based aoor plan production facility three workstation marked gray rectangle human worker cobot adaptive workstation identi entity twinned therefore required accurate representation monitoring simulation entity agv cart door screwdriver used assembly operation designated entity betracked requirement specication digital twin dened unique natural language description origin category priority rationale used reference point project artifact specication described requirement way allowed testing digital twin implementation origin requirement noted identifythe project partner responsible creation category distinguished functional nonfunctional requirement well constraint standard priority requirement classied four level must tzn hackenberg could wouldhave help prioritize development eorts finally rationale provided clear explanation requirement implication inthe specication conceptual model comprised two part general conceptual model operational conceptual model model described assembly lineprocesses however operational conceptual model focused specic step assembly process general conceptual model focused higher level process workows general conceptual model representedusing general chart notation distinguishes root node activity node decision node operational conceptual model consisted three spreadsheet displaying sequence assembly operation performed atone workstation assembly operation divided macro micro operation macrooperation referring one part nal prod uct assembled microoperations referring individual step needed complete respective macrooperation discrete event simulation model consisted seven section includ ing two animation section two input section one output section one process logic section database section animation section provided two dimensional threedimensional representation system aidedin understanding simulation debugging purpose input section allowed management input simulation model output section displayed summary performance indicator simulation runthe process logic section contained process building block queue assembly operation lastly database section provided interface data source sink manual artifact review initial stage project target system yet available lack observable data system behavior could utilized validation instead informal potentially incomplete inconsis tent incorrect system description relied upon therefore manualreviews deemed suitable tool account characteristic situation manual review included audit inspection review struc tural analysis walkthroughs project partner inspiredby balcis manual review work digital twin quality attribute identify digital twin quality attribute following standard including isoiec iee iso iso well oxford dictionary consulted synthesize ndings correctness derived word adjective correct mean entity errorfree regarding fact truth context digital twin fact truth real system hence correctness grade quality thatquality assurance digital twin indicates error real system digital twin system meanwhile quality correct measured metric accuracy completeness derived word word complete described adjective attribute verb adjectival form used study denotes complete state necessary appropriate part according real system additionally sub aspect completeness incompleteness andovercompleteness inspected identied completeness issue fidelity refers degree exactness real system copied represented low delity indicates simplied representation high delity refers accurate detailed representation real system concept delity garnered signicant attention recent year continues important focus digital twin research eciency refers quality ecient therefore eciency achieving maximum productivity minimum wasted resource worth mentioning concept eciency tightly coupled notion productivity although eciency diers latter denition dened capability produce large amount good example time eciency indicates le amount time inputmore output minimum waste process desired evolvability system capability enhance suitability envi ronment alteration internal functional structure another term describe response change environment adapt ability however concept diers evolvability aects system internal functional structure temporarily instance digitaltwin evolvable virtual system designed exible scalable allowing easy update addition new feature furthermore evolvability digital twin assessed based quantity eort necessary resource initiate transformation within system mapping digital twin attribute manual review result evaluate quality artifact issue mapped digital twin attribute begin process ndings collected manualreview followed inspection ndings determine digital twin quality absent finally ndings mapped relevant missing quality attribute submitted artifact quality evaluation artifact quality evaluation evaluate quality digital twin artifact mapped ndings scrutinized evaluated process started identifying qualityattributes mapped identied missing attribute incre mented determine total quality missing attribute arti factfig tzn hackenberg incorrect incomplete status demonstrated simplied nite state machine incorrectness observed behavior machine state transition incompleteness hand observed missing state noted even though second state machine missing acomponent show right behavior hence correctquality assurance digital twin fidelity eciency level demonstrated simplied cad drawing assessment eciency quantitative metric rendering time model size utilized figure represents demonstration evolvability compari son state machinerepresented black evolved state machinerepresented green required eort evolve black state machine green state machine could evaluated evolvability color gure online tzn hackenberg method evaluation digital twin artifact quality artifactnding indicates nding belongs artifact indicates mapping digital twin quality evaluation determine quality digital twin value obtained evaluating artifact quality collected summed furthermore value thesum assigned related digital twin quality attribute result digital twin quality demonstrated quality attribute value result first ass digital twin quality manual review artifact con ducted result total twentyone quality related issue iden tied listed nally mapped digital twin quality attribute table mapping process revealed total thirtyeight digital twin quality attribute lacking artifact specically quality issue digital twin related correctness indicates error real digital twin system furthermore related completeness proving necessary appropriate part missingmoreover related delity indicating lack detail addition related eciency indicating poor performance excessive resource usage nally related evolvability indicating systemwas unresponsive environment exible scalablequality assurance digital twin method evaluation digital twin quality example finding two example finding finding given reader illustrate result manual review well mapping digital twin qualityattributes conceptual modelfinding duration microoperations conceptual model calculated using simple calculation scheme based duration corresponding macrooperations wellknownfrom prior wellconducted study however relying estimated simplied calculation microoperation duration suggests digital twin conceptual model suer issue correctness completeness table simulation modelfinding discrete event simulation model enforced strictly sequential execution microoperations precludes support parallel execution however machinehuman collaboration task need parallel execution especially cobot overtakes certain microoperationsthus exclusion parallel execution indicates simulation model incomplete time using wrong type execution highlight inaccuracy table tzn hackenberg table mapping digital twin attribute result manual review case attribute mapped marked quality inspection result categorized artifact xaxis represents arti fact sect yaxis represents number missing quality attribute found artifact lastly digital twin quality attribute shown colorsquality assurance digital twin discussion paper aimed evaluate quality issue given digital twin sys tem felice project enhancing scientic understanding quality digital twin result study demonstrates idea amanual review mapping quality attribute issue suitable approach evaluating quality digital twin design phase furthermore study suggests evaluation eective way collect informationabout strength weakness digital twin system although ndings interpreted caution collected information used improve upcoming design decision consequently higherquality digitaltwin system however manual review timeconsuming endeavor even reasonable investment resource feasible relevant data covered additionally completeness manual review questionable due inherent limitation process moreover reliance humanjudgment manual review present additional challenge subject individual interpretation bias example walkthrough author assessment system could awed due informationabout designed digital twin system resulting false issue identication mapping additionally explaining system author may biased whether due political economic reason lacking explanation ability consequently data gathered walkthroughs highly subjective lack objectivity lastly issue show severity data also raise concern overall quality review process taken together quality assessment digital twin encountered lim itations due exility information real system artifact provided le information process video gave perspective shop oor based camera eld view skill video maker contrast simulation conceptual model oer plethora aspect examine ass resulted higher probability discov ering issue furthermore exility also visibility information limiting factor therefore evolvability completenessand correctness easier map detect rather delity eciency enchancement risk mapping approach including sever ity priority variable perspective stakeholder conducted result quality attribute weighted regarding stakeholder need aspect might important observer depen dent nature quality acknowledgement nancial support austrian federal ministry dig ital economic aairs felice project national foundation research technology development christian doppler research association grate fully acknowledged tzn hackenberg reference abbott quality competition essay economic theory columbia university press new york balci validation verication testing technique throughout life cycle simulation study proceeding winter simulation conference balci principle technique simulation validation verication test ing proceeding conference winter simulation wsc ieee computer society usa bennett history control engineering institution engi neering technology crosby quality free art making quality certain manage quality becomes source prot business mcgrawhill new york csescwg ieee standard software quality assurance process stan dard institute electrical electronics engineer deissenboeck wagner pizka teuchert girard activity based quality model maintainability ieee international conferenceon software maintenance deissenboeck juergens lochmann wagner software quality mod el purpose usage scenario requirement icse workshop software quality electric meet digital wind farm renewable energy accessed mar eyre untangling requirement digital twin taguchi chowdhury taguchis quality engineering handbook edn wiley hoboken gilmore product conformance cost qual prog grief product lifecycle management driving next generation lean thinking mcgrawhill education ltd new york grief product lifecycle management new paradigm enterprise int prod dev grief origin digital twin concept florida institute technol ogynasa grief physical twin digital twin apollo myth digital twin insti tute groenroos strategic management marketing service sector edn marketing science institute cambridge gryna jjmfm bingham quality control handbook edn mcgraw hill higher education new york hamato tsutsumi yamashita shiohara hirotani kato study modelbased realtime anomaly detection lowspeedwind tunnel sice zhang update method digital twin multidimension model roboti computintegr manuf felice exible assembly manufacturing humanrobot collaboration digital twin model accessed feb hua lazarovamolnar francis validation digital twin challenge opportunity mitre corporation quality assurance digital twin isotc quality management system fundamental vocabulary technical report international organization standard isotc quality management systemsrequirements standard interna tional organization standard jones snider nassehi yon hick characterising digital twin systematic literature review cirp manuf sci technol juran jurans quality handbook complete guide performance excellence edn mcgrawhill professional pub new york jtcsc tci software system engineering software testing techni cal report international organization standard institute electrical electronics engineer international electrotechnical commission kaner bach lesson learned software testing contextdriven app roach edn wiley hoboken levitt productionline approach service harvard business review liu fang dong review digital twin concept tech nologies industrial application manuf syst digital twin towards smart manufacturing industry michael grief transdisciplinary perspective complex system springer cham mobus system science theory analysis modeling design edn springer cham oxford oxford dictionary english oxford university press philip virtual heart could save real one philip accessed mar conway johnson maxwell problem digital system simulation manag sci sargent verication validation simulation model engineering man agement review ieee sean olcott digital twin consortium denes digital twin selch quality monitoring coupled digital twin multistep pro ce chain using bayesian network conference production system logistics stewart simulation practice model development palgrave macmillan london technical committee isoiec jtc it system software engineering system software quality requirement evaluationsquare system andsoftware quality model standard international organization standardization international electrotechnical commission timoshenko perlov khodataev kazantsev lvov algorithm validation radar digital twin based result diagnostic control data processing ieee boehm characteristic software quality elsevier science ltd weinberg psychology computer programming litton educational publishing new york weinberg quality software management system thinking dorset house new york zhang tao consistency evaluation method digital twin model manuf syst continual service improvement systematic literature review sanna heikkinenb marko jntti markku tukiainen istekki kuopio finland sannaheikkinenistekkifi school computing university eastern finland box kuopio finland markojanttiueffi school computing university eastern finland box joensuu finland markkutukiainenueffi abstract continual service improvement csi ongoing activity iden tify improve organization practice service align changingneeds csi one core element service management itsm frame work however research topic still emerging research area service science study explores implementation csi sevenstep improvement process context itsm goal paper present result systematic literature review increasing understanding csi seven step improvement process provide topic future research systematicliterature review slr carried analyse csirelated academic article main nding csirelated terminology need clarication consis tency academia practice guide future csi research exampleclarify role internal practice csi provide staged approach contin ual improvement identify model support improving automating sevenstep improvement process keywords service management itsm itil csi sevenstep improvement process systematic literature review introduction continual improvement service play crucial role point view com petitive advantage important service provider continually evaluate improve service service management process service transitioned service operation phase design nally csi phase csi phase includes sevenstep improvement process following activity identify strategy improvement dene measure gather data process data analyze information data present information implement improvement isoiec standard service management requires service provider activity managing improvement iso requirement improvement process characterized following author license springer nature fernandes ed continual service improvement systematic literature review practice dened performance indicator improvement establish commit ment continual improvement determine evaluation criterion opportunity improvement identify record opportunity improvement prioritise approve opportunity improvement implement improvement evaluateand report effectiveness implemented improvement according isoiec standard service management improve ments include reactive proactive action crain yetton present improve ment attribute improvement made existing process improvement identied continuously improvement level change incremental improvement require little time risk improvement moderate customer dependency growing forcing service provider effective management according catersteel service provider fail provide reliable customercentric focus impact organization limiting potential add value shifted service provider focus technologyoriented department deliver service serviceoriented way however modern technology becoming diverse complex drive service provider spend signicant part time maintaining service leaving little time improvement innovation drive service forward order make operation effective service provider turning best practice standard eld service management service manage ment itsm set objective process used direct control service provider activity resource design transition delivery improvement service conducting fullling service requirement goal itsm manage service infrastructure delivers ensures continuous operation service customer direct control service management activity essential put service management system sm place help organizationsefciently deliver support service customer several framework available manage service software development cobit infrastructure library itil devops scrum itil provides prac tical service management knowledge build service operation lifecycle phase service strategy service design service transition service operation continual service improvement systematic literature review goal research paper related itil continual service improvement service lifecycle phase particularly sevenstep improvement process rest paper organized follows section describes research method section present ndings literature review section provides discussion conclusion given sect research method study used systematic literature review slr answer research problem could service provider manage continual improvement systematic way goal study increase understanding csi provide topic future research slr presented study carried structured heikkinen research process kitchenham including three phase planning review conducting review reporting review following research question formulated current state sevenstep improvement process literature kind itsm process improvement identiedfrom literature identify manage improvement related service itsm process opportunity could automation bring sevenstep improvement process search process search process organized according guideline petticrew robert suggest using picoc criterion frame research problem construct search string electronic database identied synonym word linked using boolean operator scope question element following population process sevenstep practice framework service provider implemented identify manage improvement idea practice boolean attribute process practice model framework procedure method continual service improvement continual improvement csi process step sevenstep improvement process improvement process continual service improvement process continuous improvement process intervention clarify continual improvement activity perform specic task requirement specication isoiec standard continual improvement boolean attribute continuous continual comparison describe service provider performs idea initiative improvement practice boolean attribute idea initiative change improvement outcome impact service operation example customer satisfaction effec tiveness value boolean attribute satisfaction effectiveness quality prediction value context context service management service provider itbusiness industry boolean attribute service management itil isoiec service provider inclusion exclusion criterion selected research problem csi guided identify specify article included excluded predened protocol necessary reduce possibility researcher bias study research protocol includes following selection including excluding study inclusion criterion source type journal book series conference proceeding pub lished language english article related discipline service science engineering management exclusion criterion paper peerreviewed paper available university eastern finland library author article article presenting research progress article match inclusion criterion poster tutorial ieee xplore acm scopus sciencedirect google scholar result reviewed duplicate studiescontinual service improvement systematic literature review data collection systematic literature review conducted data collection conducted two phase multiple database used relevant researcharticles see table phase included six database word service man agement mandatory word abstract eld result phase author decided add new database springerlink keywordswere merged together operation increase result additionally ser vice management mandatory word abstract deleted second phase expanded search result see table table database search result database name phase phase ieeexplore association computing machinery acm scopus web science sciencedirect elsevier google scholar springerlink reading title abstract keywords article researcher evaluates whether research related research scope data search documented microsoft excel database year topic area research questionissue summary paperwhether study referenced research problem reported quality bias cite analyzed whether study supported closely related research problem overall identied relevant study journal conference article finding presented chapter table chapter finding current state sevenstep improvement process literature according literature review concept continual service improvement csi mentioned part itil life cycle lot research itil process service management improved using methodology assix sigma donko present improvement service quality using six sigma methodology according donko csi interacts plandocheckact pdca cycle idea recognized six sigma methodology step dmaic dene measure analyse improve control cycle additionally herrera van hillegersberg present lean six sigma lean six sigma approach gained popularity improve manufacturing process heikkinen paper focus study csi sevenstep improvement process studied service management literature result study examined csi detail according lamichhane heard read continual service improvement still dont know startits implementation process lima present service management setting current approach support csi suffer many deciencies csi activ ities typically rely unstructured procedure based weak datatrinkenreich investigate service manager dene measure monitor service goal strategy difculties faced context lack available time work measurement result lack discipline provide measurement data lack process deal people behavioral issue lack understanding measurement result yamamoto check sevenstep process activity item identies follow ing maturity level problem service management operation assessed achieve business objective kummamuru proposes csi framework including phase capturing service improvement objective holistic point view prioritizing improvement objective executing idea appropriate implementation strategy measuring managing improvement process according kumma murus study using six sigma method implement improvement produc tion helped solve identied problem rather identifying problem improvement systematically kind itsm process improvement identied literature literature review several study itsm process improvement found article focused specic process challenge data analyzed better identify root cause problem discover itil process improvedarisenta identify change management process maturity improvement related lamichhane focused identifying potential improvement course business planning realization process decision lineberry identies implementing knowledge management practice organization opportunity leverage understanding environment tool improve performance metric customer service collaboration macas identify institution public sector service catalog implemented indra hendra present project team ready implement csi project perspective challenge related softwaresupport csi activity ilvarianto legowo study provide solution ticket reporting record system ticket system need implemented business unit certain area utilization staff available number incident handled analyzed reviewed periodically balance resource met maturity level measurement done periodically every organization trigger innovation continual development yuan identify lot company want customer provide feedback company pay customer time customer user studiescontinual service improvement systematic literature review therefore customer getting smarter ignoring survey study integrate gamication service desk create loop knowledge collabora tion process user journey customer rewarded earn point get gift providing useful feedback service team do santos present itsm process contain segment human becomes bottleneck slows entire process karkokov identify lack comprehensive efcient methodology management cloudcomputing service consumer point view related csi propose new concept csi continual cloud service improvement management process focus improving longterm performance cloud service collecting data according kajbaf measurement reporting key requirement service improvement turn required value creation success competitive market propose service reporting framework help organization implementing service improvement process relation isoiec pdcacycle identied following report type could used identify service improvement reporting routine task reporting assigned task reporting event reporting service report review meeting management report identify manage improvement related service itsm process kirilov mitev propose pattern itil integration activity consisting stage assessment itsm process creating roadmap itil implementation managing transition evaluation continual service improvement addition ally abdelkebir propose three task support itil usage dening goal process maturity framework pmf auditing quality management system qms project management continuous service improvement program csip according kirilov mitev successful management framework imple mentation continual improvement start kirilov mitev present improve ment based experienced result idea noticed transition implies best practice applied appropriately regular auditsconducted yearly optimize management process jaadla johansson state assessment process maturity commonly used starting point identifying improvement would benecial perform according continual improvement service management pro ce measured performing process maturity assessment comparing theorganizations process performance bestpractice reference set process several assessment framework exist however existing assessment qualitative nature make expensive apply especially repeated regularly shrestha developed softwaremediated process assessment smpa approach enables assessment itsm process smpa approach includes process selection online survey collect assessment data measurement processcapability report process improvement recommendation smpa approach support decisionmaking process improvement heikkinen cortina present tudor process assessment tipa framework improve itsm process assessment used increase business value service according silva tipaframework relationship enterprise architecture principle useful understanding organization business silva create graphical notation close gap enterprise architecture tipa making easier organization improve visualize process achieve desired process maturity level research abdelkebir aim identify important aspect propose practical agile framework itsm study enables decisionmakers improve measure agility enhancement hence compare agility information system agile process maturity framework apmf deploying catersteel lepmets present service quality measurement framework industry propose feasibility measuring interlinked service quality aspectsfindings catersteel lepmets support systemic approach service measure ment various service area interlinked stability service impact process performance customer satisfaction jntti describes kismet key service management excellence tech nique model process improvement phase create process improvement infrastructure perform process assessment plan process improvement action improveimplement process based itsm practice deploy introduce process evaluate process improvement continuous processservice improve ment csi point view kismet model phase could used form structure sevenstep improvement process implement improvement phase opportunity could automation bring sevenstep improvement process shiono propose graphic visualization relationship process document approach help improve work efciency management process related documentation ahmad present proper documentation effective process design give direction organization implement isoiec effective way according krishnan ravindran digital transfor mation force organization implement automation solution meet demand digital service krishnan ravindran reviewed automation scope itil process perspective identied service operation process highest scope automation opportunity csi guzman present study twitter message tweet contain important informa tion software improvement requirement evolution feature request bug report feature shortcoming description study rouhani focused itsm software selection achieve successful itsm implementation shehe proposeditilbased framework present itsm software selection criterion functional nonfunctional requirementscontinual service improvement systematic literature review discussion aspect continual service improvement literature academic literature study systematic implementation csi seven step improvement process itsm context rarely studied topic lot research itil process service management improved using otherindustry methodology six sigma lean six sigma refers statistical mea sure indicate defect within process lean applied situation process already need improvement point view six sigma lean would brought slightly different perspective focusing xing problem creating process improve service continually way improvement service produced contains weak visibility impact modeling metric according literature csi impor tant phase article mainly focus describing csi part itil frameworkterminologically csi discussed academia confusingly various concept used without clear denition csi process csi activity csi program step pro ce activity item continuous service improvement program csip caseforming perception challenging due missing vague denitions summary literature contribution presented table table aspect csi literature researcher contribution donko present result using six sigma methodology herrera van hillegersberg propose integrated approach lean six sigma continuous improvement service lamichhane present unclear start implement itil csi process lima present csi improvement suffer weak visibility impact modeling metric trinkenreich identify service manager faced difculties related dene monitor itservice goal strategy yamamoto identify maturity level problem related step process activity item kummamuru propose csi framework ensuring systematic service improvement heikkinen identify manage improvement related service itsm process according literature improvement could identied two focus service provided way process service provided large number study focus making resolution service provider specicitsm process problem study case organization challenge analyzed identify root cause problem discover itil process improved study support search solution identify similar problem example development incident management process however study challenging clarify systematic repeatable seven step improvement management process could implemented serviceprovider organization abdelkebir study present itsm maturity low level could indicate csi related paper found lit erature review process agreed way accomplish something including stepsinputs output process monitoring used verify outcome process example isoiec denes requirement continual improvement process consists following step improvement doc umented improvement goal set quality value cost productivity risk reduction improvement prioritized improvement planned improvementsare implemented improvement measured improvement reported sup port implementation improvement related service itsm process future research could explore possibility adding new step sevenstepimprovement process evaluate effectiveness implemented improvement summary literature contribution presented table table identify manage improvement related service itsm process researcher contribution arisenta change management process lineberry knowledge management macas service catalogue management indra hendra project management ilvarianto legowo incident management process yuan feedback management knowledge management karkokov continual cloud service improvement management process do santos itsm process people perspective kajbaf report type reporting process kirilov mitev improvement identify experienced result regular audit continued continual service improvement systematic literature review table continued researcher contribution jaadla johansson design quotative measuring tool recurring maturity self assessment shrestha develop softwaremediated process assessment smpa approach enables assessment itsm process cortina present tudor process assessment tipa framework improve itsm process assessment silva create graphical notation enterprise architecture tipa abdelkebir propose agile process maturity framework apmf catersteel lepmets systemic approach service measurement jntti key service management excellence technique kismet model process improvement improving automating sevenstep improvement process related literature scope sevenstep improvement process automation result could increased maturity sevenstep improvement process increase maturity sevenstep improvement process shall support itsm process capability overall organizational maturity ass ment process maturity commonly used starting point identify improvementsthat would benecial perform continual improvement point view sevenstep improvement process applicable itsm process organizational level otherwise would support improvement increasing maturity immature service provider organization needed summary literature contribution presented table table improving automating sevenstep improvement process researcher contribution shiono propose graphic visualization relationship process document understand itsm structure ahmad identify challenge related isoiec implementation senior management support justication investment cooperation among support team documentation effective process design continued heikkinen table continued researcher contribution krishnan ravindran identify csi automation opportunity guzman propose analysis technique summarizing classifying prioritizing tweet rouhani present itsm software criterion achieve successful itsm implementation conclusion study aimed answering research problem could service provider manage continual improvement systematic way goal paper present result systematic literature review increasing understanding csiand sevenstep improvement process provide topic future research research related itilbased csi sevenstep improvement process itil widely used framework managing service vocabulary practicesare familiar service provider main nding csirelated terminology need clarication consistency academia practice guide future csi research example clarify role internal practice csi provide stagedapproach continual improvement identify model support improving automating sevenstep improvement process study consisted four research question regarding research question current state sevenstep improvement process literature focused present csi related study context service management ndingsindicate literature much research csi phase sevenstep improvement process could used improve service itsm process systematically ndings second research question kind itsm process improvement identied literature revealed process improvement studied especially point view lean six sigma methodsfrom point view six sigma lean would brought slightly different perspective focusing xing problem creating process improve service continually third research question identify manage improvement related service itsm process focused study model support improve implement itsm process service maturity quality aspect servicesand ict system could improved without systematic management improve ments observed identifying managing improvement may need example framework process assessment quality auditing enterprise architecture todening planned goal improvement prioritization roadmap improvement implementation managing transition project management evaluation improvementcontinual service improvement systematic literature review fourth research question opportunity could automation bring sevenstep improvement process focused aspect automation process visualization implement sevenstep improvement process automation used example increase visualization relationship processesand document analyze service management record tweet following limitation related study first literature review conducted one researcher author several researcher would helped inthe analysis literature review result second study conducted within time longer research period would resulted study deepened analysis aimed improving validity study using kitchenham guideline performing systematic literature review reliability improved utilizing datastore maintaining chain evidence future study could focus examining sevenstep improvement process detail identifying theinterfaces itsm process isoiec standard requirement continual improvement part whole process reference lloyd lacy hanna itil continual service improvement edn stationery ofce tso london shrestha catersteel toleman rout towards transparent efcient pro ce assessment service management mitasiunas rout oconnor dorling ed software process improvement capability determination springer cham kemppainen tedre sutinen service management education tanzania organizational grassrootslevel perspective proceeding annual conference information technology education acm new york isoiec isoiec information technology service management part service management system requirement international organization standardization international assessor certication scheme intacsinfo spice itservices process reference assessment model june httpsintacsinfoindexphpcomponent rsfilesdownloadlelespathspicebdocumentsfspicebforbitser vicesfspiceforitservicesvreleasedpdfitemid accessed july craig yetton business process redesign critique process innovation thomas davenport case study literature aust manag keel orr hernandez patrocinio bouchard technologyoriented serviceoriented approach management syst catersteel service department struggle adopt serviceoriented philosophy int inf syst serv sect ijisss tan catersteel toleman implementing service management case study focussing critical success factor comput inf syst governance institute itgi global status report governance enterprise geit van bon service management introduction edn van haren publishing zaltbommel adam cartlidge hanna range sowerby windebank itil foundation handbook tso information publishing solution london heikkinen abdelkebir maleh belaissaoui agile framework management orga nizations case study based devops proceeding international conference computing wireless communication system iccwcs new yorkacm boonen brand governance based cobit management guide van haren publishing ebert gallardo hernantes serrano devops ieee softw agh ramsin scrum metaprocess process line approach customizing scrum software qual yamamoto continuous approach improve management procedia comput sci kitchenham dypa jorgense evidencebased software engineering proceed ings international conference software engineering ieee computer society los alamitos kitchenham charter guideline performing systematic literature review software engineering version ebse technical report ebse keele university university durh petticrew robert systematic review social science practical guide blackwell publishing usa donko improvement process quality service provider organization proceeding international symposium telecommunication bihtelpp ieee sarajevo herrera van hillegersberg using metamodeling represent lean six sigma service improvement proceeding conference business informatics cbipp ieee moscow lamichhane implementing continual service improvement business enterprise proposal improve business effectiveness nepal int adv re publ ijarp lima sauve souza capturing quality business value service using businessdriven model ieee trans netw serv manage trinkenreich conte barcellos santos dening measuring monitoring service goal strategy preliminary result pitfall qualitative study withit service manager proceeding acmieee international symposium empirical software engineering measurement esem acm new york kummamuru framework continuous service improvement csi optimizing dove tailing different systemic framework proceeding international conference quality reliability icqr ieee arisenta suharjito sukmandhani evaluation model success change manage ment banking institution based itil case study proceeding international conference information management technology icimtech ieee lineberry solve evolve practical application knowledgecentered service proceeding acm siguccs annual conference siguccs acm new york macias alonso vlez valuation management information technology service catalog public organization province manab ecuador proceedingsof international conference information management engineering icime acm new york continual service improvement systematic literature review indra hendra strategy implementing continual service improvement itil frame work anabatic technology tbk int re comput sci irjcs ilvarianto legowo incident management implementation using continual service improvement method aop proceeding international conference applied computer communication technology comcom ieee yuan marcus gamifying hpe service manager improve service desk knowledge contribution proceeding eai international conference simulation tool technique simutools acm new york do santos granville cheng loewenstern shwartz anerousis per formance management quantitative modeling service process using mashup pattern proceeding international conference network service manage ment cnsm laxenburg aut international federation information processing karkokov towards cloud computing management model based itil process proceeding international conference business information management icbim acm new york kajbaf madani suzangar nasher kalantarian service reporting framework effective implementation itil continual service improvement process con forming isoec proceeding fifth international conference digitalsociety icds iaria kirilov mitev approach implementing information technology infrastruc ture library comptes rendus lacadmie bulgare de science science mathmatiqueset naturelles jaadla johansson selfassessment tool estimation maturity proceeding european conference management leadership governance ecmlg academic conference publishing shrestha catersteel toleman virtualising process assessment facilitate continual service improvement service management proceeding australasian conference information system arxivorg cortina renault picard tipa process assessment mean improve business value service int strateg inf technol appl ijsita silva silva barafort vicente sousa using archimate model process assessment framework proceeding annual acm symposium onapplied computing acm new york catersteel lepmets measuring service quality evaluation service quality measurement framework industry serv sci re jntti improving service desk service management process nnish tax admin istration case study service engineering dieste jedlitschka juristo ed productfocused software process improvement lncs springerheidelberg shiono yoshizumi goto tsuchida fuzzy database interface analyze management system operation proceeding international virtual conferenceon applied computing information technology acit acm new york ahmad rabbany ali organizational human factor related challenge iso implication environmental sustainability circular economy int manpow heikkinen krishnan ravindran service management automation impact industry proceeding international conference computational intelligence data science iccids guzman ibrahim glinz prioritizing user feedback twitter survey report proceeding international workshop crowdsourcing software engineering csise ieee press rouhani fuzzy superiority inferiority ranking based approach service management software selection kybernetes ruostesaari implementing continual service improvement process aberdeen standard it division httpswwwtheseusbitstreamhandlethesissruo stesaarifpdfsequenceisallowedy accessed dec elevating software quality product discovery technique key finding grey literature review stefan trieingerb lukas wei jrgen mnch reutlingen university alteburgstrae reutlingen germany stefantrieflingerjuergenmuenchreutlingenuniversityde lukasweissstudentreutlingenuniversityde abstract era digital transformation notion software quality transcends traditional boundary necessitating expansion encompass realm value creation customer business merely optimizingtechnical aspect software quality result diminishing return product dis covery technique seen powerful mechanism crafting product align expanded concept qualityone incorporates value creationprevious research shown company struggle determine appropriate product discovery technique generating validating prioritizing idea new product feature ensure meet need desire customersand business reason conducted grey literature review identify various technique product discovery first article provides overview different technique ass frequently mentioned literature review second mapped technique existing product discovery process previous research provide concrete guideline establishing product discovery organization analysis show among thingsthe increasing importance technique structure problem exploration pro ce product strategy process result interpreted regarding importance technique practical application recognizable trend keywords product management product discovery user experience software quality digital transformation introduction environment creating new product service feature getting increasingly complex mean increasing market dynamic rapid technology change changing customer behavior make difcult predict product feature ser vice satisfy customer need especially longtime horizon addition customer user seeking product service experience factor pose new challenge company considering software quality theieee standard glossary software engineering terminology denes software quality degree system component process meet specied requirement author license springer nature fernandes ed trieinger degree system component process meet customer user need expectation two denitions combined quality pyramid see developed gojko adzic quality pyramid according adzic lowest level deployablefunctionally pyramid describes software must deployable meet minimum functional requirement subsequently level performantsecure aim ensure nonfunctional requirement per formance reliability security etc fullled software work well fullls nonfunctional requirement usability aspect get relevant usable mean ensur ing customer user easily operate feature however level notaddress issue whether feature used customer therefore order reach level useful necessary understand whether software also satises real customer need help make progress related customergoals attention paid development organization run risk developing feature customer need want feature incur cost maintenance finally care must taken ensure software issuccessful sense contributes economic goal top level quality pyramid practice often observed company focus fullling two lowest level quality pyramid often result software functional either needed customer low value delivered customer complicated insufcient usability reason company struggling develop product deliver value customersand thus contribute achievement high product quality regardless whether elevated understanding software quality described quality pyramid whether another model used digital transformationrequires expanded understanding concept software quality enables feature entire product linked value creation product discovery understood mechanism developing product correspond expandedelevating software quality product discovery technique concept quality product discovery ability company identify validate product either solve existing problem currently solution enable customer solve problem efciently effectively existing solution therefore product discovery focus identication exploration problem potential customer well nding solution useful feasible economically viable simple term product discovery aim quickly separate good idea bad answer question productsfeatures service developed fulll customer need however practice company conduct product discovery expert management determine product developed delivered customer main reason company know conduct product discovery systematically mean company need better understand phase product discovery process includes technique applied phase regard former study conducted mnch revealed typical product discovery process includes phase alignment align various stakeholder important cornerstone product development project research gain understanding user customer problem ideation develop creative idea based learning conduction previous phase creation translate idea tangible product feature validation renement build prototype collect customer feedback however author answer question method company perform phase order close gap paper aim identify suitable technique phase product discovery process dened mnch therefore study considered extension research mnch intended provide company guideline establishment product discovery technique related work comprehensive description related work found mnch space limitation focus selected aspect scientic literature product discovery often referred continuous exper imentation fagerholm mention suitable experimentation environment requires least ability create minimum viable product mvp moreover environment experimentation must also enable creation management ofexperimentation plan include experiment ndings product roadmap manage exible business strategy bosch present concept innovation experiment system concept includes development hypothesis based customerpaints point business goal subsequently metric measure hypothesis must dened step minimum viable product created order collect data data analyzed serve input accepting rejecting hypothesis ifthe hypothesis conrmed strategy proceed product feature fully implemented otherwise impact invalid hypothesis must analyzed could lead adjustment product strategy finally mnch conducted grey literature review order gain better understanding product discovery practice context author identied motivation challenge trieinger proposed process conduct product discovery mentioned introduc tion mnch propose several phase apply product discovery however research lack insight technique suitable conduction phase point view provision concrete technique crucial aspectof providing appropriate guideline practitioner therefore study hand aim identify suitable product discovery technique map phase proposed mnch research approach paper aim identify specic technique application various phase product discovery process achieve practical experience knowledgeof practitioner required collect experience knowledge systematically repeatably grey literature review glrs emerged promising approach recent year glr structured process order analyze source greyliterature blog white paper decided conduct grey literature review since practitioner often grey literature report experience order struc ture glr apply guideline garousi consist three main phase planning review conducting review reporting review see table noted applied approach grey literature review previous study therefore following description research methodis based following study table design grey literature review planning review identication need glr formulation research question scope study denition renement search string determination inclusion exclusion criterion conducting review usage search string conduction quality assessment data extraction reporting review writing ndings documentation planning review identication need grey literature review first considered whether glr suitable research therefore applied checklist provided consists seven question garousi propose conduct ing glr one question answered positively otherwise systematicliterature review suitable answer related paper shown table elevating software quality product discovery technique answer third question systematic literature review conducted product roadmapping closely related topic product discovery review showed conduction product discovery highly relevant success product roadmapping however none identied paper discus technique forconducting various phase product discovery process answer question six seven served expert interview study indicates question technique conducted different product discovery phase ofgreat interest practitioner reason grey literature review contributes transferring practical knowledge scientic community industry table checklist garousi question answer subject complex solvable considering formal literatureyes lack volume quality evidence lack consensus outcome measurement formal literatureno contextual information relevant subject study goal validate corroborate scientic outcome practical experienceno goal challenge assumption falsify result practice using academic research vice versano would synthesis insight evidence industrial academic community useful one even communitiesyes large volume practitioner source indicating high practitionerinterest topic scope study formulation research question particular com panies operating softwareintensive business facing challenge high market dynamic associated uncertainty situation complicates thedevelopment product feature service fulll need customer thus specic technique required executed efciently effectively therefore objective study identify technique conducted inthe various phase product discovery process based goal dened following research question product discovery technique mentioned grey literature often technique mapped product discovery process answer based product discovery process mnch noted general various recommendation conduction product discovery process exist chose product discovery process proposed mnchet since developed based insight grey literature trieinger identication search string search article developed search string brainstorming session author participated context dened set search term tested initial search iteratively adjusted afterward connect nal term boolean operator denedthe following search term product discovery process method tool complete search string used search denition inclusionexclusion criterion order separate relevant irrelevant article used inclusion exclusion criterion shown table table inclusion exclusion criterion inclusion article discus technique conduct product discovery article published english url working freely available exclusion source nontextbased article contains duplicated content previously examined article conducting review data collection study selection process data collection process con ducted using search string mentioned applying google search engine googlecom previously search history cooky deleted minimize impact history cooky search result moreover language resultswas set english selection region enabled increase number possible result google option include similar result activated search conducted january resulted hit addition conducted asnowballing process considering article recommended arti cle led ten additional article applied study selection process consisting step delete duplicate scan article apply denedinclusion exclusion criterion lead nal set relevant article quality assessment since grey literature peerreviewed like scientic paper subjected relevant article quality assessment therefore used proposed quality assessment procedure garousi mean relevant article assessed based assessment criterion author authority descriptionof objective methodology article well novelty impact assessment criterion contained specic question whether author associated reputable organization conclusion supported data theentire assessment includes question rated based threepoint likert scale follows point assigned article fully met assessment question elevating software quality product discovery technique point awarded article partially met assessment question point given article meet assessment question question answered point summed total score calculated maximum score achieved point article considered trustworthy ifit achieves total score point answer question regarding author authority conduct additional investigation via google addition assessment includes question many backlinks article contains ass impactof article answer question tool backlink checker see http ahrefscomdebacklinkchecker detailed quality assessment extensive attach paper therefore found figshare result product discovery technique order answer analysed relevant article identied different technique conducting different phase product discovery process noted usually several technique discussed one article figure show frequently mentioned article identied review frequentlymentioned technique prototyping conducting customer interview development persona frequency product discovery technique identied article based experience author technique gained importance practice recent year selected described due space limitationswe could include identied technique paper list relevant article therefore found figshare trieinger wizard prototyping goal method wizard create illusion functional product allow testing producing nal version idea behind concept user product interacts system believe autonomous reality controlled invisible person wizard thekey feature identied renement take place indepth user testing one example wizard prototype company aardvark aim connect people question people best qualied answer via digitalinterface internet creation network including algorithm involves lot coding effort however product team wanted test reaction user interface well coding completed reason theyused instant messaging system team people behind scene physically reroute question answer right people result product team learned lot developed concept without investing programming resourcesthe wizard often used rapid development improve user experience also helpful aidriven experience range system response virtually impossible replicate traditional prototyping tool empathy map method designed help product team better understand user customer capturing knowledge behaviour attitude fore empathy map provide four quadrant say think hear quadrant say show user say loud example interview thethinks quadrant capture user thinking experience product example question could occupies user thought matter user quadrant show action user currentlyperforming example refreshing web page several time shopping around compare price finally quadrant hear reects factor inuence user example statement impression family friend important aspect using approach content individual section lled arbitrarily based much possible evidence interview observation result workshop gray osterwalder presented extension empathy map called empathy main extension addition four sect say think hears section goal added empathy map canvas help product team better understand context customer user moreover section pain gain added intention changeis emphasize pain gain inside box guessed inferred element outside user box say think hear answered conduction interview observation product people apply empathymap canvas starting section goal working canvas clockwise direction lightning demo method structured group session gather idea inspi ration solve identied problem first facilitator designated lead moderate lightning demo session participant min identify three product service solved related problem one problem participant seeking idea afterward participant present hisndings group context important presenter explains theelevating software quality product discovery technique empathy map canvas based identied solution similar problem contributes solution current problem moreover recommended limit duration presentation minto avoid dragging participant presented three product service result idea board serf inspiration developing solution identied problem mission brieng herbig suggests using method mission brieng within phase alignment method consists part context higher intent teamintent key implied task boundary mission brieng creates alignment entire product team discus content section agree aspect include section context important come agreementon every section moving next one reason therefore decision made one section may impact content section impact mapping impact mapping aim align product team business objective test mutual understanding objective expected outcome focus team toward highest value feature deliver enable collaborative decisionmaking order achieve technique show assumption connection business goal impact user stakeholder team deliverable figure show example impact map online gaming platform context businessgoal increase number active player million example important actor player one hand player help achieve increase number player posting game social medium platform recommending thegames friend sending friend invitation game directly order inuence behavior player perform aspect mentioned several deliverable serve instance semiautomated invitation helpto make sending invitation comfortable personalized gaming experience increase probability player invite friend reaching new level motivate player share gaming achievement social medium trieinger example impact map based opportunity solution tree torres suggests using opportunity solution tree see visually represent possible path reach desired outcome construction opportunity solution tree start dening quantitative business outcomethis followed discovery opportunity drive desired outcome opportunity possible solution may contribute achievement respective opportunity dened validation whether possible solution reallyleads fullment opportunity take place space assumption testing according torres application opportunity solution tree provides several benet example resolving tension business need customer need building maintaining shared understanding achieve desired outcome unlocking better decisionmaking learning cycle well buildingcondence knowing step take next example opportunity solution tree based elevating software quality product discovery technique mapping product discovery technique phase product discovery process order answer mapped identied product discovery technique product discovery process proposed mnch mentioned product discovery process mnch consists stage research ideation creation validation renement see column table first mentioned technique identied review applied several phase discovery process reason therefore many technique take holistic approach thus address many phase discovery process good example development opportunity solution tree technique start identication outcome serve input generation opportunitiessuch customer problem phase research subsequently variety solution idea dened phase ideation prioritization conducted opportunity tackled phase creation finally determined development ofa prototype highpriority idea validated phase validation renement detail identify one technique focus creation alignment ten technique applied phase research nding problem thecustomers fifteen idea applied generate idea ideation nine technique address translation idea identied concrete output finally six technique consider validation process order identify output contributeto solving customer problem threat validity framework according wohlin order discus trust worthiness validity study construct validity first construct validity threatened google search engine term accessibility returnedresults mean entering search string google search engine return article however access article verify article representative total search result asecond threat concern reproducibility study particular google search using search term could produce result exactly match search result found study third dened search string present threat construct validity may article discus topic product discovery technique different keywords search string captured therefore cannotbe excluded missed relevant article internal validity increase criterion internal validity subjected relevant article quality assessment measure lter article high probability providinguntrustworthy content external validity technique identied particularly relevant dynamic market environment associated uncertainty therefore nding study directly applicable industry sector mechanical engineering however excluded aspect may bring benet industry conclusion validity order increase conclusion validity trieinger table mapping product discovery technique phase according mnch method alignment research ideation creation validation renement prototyping customer interview persona wizard brainstorming empathy map idea validation grid brainwriting lightning demo mission brieng customer survey impact mapping opportunity solutiontree job story job done customer journey mappingx opportunityassessment usability testing five why assumption mapping user story mapping value complexity matrixx value proposition canvasx product vision board product analytics ideation risk matrix continued elevating software quality product discovery technique table continued method alignment research ideation creation validation renement actorjoboutcomemapping uncertaintyimpact matrixx discus ndings one practitioner several year experience conduct ing product discovery activity discussion revealed ambiguity inconsistency conclusion paper conducted grey literature review identied product discovery technique assigned discovery phase alignment research ideation creation validation renement conducting product discovery critical identify validate risky assumption starting product develop ment analysis showed addition classic instrument interviewsand survey technique regarding validation phase rise example technique idea validation grid wizard assumption mapping addition technique structuring research process opportunity tree orimpact mapping gaining attention indicates practitioner increasingly concerned importance conducting product discovery seeking way implement industry point view practitioner ndings guideline best practice establish product discovery activity organization establishment product discovery activity critical developinghighquality product satisfy need customer scientic point view transfer practical knowledge eld software engineering research researcher focused exploring topic product discoverytherefore hope work inspires research position research area product discovery reference kim beckman agogino design roadmapping uncertain world implementing customerexperiencefocused strategy calif manage rev ieee standard committee ieee standard glossary software engineering terminology ieee std adzic httpsgojkonetredeningsoftwarequality accessed may torres continuous discovery habit discover product create customer value business value product talk llc trieinger cagan create tech product customer love wiley hoboken new jersey mnch trieinger lang deep product roadmap maturity model method assessing product roadmapping capability organization proceeding theinternational workshop softwareintensive business sibw startup platform ecosystem acm mnch trieinger heisler product discoverybuilding right thing insight grey literature review proceeding international conference engineering technology innovation iceitmc ieee fagerholm guinea menp mnch building block continuous experi mentation proceeding international workshop rapid continuous softwareengineering acm bosch building product innovation experiment system cusumano iyer venkatraman ed software business lnbip springer heidelberg garousi felderer mntyl guideline including grey literature conducting multivocal literature review software engineering inf softw technol mnch trieinger bogazky eiler roling product roadmap format uncertain future grey literature review proceeding euromicro conference software engineering advanced application seaa ieee trieinger mnch bogazky eiler schneider roling pri oritize product roadmap everything feel important grey literature review proceeding international conference engineering technology innovation iceitmc ieee trieinger mnch petrik lang traditional product roadmaps fail dynamic market global insight taibi kuhrmann mikkonen klnder abrahamsson ed proceeding international conference productfocusedsoftware process improvement profes springer cham httpsdoi org mnch trieinger lang whats hot product roadmapping key practice success factor franch mnnist martnezfernndez ed productfocusedsoftware process improvement lncs springer cham figshare quality assessment conducted author httpsgsharecomsdf bea accessed may figshare list relevant article including review httpsgsharecomsad ddcdd accessed may mcgovern httpsblogprototypriowizardofozprototypingprocessblogaffc accessed may answerlab httpswwwanswerlabcominsightswizardofoztesting accessed may breaker httpsfutureofstuffchallengeorgdownloadprototypebootlegwizardofozpdf accessed may uxsight httpsuxsightcomblogwizardofozprototyping accessed may booth httpswwwuxboothcomarticlesempathymappingaguidetogettinginside ausershead accessed may niels norman group empathy mapping httpswwwnngroupcomarticlesempathymap ping accessed may relab academy httpsrelabacademydesignsprintlightningdemoafastwaytoignite inspirationinadesignsprint accessed elevating software quality product discovery technique swiss innovation academy httpsstoreswissinnovationacademyviewcoursesbasics ofideationforinnovationaselectionofideationtechniqueslightning demo accessed may herbig httpsherbigcoproductdiscovery accessed may neuri consulting llp httpswwwimpactmappingorg accessed may aktia httpsaktiasolutionscomgettingstartedwithproductdiscovery accessed may adzic marjory impact mapping making big impact software product project provoking thought torres httpswwwproducttalkorgopportunitysolutiontree accessed may wohlin runeson hst ohlsson regnell wesslen experimentation software engineering introduction kluwer academic publisher runeson host guideline conducting reporting case study research software engineering empir softw eng visual milestone planning hybrid development context eduardo mirandab carnegie mellon university pittsburgh usa mirandaeandrewcmuedu abstract paper explains visual milestone planning vmp method using agile vocabulary facilitate adoption agile practitioner afront end hybrid development process vmp visual collaborative planning approach promotes shared understanding work approach commitment direct manipulation team member reied planning construct involved development plan product backlog established relevant milestone identied novel constructcalled milestone planning matrix used document allocation product backlog item milestone milestone due date later determined grouping sticky note representing work performed timeboxes calledwork package accommodating resource time scaled scheduling canvas much would done tetri game keywords milestone planning hybrid development agile project management introduction prominent agile author long advocated need project artifact guide work team cohn example suggests release plan without team move endlessly one iteration next cockburn add coarsegrained project plan possibly created project map set story release make sure project delivering suitable business valuefor suitable expense suitable time period highsmith postulate speculate phase capability andor featurebased release plan deliver vision developed well wave milestone plan spanning several iteration used asmajor synchronization integration point brechner writes important vision plan achieving project goal even crowdsourcing project need organizing principle structure allow everyone contribute toward shared outcome although author discus characteristic plan must show plan must formulated term task performed rather term outcome project must deliver must elaborated author license springer nature fernandes ed qua tic visual milestone planning hybrid development context collectively team solitary project manager later hand execution provide method approach planning proposed andersen called milestone planning seminal article andersen denes milestone result achieved description condition state project reach certain point time milestone describes fullled method full subsequent work describes milestone planning activity performed group stating strongly emphasize motivational inspirational aspect planning often neglected practice planning becomes tedious chore carried project manager desk result lack ownership ofthe plan party involved project consequently plan never actively used one reason failure many project also like case agile author failed provide method construct plan gap wasaddressed miranda proposed participatory visual approach construct milestone plan called visual milestone planning vmp nature good milestone plan robust comprehensive easy stand confer great exibility term achieve milestone make good organize agile endeavor paper cast vmp approach context planning project executed using agile approach like scrum creating commonly dened hybrid approach execution aspect project cursory covered due page count limit interested reader directed indepth treatment rest paper organized follows sect describes milestone plan sect briey describe execution plan sect explains proposed method sect provides detailed example illustrates method serf validation sect provides summary reference initial evaluation method milestone plan figure show conventional milestone plan observed plan concise typically conned size allow grasped written using vocabulary stakeholder understand plan comprises sequence statesthe project inception successful conclusion activity team need perform achieve state proposed work progress example design concept approved milestone denes statewhere project team presented idea satises need sponsor acquiesced plan estipulate team get show wireframe diagram develop high delity prototype make apowerpoint presentation issue certainly addressed team example sprint planning place milestone plan miranda focus state rather activity result robust plan since independent task need performed get unlikely project sponsor desire approve design concept implemented change dependency milestone typically finish finish relation meaning milestone depends milestone milestone completed milestone completed finish finish relation easyto spot provide exibility activity leading realization milestone could start milestone could hard soft hard milestone milestone accom plished set date lose value result severe penalty date government resolution system development supposed address go effect start holiday shopping season example hard milestonesa project might encounter soft milestone hand completion date result planning process might associated penalty liability statement work agreed principle discretionary typical milestone plan showing due date responsibility milestone description miranda supplemented andersen original technique concept work package schedule see work package schedule consists number timeboxes within work associated given milestone called work package executed plan hold purpose work package schedule twofold determine earliest day milestone canvisual milestone planning hybrid development context completed context project work might need performed drive scheduling work project execution within constraint imposed hard milestone due date depen dencies identied plan work package schedule decided teamaccording technical business stafng strategy need done much work possible onset start slow minimize risk aggressively ramp maintain constant workforce work must completedwithin six month people constructing assume distribution competency team match work need sensible assumption agile context assumes either generalist orbalanced crossfunctional team case assumption would hold would possible break resource dimension competency lane assign corresponding effort lane approach could used scale themethod used project multiple team work package schedule represents one possible arrangement work package corresponding milestone plan shaded area corresponds work associated milestone immediately right resourcetime frame enclosing work package timebox iteration part iteration one team member work design another selection infrastructure team member help neededfrom iteration team mainly work item included release iteration team work feature included second release beta testing adapted executing plan course project team progressively renes item backlog meet denition ready decomposes task necessary realization iterationsprint planning meeting dictated timeboxes depicted work package schedule instead biweekly concern product owner asdevelopment progress plan updated reect new circumstance arising miranda work completed change project context since milestone basically state goal attained plan specify task must begin long take perform tends pretty stable visual milestone planning vmp method figure depicts vmp method step process create product backlog dening project scope backlog item associated estimated effort required realization estimate later used establish timeboxes anticipated work could performed vmp proposes adoption hierarchical product backlog see enumeration output delivered customer meet project objective functionality documentation infrastructure gadget service decomposed smaller chunk reach user story level denes backlog item completed single iteration technical story work team need perform unlike user story direct user value counterpart thehierarchical nature backlog facilitates comprehension project scope support progressive renement item identied estimation collective assignment milestone structure proposed compatible definition backlog posited nowadays practitioner tool safe epic capability feature story jira initiative epic story azure epic feature story rubin epic theme story since backlog form basis planning open ended sense backlog traditional agile project balancing predictability progressive renement requires creation planning aggregate budgetary allowance made understanding time come dened either circumscribe level ambition available budget plan needto revisited project whose nal outcome well dened could scoped term learning activity running design sprint planning package adenite purpose release release etc budget whose exact content yet decided second step process denition milestone milestone chosen signal attainment major achievement delivery key component assembly completion important process step mark commitment made team customer make proprietary equipment technology required theproject available team notice diagram arrow back forth step although product backlog normally inform choice milestone sometimes establishment particular milestonemight result creation new backlog item must incorporated lead rearrangement step document dependency existing milestone mean milestone dependency diagram notice diagram contains date except associated hard milestone permit consideration differentvisual milestone planning hybrid development context visual milestone planning method stafng timing strategy later process process creation milestone dependency diagram start writing identied milestonename sticky note quick ordering according obvious sequence completion followed discussion specic dependency connecting corresponding milestone necessary reordering original sequence thedependencies milestone nishtonish since obvious common nishtostart give lot exibility start working work package simple example nishtonish dependency betweencoding testing one could start writing test case coding begin one nish coding done fourth step cell header row milestone planning matrix populated name milestone althoughnot strictly required process listing chronologically left right greatly contributes matrix readability ease work although possible using digital tool recommended least initially way vmp promotes involvement commitment reication ofthe planning construct work package milestone schedule employed planning process direct manipulation team member collectively create plan miranda step backlog item associated milestone help realize via body milestone planning matrix see association informed milestone denition example release milestone would associated backlog item included said release association done labeling row inthe planning matrix name topmost backlog item whose descendant contribute milestone recording effort required intersection row column corresponding milestone item beingassociated milestone multiple backlog item associated case backlog item would associated single milestone entirety however circumstance like planning package integrative effort itis convenient allocate fraction total effort required item multiple milestone hierarchical product backlog relation iteration sprint backlog step team black known nonworking period holiday training mandatory vacation since principle would work carriedout time step team mark hard milestone work package scheduling canvas hard milestone act anchor point plan step team iteratively build work package schedule see posting sticky note empty space work package scheduling canvas starting work corresponding process ceremony following work corresponding hard milestone nally soft milestone since planning involves physical positioning sticky note thecanvas must correspondence work hour represented eachvisual milestone planning hybrid development context note canvas physical dimension example choose sticky note represent work three inch time axis canvas correspond week three inch resource axis correspond full time equivalent fte resource chosen lower granularity sticky note torepresent work would useful case larger project three inch time axis would correspond month instead week one could rip sticky note express fraction effort time hardly necessarygiven resolution plan milestone planning matrix step plan completed sprucing milestone sequence diagram assign ing due date soft milestone adding responsibility information integratingall common document approximate due date soft milestone found looking work package schedule date aligned right edge time box associated milestone hard milestone denitiona set date miranda iterative construction work package schedule using sticky note represent effort required realize milestone detailed example section provides stepbystep account application process creation milestone plan imagine company bidding contract develop ecommerce site small book publisher discussion customer sketched following note customer want include beta testing period validate site design customer accept deployment system wide acceptance test satisfactorily completed customer signoff follow satisfactory deployment system customer would like least three software release one collect user feedback via beta testing another one conrm progress system towardsthe launch date nal one complete system minimum risk launch date release would like include following user story category list book detail add cart checkout data base epic second release category book list cbl remove cart shipping method content third release known time customer would like reserve signicant number hour incorporate feedback resulting beta testing introduce user story might emerge development customer preparing launch business around beginning may next year would like system ready least one month thatvisual milestone planning hybrid development context part company start project end september four developer work project minimize risk rework plan start programming infrastructure selected user interface information architecture designare well underway step based requirement professional knowledge development team created backlog shown describing understanding project scope work estimated effort required execution required softwarecapabilities grouped four epic browsing buying data base increase readability backlog team felt grouping based release would hindered comprehension system functionality design infrastructureselection beta acceptance testing technical story could made part website software deliverable team chose put level backlog highlight understanding customer wish discussion many hour reserve nal release team decided allocate since compatible team resource availability thecustomer schedule provided ample time incorporate feedback complete yet undiscovered feature hierarchical backlog amazonlight project step obtaining concurrence backlog sponsor team started choosing relevant milestone producing list table beware solution unequivocal miranda selfevident milestone like project kickoff software release customer request beta test others created team based best judgment important completion criterion associated milestone denes meaning help identify backlog item mappedonto milestone organized seems like logical sequence make list easier understand search step team construct milestone dependency diagram organizing milestone identied previous step seems like logical sequence connecting using nishtonish dependency notice dependencydiagram say nothing work ought start address step step step team read milestone dependency diagram natural sounding order writing milestone name left right header mpmif two milestone similar due date doesnt matter one listed since sole purpose ordering increase matrix readability step step team associate backlog item corresponding mile stone rather mechanical activity whose value resides visibility brings planning process discussed backlog item associated withmore one milestone shown row technique relief creating backlog item sake item map single milestone abusing obscures mapping used sparingly milestone cloud infrastructure available backlog item associated although work select infrastructure part scope theproject effort provision reason include milestone represents commitment made project team customer could beta test system signal delay fullling promise could affect completiondate case project management item effort allocated milestone later spread lifespan project according uniform prolevisual milestone planning hybrid development context potential milestone amazonlight project milestone rationale note abovehard date completion criterion project kickoff october year development team assembled meetingwith project sponsor concluded design concept approved informationarchitecture designed approved sponsor infrastructure selected cloud provider selected consider aws azure googlecloud others design completed proposed team feedback sponsor incorporated design cloud infrastructure availableproposed team cloud production environment available release acco data base indicated functionalityis ready tested coverage working production conguration nobroken menu link beta testing launched release software made available beta user user behavior hypothesis denedwebsite instrumentation working release cbl rcsm indicated functionality ready tested coverage andworking production conguration beta testing result reviewed insight arisingfrom beta testing disposed continued miranda continued milestone rationale note abovehard date completion criterion release emergentfeatures reserved effort toimplement changessuggested beta testing unknown feature acceptance testing procedure approved acceptance test suiteapproved sponsor includes least onepositive one negative one invalid test case functionality acceptance test completed acceptance testpassed objection sponsor system deployed next year functionality running productionenvironment operator trained system must run least consecutive day without fault attributable software customer signoff customer accepts ownership software project closed may next year project postmortem executed record archived step team mark christmas new year week nonworking period step beside start end project contains one hard milestone system deployed milestone set beginning denition successful plan must satisfy hard milestone start marking work package schedulecanvas would constrain work could organizedvisual milestone planning hybrid development context step goal step establish window opportunity work stated work package must executed team label somehowtag many sticky note needed cover effort required work package accommodate appropriate empty space work package schedule canvas tagging important identify work corresponds thatis possible rearrange necessary team start accommodating effort corresponding crosscutting work package corresponding work package connected hard milestone nally corresponding rest work package order dictated milestone dependency necessary team might intersperse buffer protect milestone deemed critical figure show stylized version possible plan amazonlight project notice due holiday period extending late december early january effort release work package spread two month splitting thesticky note shown gure constraint put available resource three developer project manager possible deploy system aprilas customer wanted negotiation decided move milestone beginning may alternative could incorporate resource reorganize work relax condition development work thedesign concept approved renegotiate scope step step milestone plan completed reading work package schedule approximate date work associated milestone completed assigning due date milestone summary paper explained vmp method introduced used agile context method based manipulation reied construct work package milestone collective practice promotes shared understanding buyin plan vmp method evolved three year classroomand consulting experience put practice midsized capstone project personhours long two industrial organization also evaluated usability using process practice usability model although experience assessment required initial evaluation observation point direction method ease value organizing project miranda milestone planning matrix amazonlight project reference cohn agile estimating planning prenticehall upper saddle river cockburn crystal clear humanpowered methodology small team addison wesley upper saddle river highsmith agile project management edn addisonwesley upper saddle river brechner agile project management kanban andersen warning activity planning hazardous project health int project manag andersen grude haug goal directed project management kogan page london miranda milestone planning participatory visual approach mod project manag kuhrmann hybrid software development approach practice european perspective ieee softw visual milestone planning hybrid development context miranda milestone driven agile execution balancing agile disciplined engi neering management approach service software product igi global miranda bridging gap agility planning world fontdevila genero oliveros towards usability model software development process practice productfocused software process improvement profes quantum service architecture security smart city vita santa barletta danilo caivano alfred lako anibrata palb university bari aldo moro bari italy vitabarlettadanilocaivanoanibratapal unibait polytechnic university tirana tirana albania alfredlakofinedual abstract smart city becoming reality ample interest investment government private entity num ber smart city increase sheer size variety data major part come internet thing iot sensorsembedded device million intelligent device may vulnerable cyberattacks threat potentially harming one connected device exposing sensitive data therefore smart city intelligent operation center ioc using dierent machine learning algorithm monitor data take necessary action protect contain security incident advent quantum computing qchas led many initiative using various application smart city using quantum computing service yet fully contemplated context work propose architecturefor smart city security using quantum service qaas analyz ing classifying smart city data proposed architecture us two dierent quantum classiers implemented dwave leap quantum cloud qboost ibm quantum service variational quantum classier realtime classication data display security inci dent conveniently designed dashboard action thesecurity operation center soc specialist experiment shown dwave leap quantum cloudbased qboost performed best among quantum classiers regarding quality time keywords quantum computing quantum service smart citysoftware engineering introduction smart city vision future anymore large city line mission convert smart city adopting cuttingedge tech nologies like smart internet thing iot device articial intelligence machine learning cloud computing service machinetomachinecommunications mesh network mission statement smart city advancement six action eld smart government smart economy smart environment smart living smart mobility smart people cthe author license springer nature fernandes ed qaasassc various city across world already way development implementation smart technology city like barcelona dubai londonsingapore tokyo hong kong already striding ahead journey towards evolution smart city smart city service since intelligence city implemented deployment device sensor infrastructure connect object people service various area therefore sheer size complexity data enormous large part comesfrom iot device smart city iot data vulnerable cyber attack like do ddos password backdoor ransomware thus need secure solid data collection processing data anonymization system place cater tothe security privacy need smart city handle growing smart city data analysis classication various intelli gent operation center ioc proposed ibm ioc one popular iocs automatically alerting conicts city agency using reporting monitoring optimize planned unplanned operationsand adapting system based acquired information apart optimiz ing planned unplanned citywide operation conict resolution adapta tion existing system iocs also enforce much required security privacycontrols data protection security operation center soc specialized ioc responsible protecting organization cyber attack asset organizationare monitored around clock security expert soc analyst using various tool generate detailed report action plan siem security information event management system essential tool soc analyst detectprotect remediate prevent attack using mlbased fuzzy logic based algorithm advent quantum computing opened avenue newer paradigm computational science along application dierent aspect claim oer exponentially faster processing speed capability solving problem thought unsolvable although application mostly research community envisioned quite soon may omnipresent therefore owning promise paper propose quantum service qaas based architecture detecting security incident easily coupled system like soc andor siem proposed architectureexploits power using quantum machine learning qml algo rithms available quantum cloud service qcs perform decisionmaking classication task rest paper organized follows sect discus relevant literature section describes proposed methodology moving experiment sect section present result related discussion finally sect present concluding remark future direction httpswwwtwiglobalcomtechnicalknowledgefaqswhatisasmartcity barletta related work smart city security privacy concern call implementation upto date data protection area smart city quite mature consists lot quality research smart city cybersecurity prominent solution propose novel mlbased information classication system intelligent oper ations center iocs security information event management siem system author propose splunk siem smart city col lects forward event log generated smart device soc holistic approach suggested author best prac tices physical digital deemed extremely important case studyon ibms ioc proposes thorough analysis operational system cen tralize dierent city department agency required decisionmaking author used dierent machine learning algorithm like logistic regres sion support vector machine svm decision tree random est articial neural network ann knearest neighbor knn toclassify smart city data also couple study smart city network iot trac data author implemented support vector machine svm random forest knearest neighbor knn decision treedt twolevel novel deep learning based multiclass classication algo rithms cybersecurity risk management smart city infrastructure based object typing data mining quantitative risk assessment infrastructure usingann proposed author resulting system automatically unambiguously reasonably ass cyber risk various object past couple decade quantum computing specically quantum machine learning qml important topic research implementing solution optimization classication clustering algorithm quantum computer ibm came rstever quantum computer qubits may currently recent experimental quantum computer working superconducting transmon qubits superconducting transmon qubits used build ibm quantum computer natural qubits made superconducting materi al like niobium aluminium patterning silicon substrate andare formed isolating two energy level many form approximate qubit stored dilution refrigerator millikelvin dilu tion refrigerator ibm headquarters new york usa ibm quantumcomputing available cloud capability accessi ble tokenbased api ibms qiskit machine learning provides interface quantum machine learning includes quantum kernel andquantum neural network classication regression fidelityquan tumkernel class computes kernel matrix datasets used quantum support vector classiersregressors also support existing classical kernelbased algorithm qiskit machine learning denes generic neu httpswwwsplunkcom httpswwwibmcom httpsquantumcomputingibmcomservicesresources qaasassc ral network interface implemented estimatorqnn samplerqnn mer combine parametrized quantum circuit observables lattertranslates bitstring quasiprobabilities desired output training supported learning algorithm like neuralnetworkclassierregressor variational quantum classierregressor providing convenient imple mentation using feature map ansatz construction vqc variational quantum classier quantum machine learning algo rithm us parameterized quantum circuit classical optimization totrain circuit parameter circuit encodes input data opti mized parameter determine classication decision making vqc capable solving binary classication task quantum annealing optimization process nding global mini mum given objective function given set candidate solution return lowenergy solution dwave specializes quantum annealing provides quantum computer based approach dwave quantum computer consisting quantum annealing processor utilize qubits existingin superposition state quantum annealing process qubits collapse typical quantum superposition state clas sical state probability controlled bias entanglement withcouplers bias set external magnetic eld favoring specic state coupler link qubits inuence behavior entanglement introduces correlation allows qubits collectively represent multiple state programming bias coupling energy landscape problem dened allows dwave quantum computer minimum energy state qboost quantum annealingbased qml algorithm constructed thresholded linear superposition set weak clas siers minimizing dierence observed labeled prediction us boosting technique iteratively train combine prediction ofthese classiers ultimately making nal classication decision based collective output binary classication problem formulated binary quadratic model solved dwave processor known quadratic unconstrained binary optimization qubo said quantum initiative regarding smart city application example quantum city project established univer sity calgary canada strategic partnership government alberta canada mphasis united kingdom national quantum tech nologies program quantum city program tenyear billion pub lic private investment target seamless transition quantum tech nologies laboratory practice fraunhofer fokus hand working quantum computing service cater smart city application area httpsclouddwavesyscomleap httpsresearchucalgarycaquantumcity httpswwwmphasiscomhomehtml httpswwwquantumcityorguk httpswwwfokusfraunhoferdeensqcquantum computing barletta architecture main objective research divided two basic research question architecture suit qaas smart city security result exemplary test proposed architecture answer research question paper propose quan tum service qaas architecture secure smart city using quantummachine learning qml algorithm detection threat security incident existing centralized iocs mentioned sect pro vide holistic approach problemsolving smart city conict scenario thisresearch proposes extension security incident detection existing system servicebased architecture potentially improve existing iocs socs architecture power qml exploited order toaccelerate prediction security incident intrusion therefore avoiding potential damage reducing impact connected system result would important enhancement improving security privacyconcerns citizen proposed architecture hybridquantum com puting system spanning across classical quantum computing component quantum computational component qml algorithm case accessed service external classical component proposed system threelayertier architecture divided major part smart city data source graphical user interface dashboard principal application database quantum cloud service data source entirely belong threetier architecturebut constitutes important part proposed system although layer tier used interchangeably realworld system devel oped threetier architecture presentation application datatiers developed separate infrastructure added security modu larity following subsection discus component system functionality proposed architecture smart city data source data source smart part smart city information exchanged among various interacting com ponents smart city provide better life experience inhabitant city data source scattered across city numerous location although physically external system constitute sys tem data dierent sector smart city transmitted csv commaseparated value text format le application tier fromtime time system receives labeled data dierent cooperation organization used train classication model predicting incoming realtime data graphical user interfacedashboard proposed system display alert graphical user interface gui dashboard caseqaasassc qaas architecture smart city security showing realtime attack security incident diverse sector city based data received incident related sector smart cityare shown separate tab dashboard tabular format dashboard updated realtime soon incident registered show pertinent information attack threat incident encountered data shownin userreadable format security expert take necessary action counter contain threat threat attack identied unique identier date time incident dashboard data loaded fromrestful api representational state transfer application programming inter face fetch data database table data restful api treated data source gui web application historic incident reviewed security specialist dashboard table reference figure show sample dashboard developed part pro posed architecture showing realtime threat system receives smartcity data attack incident shown row unique incident id relevant detail like date time attack severity available category type attack dashboard also contains dierent tab display ing attack information dierent sector smart city like mobility governance economy environment people dashboard developedusing angular cli version nodejs version principal application main application receives incident form data le diverse sector smart city example government mobility living environment people application implement intrusion detection system pipeline methodology classify data attack security incident shown according id methodology pri marily data analyzed cleaned remove unwanted eld contribute result thereafter appropriate step applied extract thefeatures important feature selected processing barletta qaas secure smart city dashboard system train machine learning model validates prediction phase predictiontesting phase test data processed classied trained model prediction result compared existing data calculate accuracy precision recall fscoreto determine eciency model proposed architecture training testing data car ried dwave leap quantum cloud dlqc server ibm quantum computing service cloud ibmc application connects dlqc instance using tokenbased secure native api dwave system principal application invokes dwave python library prepares data specic format required qmls case qboost quantum binary classication algorithm main application exploit theibmc similar manner connects ibmc instance using secure tokenbased api qiskit quantum library qml invoked training prediction phase training validation phase theqml model saved local system prediction system load prediction model quantum cloud prediction phase main application predict single set incident received thedata source incident type prediction done quantum cloud serv ing request principal application order exploit qml algorithm classify normal malicious incident main application receives classication information quantum cloud tokenbased api attack threat security incident updated database proposed system train qml model data various stateoftheart datasets published time time organization institution system save best model based multiple run realtime prediction phase system us best model httpsclouddwavesyscomleap httpsquantumcomputingibmcom httpsqiskitorg qaasassc id pipeline carry prediction restful api connects database instance securely fetch specic data database table api creates dierent endpoint data dierent database table data thesetables converted jsons read gui python used design develop application flask used create restful api primarily fetching data database functionality api extended perform function like post put patch delete perform update delete operation database based requirement database database comprises data tier system information data source stored data thesectors dierent feature information stored dierent table restful api selects data smart city sector incident table whereas main application insert data table wheneverany incident occurs respective type database implemented postgresql quantum cloud service dwave leap quantum cloud dlqc service native secure api using encrypted token allows wave leap quantum cloud dlqc carry training prediction data although dlqc external service logically belongs applica tion tier architecture business decision made receives preprocessed data principal application us qubo quantum unconstrained binary optimization algorithm training prediction dlqc service return training prediction result back main application processing proposed system qboost deployed qpu hybrid solver advantage system system europe region leap quantum cloud service provides quantum hybrid solver located dierent geographical location best solver selected based region avail ability solver based quantum annealing consists working qubitsfunctioning millikelvin ibm quantum computing service httpsclouddwavesyscomleap barletta cloud ibmc also used alternative dlqc training prediction smart city data proposed architecture ibmc receivesthe preprocessed data main application primarily us variational quantum classier vqc training prediction ibmc also make available dierent quantum computer cloud servicebased usage experiment validate functionality proposed architecture stateoftheart publicly available telemetry iot weather dataset used subset toniot dataset cyber range iot lab school engineering information technology seit unsw canberra adfadeveloped datasets using realistic largescale network attribute dataset table contain date time recorded data respective temperature atmospheric pressure humidity data labeled normal attackthreat incident categorized among various attack category normal do ddos password backdoor attack table iot weather data attribute idfeature type description date date date logging iot telemetry data time time time logging iot telemetry data temperature number temperature measurement weather sensor linked network pressure number pressure reading weather sensor linked network humidity number humidity reading weather sensor linked network label number tag normal attack record indicates normal indicates attack type number tag attack category normal do ddos backdoor attack experiment carried ubuntu smp server bit architecture amd ryzen threadripper pro cpu clock ing speed mhz core ram qboostbased qml algorithm carried dwaveleap solver whereas ibm qiskit based qml algorithm run ubuntu smp core cpu speed ghz ram quantum part run qiskit backend feature dataset date time removed iot telemetry weather dataset since contribute result tem poral analysis carried case attack typology feature httpsresearchunsweduauprojectstoniotdatasets httpswwwdwavesyscom qaasassc type also removed owing binary classication nan null value dataset temperature pressure humidityvalues dierent measurement unit scaled using minmaxs caler range ton iot dataset contains record normal record label attack record label dataset attack record making unbalanced undesirable might lead biased prediction handle data imbalance downsampled using randomundersampler library based number record minority class train test data number normal attack data moreover value label normal converted qboost requirement classify strictly ando processed scaled data split ratio training testing respectively consequently fed dierent quantum machine learning classication algorithm finally model accuracy precision recall score calculated compare eciencies thealgorithms proposed architecture qboost used validate proposed architec ture although proposal discus usage quantum service inthe context smart city security sake completeness fair ness comparison random forest stateoftheart traditional machine learning algorithm also carried multiple round testing hyperparameters considered qboost num weak classifier tree depth lmdlambda params num read auto scale num spin reversal transforms vqc hyperparameters considered losscross entropy optimizer coby maxiter feature map generated zzfeaturemap using rep ansatz realamplitudes using rep hyperparameters nestimators max depth result section present answer second research question proposed previously sect model accuracy precision recall fscore used evaluate machine learning model ton iot dataset addition ally training testing time performance measured classier compared purview proposed architecture figure show quality result experiment dataset random forest qboost vqc random forest qboost achieved com parable good classication quality whereas performance vqc lower low performance vqc attributed number ofqubits noise current quantum device also take consid eration ibm quantum computerbased qmls run simulator rather httpsimbalancedlearnorgstable barletta quality metric based comparison classiers table time performance based comparison classiers full dataset algorithm training time prediction time qboost random forest vqc actual qubits although running complex algorithm real qubits would result lowquality result owing probabilistic noisy nature qubits table present training prediction time algorithm mentioned vqc took almost training min prediction whereas qboost took training prediction respectively hand random forest took average training prediction respectively case qboost emerged best classier domain among quantumbased classiers respect quality time main advantage using quantum computing service exploit extremely fast running time quantum algorithm although quantum algorithm adefault choice training prediction classication problem many case perform extremely well respect time quality gen eral applicability qboost investigated dierent datasetsand feature since quantum algorithm generalizability specically studied dierent case wider application conclusion smart city generates data smart sector like government economy envi ronment living mobility people data generally captured using iot senqaasassc sors embedded dierent device sensor continuously send data captured smart city operation center paper presenta quantum service qaas architecture smart city security ana lyzes classies smart city data also show proposed architecture successfully us dwave leap quantum cloud ibm cloud rto provide classication smart city incident also compare qboost quan tum classier variational quantum classier present performance used proposed architecture based result argue thatqaas architecture qboost dwave leap evolve viable solution investigated smart city brings data constraint multitude sector interconnectivity nevertheless would extremely interesting investigate dierent stateoftheart datasets like iot governance healthcare energy would also interesting verify performance quan tum algorithm regard like quantum support vector machine quantum convolutional neural network quantum boltzmann restricted machineswe continuing work currently proposed qaas architecture inte grate soc empower security soc specialist make correct decision take accurate remedial measure also looking incorporate security layer data transmission iot device proposed architecture acknowledgement study partially supported following project ssa secure safe apulia regional security center codice progetto esure keiretsu codice progetto vufil funded regolamentoregionale della puglia per gli aiuti esenzione del burp suppl del titolo capo del regolamento gen erale avviso per presentazione dei progetti promossi grandi imprese sensidellarticolo del regolamento serics mur national recovery resilience plan funded european union nextgenerationeu pon ricerca innovazione fse reacteu azione dottorati contratti ricerca tematiche dellinnovazione cuphj reference alsaedi moustafa tari mahmood anwar ton iot teleme try dataset new generation dataset iot iiot datadriven intru sion detection system ieee access access alzoman alenazi mjf comparative study trac classication tech niques smart city network sensor ashraf iotbotids novel statistical learningenabled botnet detection framework protecting network smart city sustain urban area httpsdoiorgjscs babar tariq jan secure resilient demand side management engine using machine learning iotenabled smart grid sustain urban area httpsdoiorgjscs barletta barletta buono caivano dimauro pontrelli overview security technological level italian smart city proceeding issn httpceurwsorg barletta buono caivano dimauro pontrelli deriving smart city security analysis technological level case study ieee international conference omnilayer intelligent system coin httpsdoiorgcoins barletta caivano vincentiis magr piccinno quantum optimization iot security detection juli carneiro alonso chamoso novais ed isami springer cham bhowmick francellino glehn loredo nesbitt ibm intelligent operation center smarter city administration guide ibm corpo ration international technical support organization booij chiscop meeuwissen moustafa den hartog ton iot role heterogeneity need standardization feature attack type iot network intrusion data set ieee internet thing httpsdoiorgjiot breiman random forest mach learn catalano afrune angelelli maglio striani tommasi secu rity testing reuse enhancing active cyber defence public administration itasec chen wawrzynski cyber security smart city review deep learningbased application case study sustain urban area httpsdoiorgjscs cong choi lukin quantum convolutional neural network nat phys httpsdoiorgs grover fast quantum mechanical algorithm database search stoc proceeding twentyeighth annual acm symposium theory ofcomputing hameed violos leivadeas deep learning approach iot trac multiclassication smartcity scenario ieee access havl cek supervised learning quantumenhanced feature space nature httpsdoiorgs hwoij khamaiseh ababneh siem architecture internet thing smart city international conference data science elearning information system acm kadowaki nishimori quantum annealing transverse ising model phys rev httpsdoiorgphysreve kalinin krundyshev zegzhda cybersecurity risk assessment smart city infrastructure machine kurniawan wibawa susiki hariadi makassar smart city oper ation center priority optimization using fuzzy multicriteria decision making international conference electrical engineering computer science infor matics eecsi maheshwari sierrasosa garciazapirain variational quantum classi binary classication real synthetic dataset ieee access httpsdoiorgaccessqaasassc moustafa new generation internet thing datasets cybersecurity application based machine learning ton iot datasets eresearch australasia conference brisbane australia moustafa systemic iotfogcloud architecture bigdata analytics cyber security system review fog computing moustafa new distributed architecture evaluating aibased security sys tems edge network ton iot datasets sustain urban area httpsdoiorgjscs moustafa ahmed ahmed data analyticsenabled intrusion detection evaluation ton iot linux datasets moustafa keshk debie janicke federated ton iot window datasets evaluating aibased security application neven denchev rose macready qboost large scale classier training adiabatic quantum optimization mach learn re neven denchev rose macready training binary classier quantum adiabatic algorithm neven denchev rose macready training large scale clas sier quantum adiabatic algorithm paiho tuominen okman yliker ala pajula siikavirta opportunity collected city data smart city iet smart city httpsdoiorgsmc pedregosa scikitlearn machine learning python mach learn re rashid kamruzzaman hassan imam gordon cyberat tack detection iotbased smart city application using machine learning technique int environ re public health ijerph rebentrost mohseni lloyd quantum support vector machine big data classication phys rev lett physrevlett serrano minimizing incident response time realworld scenario using quantum computing softw qual shor polynomialtime algorithm prime factorization discrete loga rithms quantum computer siam comput toh security smart city iet smart city http doiorgietsmc zhuhadar thrasher marklin pablos next wave innovationreview smart city intelligent operation system comput hum behav httpsdoiorgjchba retrospective analysis grey literature aisupported est automation filippo riccab alessandro marchetto andrea stocco universit degli studi genova genoa italy filipporiccaunigeit university trento trento italy alessandromarchettounitnit technical university munich munich germany andreastoccotumde fortiss gmbh munich germany stoccofortissorg abstract paper provides result retrospective analysis conducted survey grey literature perception practitioner integra tion articial intelligence algorithm test automation practice study involved examination source including blog user man uals post primary goal ass generalizability existing taxonomy usage investigate understand relationship problem aibased solution systematically map existing aibased tool offer aienhanced solution analysis yielded several interesting result firstly assessed high degree generalization existing taxonomy secondly identied problem addressed using aienhanced solution integrated existing tool thirdly found problem require broader solution involve multiple software testing phase simultaneously test generation maintenance fourthly discovered certain solution investigated supported existing aibased tool finally observed tool support different phase may broader reach keywords test automation articial intelligence grey literature introduction adoption articial intelligence machine learning technique test automation attracting attention researcher practitioner recognizing potential gap human machine assisted testing activity paper refer technique articial intelligence supported test automation aista aista increasingly adopted company still knowledge problem face solution proposes well existing tool connection softwaredevelopment process several work tried review existing work concerning aista work umbrella secondary study focus grey cthe author license springer nature fernandes ed httpsdoiorga retrospective analysis grey literature aisupported test automation literature capture perception practitioner adoption aista aim extended grey literature conducted ricca con sidering recent source secondly conducted retrospective analysis whole set collected data aiming capturing underlying relationship among problem aibased proposed solution existing tool analysis revealed existing taxonomy provide good degree general ization also considering recent grey literature source also found problem require solution involve several testing phase test creation execution maintenance tool actually supporting complex scenario believe work could help practitioner better comprehend state art practice aista instance selecting appropriate toolsfor testing purpose problem moreover work could help researcher capturing issue require investigation new research direction existing grey literature analysis aiassisted est automation previous work ricca referred previous work hereafter presented study grey literature concerning aimlbased testing framework tool fortest automation author analyzed several hundred web document retrieved existing problem different aspect actual automated test ing process solution based used mitigate problemsand list popular framework tool available market main contribution previous work construction two tax onomies problem solution aista moreover author identied six mostcited aiml testing tool according practitioner improve quality process productivity tester developer term problem addressed taxonomy report six main category related test planning test design test authoring test execu tion test closure test maintenance among aisupported solution problem taxonomy report four main category related test genus tion test oracle debugging test maintenance previous work also identied popular aista tool functionize applitoolsmabl testimtestaiand appvanceaialthough important step standing evolving domain previous work fall short providing critical detail concerning examination connection problem investigatedsolutions systematic mapping aista tool solution work assessed generalizability proposed taxonomy using set recent study used development validated httpswwwfunctionizecom httpsapplitoolscom httpswwwmablcom httpswwwtestimio httpswwwtestai httpswwwappvanceai ricca extended set data analyzed previous work aiming considering source make step ahead collecting presenting important relationshipsbased analysis grey literature information useful practitioner researcher practitioner determine solution employ based specic requirement challenge well identify tool thatcan assist implementing identied solution time researcher focus area yet used require investigation retrospective analysis objective investigation gain insight practitioner perceive taproblems addressed aienhanced tool well effectiveness focus retrospective analysis grey literature analysis conducted previous work also extended goal mind aim unravel connection existing issue aidriven solution well interplay current tool aibased solution aim address following researchquestions generalizability generalizability previous taxonomy rqproblems solution problem solution linked aista rqt ools solution aista tool solution relate rqassesses degree generalizability existing taxonomy validating set study used development rqinvestigates solution provided aipowered test automation designed address specic problem rqanalyzes solution obtained aista tool procedure data extension concerning generalizability existing taxonomy adopted experimental procedure outlined previous work com posed four distinct phase googlearxiv search document selection data extraction taxonomy creation short author searched list possible web document googlebased search collect many document possibleregarding conducted aiml solution detail available replication package second web document related aimlenhanced ltered adopting specic inclusionexclusion criterion third author read ana lyzed candidate document lling form information gathered source finally following systematic process created two tax onomies one problem one solution well list adopted aista tool considering search string original paper updated year broadened investigation grey literature include also current work released february followed procedure extract information source update existing taxonomy tabulardata extraction form used keep track extracted information list information source author proceeded analysis indepen dently separate set document reusing existing label previously created shouldan existing label apply document analysisa retrospective analysis grey literature aisupported test automation data collection pool data contains newly collected data existing data made available replication package previous work extracted information includes link document author document nature document blog post interview transcript white paper data document tool testing level egacceptance unit problem addressed solution offered data preprocessing usedpandas dataframes lter information related problem addressed solution offered tool dis carded entry either problem solution tool unspecied generic interesting entry counted pairwisecombination problem solution andtool solution particularly every source mentioning problem instance solution instance counted one connection original pool pair retained pair analysis data visualization used plotly library create different sankey dia gram decided sankey diagram since used visualize data input set output set element input output set called node node connected mean link linkconnects input node output node thus showing given relationship exists input output width linkindicates absolute value matching instance using sankey diagram retrospective analysis aim identifying connection problem aienhanced solution existing aista tool solution goal surface trendsand pattern considered pair pertaining software develop ment phase separately maintenance worthy notice sankey diagram built considering collected source one shown paper focus evident connection space readability reason result generalizability table problem present list problem faced aiml according occurrence table also includes updated entry occurrence derived extension two represented subcategories manual code development main tenance test script two wellknown cumbersome activity concerning devel opment maintenance test script detail test development requires bothdomain knowledge programming expertise domain knowledge required iden tify test data test oracle whereas programming expertise required using scriptbased testing framework programmatically develop test code withselenium webdriver test maintenance critical mobile web con text kind application subject rapid evolution thus requiring nontrivial effort evolve maintain existing test code relevantproblems related untested code inability automated test suite test entire application test aut manual data creation unavailability highquality input data testing visual analysis related assessment ricca original extended taxonomy green problem solution problem solution est planning est generation critical path identication aut test generation planning test aut generation using machine translation planning long release cycle aut generation user behaviour test process management aut test generation api call est design aut test generation mockups programming skill required aut test generation using crawling domain knowledge required declarative testing testcases predict faultyareas programmingskills required aut data generation est authoring robust element localization manual code development dynamic userbehaviour property recognition manual api test development automated exploratory testing manual data creation object recognition engine test object identication mock generation crossplatform testing selflearning costly exploratory testing automated api generation locator highly dynamic element page object recognition test code modularity est execution accessibility testing cloud execution adequacyfocus faultyareas decoupling test framework host est execution smart test execution untested code anomaly detection flakiness oracle slow execution time visual testing useless test reexecution debugging scalability intelligent test analytics parallelization automated coverage report low user responsiveness noticeable code change identication slow execution time runtime monitoring platform independence flaky test identication est closure bad smell identication manual debugging overhead decoupling test framework host costly result inspection rootcauseanalysis visual analysis prediction failure dataquality maintenance est maintenance selfhealing mechanism manual test code migration selfhealing test script bug prediction smart locator fragile test script intelligent fault prediction regression fault intelligent selective test reexecution costly visual gui regression intelligent waiting sync maintenance overhead intelligent test prioritization aut identication environment congurations pattern recognition remove unnecessary test case reduce testing unspecied unspecied generic generic total total retrospective analysis grey literature aisupported test automation problem solution planning top design phase bottom visual correctness aut graphical user interface est script flakiness nondeterministic test script either pas fail executed autdue environmental factor network trafc manual debugging overhead concern search rootcause behind test script failure breakage table solution list solution provided aiml presented well updated entry occurrence derived extension highlighted gure represented category automated test generation includes different subcategories usage machine translation test case described using natural language testing framework interprets translates executable test script crawling automated aut model inference support test generation another relevant category maintenance test script often performed selfhealing mechanism able perform automatic x case breakage via smart locator resilient common breakage cause solution concern debugging intelligent test analytics able reveal ricca portion aut high probability bug oracle enabling visual testing approach able automatically check visual appearance behavior ofa aut graphical user interface extended version taxonomy includes new contribution source considered respect previous work arranged category based dimension described prior work procedure yielded additional instance original taxonomy new prob lem test process management test adequacy application faultproneapplication area data quality new type solution cloud based test execution smart test execution failure prediction new tool tricentis tosca google ossfuzz chatgpt space reason entirelist tool available replication package overall generalizability existing taxonomy problem aibased solution observe analysis par tially extended taxonomy presented ricca problem solution figure illustrates relation problem solution identied planning top design bottom phase problem shown left solution shown right planning phase gure depicts identication critical path sequence click link functionality test aut main prob lem design phase need programming skill required developing implementing test script shown instead main issue worth noting deciding aspect focus test automation involves variety solution fault prediction test analytics test generation test selection sankey diagram emphasize relationship various automated test creation activity rang ing crawlingbased behaviordriven development bdd solution particu lar interesting observe contribution crawling planning phase asa way identify critical path aut declarative testing design phase way separate design test case technical imple mentation may reective separation tester developer twodistinct role industry relationship problem solution authoring top execution bottom phase depicted primary challenge addressed theauthoring phase manual code development tackled various auto mated test creation activity including crawlingbased machinetranslationbased solution additionally generation automated test user behavior apicalls explored potential solution problem manual data creation inter estingly diagram show object identication testability problem related four possible major solution object recognition engine tool thatcan identity testing element aut gui exploratory testing based taxonomy pastdiscovered bug iii visual testing automated visual check aut gui mean computer vision approach intelligent fault prediction regarding test execution phase two primary issue arise namely test akiness identifying portion code untested former tackled throughvarious automated technique selfhealing test script smart locator os retrospective analysis grey literature aisupported test automation problem solution authoring top execution phase bottom using intelligent synchronization method able insert waiting command right place aky test script right waiting time latter involves mainlyapproaches like coverage analysis automated test generation minimal extent also fault prediction two primary concern related closure top maintenance bot tom phase concern visual oracle problem addressed using visual testing solution second concern involves debug ging overhead requires combination various automated debugging technique selfhealing method autonomously decide corrective action apply case broken test automated coverage toolsets test analytics method failure analysis change impact analysis identify tested technique also benet task inspecting test result sankey diagram high light fact case unique specic solution problemeg visual oracle problem case problem complex debugging overhead require multiple distinct solution finally concerning maintenance phase biggest problem overhead maintaining test script andthe associated cost also need different multifaceted solution greatest contribution given smart locator self healing test script cited solution specic problem another important problem fragility ricca problem solution closure top maintenance phase bottom test script test script fragile longer identify web element aut evolves proposed solution case usage smart locator robustweb element localization overall link problem aibased solution observe analysis captured existing link perceived practitioner inparticular observed problem require solution involves several testing phase task ools solution relation tool solution depicted gure highlight three commonly used toolsapplitools mabl functionizeeach associated distinct solution applitools specializes visual gui testing see thicker connection oracle visualtesting involves automating visual testing creating visual assertion creator applitools claim tool able replicate human visionsystem spot functional visual regression applitools also provides functionality debugging phase allowing developer identify code change affected visual appearance application helpful regression testing verify change production code caused unintended change gui gure illustrates three primary link applitools visual testingusage object recognition system test creation change impact analysisa retrospective analysis grey literature aisupported test automation tool solution mabl serf exible test automation platform designed continuous integra tion deployment purpose primary function facilitate creation execution maintenance test script mabl associated vast range solu tions include assistance test generation automated repair locator smart element locator strategy automated visual testing debugging althoughthe strength mabl test creation maintenance important aspect visual testing indeed mabl able identify visual change aut comparing screenshots current test script run visual baseline functionize also turn fairly complete test platform functionize per form test script creation using natural language processing nlp user behavior specication also offer advanced selfhealing maintenance strategy leverageintelligent element selection additionally functionize provides intelligent visual dif ferences recognition allowing developer quickly identify change user inter face may impact functionality aut contrast tool seem cater specic solution instance report portal focus providing intelligent test analytics testsigma used auto mated test generation machine translation tool overall link relationship aibased solution existing tool observe analysis identied tool exible seem support solution contrast specialized tool discussion section discus achieved result term observation evidence well open issue threat validity affecting study observation evidence analyzing result collected retrospective analysis derived following observation identify problem could faced aienhanced existing solu tions implemented aibased tool instance wellknown challenge gui testing creation effective oracle oracle based visual ricca testing using computer vision approach suggested grey litera ture one possible way face challenge furthermore tool thatsupport oracle visual testing identied applitools testbot mabl sealights testim testai ocan interest particular practitioner quickly selecting appropriate solution problem themost adequate tool support solution problem identify problem require solution involving several phase instance test planning phase dened two problem planning test identifying critical path application test among others observe latter problem mainly faced automatic test creation solution ranging crawling application test creation test script using user behavior former problem instead faced solution involving test script creation automatic test creationssolutions test creation focusing application area predicted buggy test selection based fault prediction test execution adoption intelligent test reexecution strategy nally test debugging approacheseg adoption test analytics ocan interest particular researcher better highlight problem addressed different perspec tives problem specic adhoc solution adequate forother problem complex solution need studied identied solution presented grey literature supported existing available tool however important keep mind absence tool necessarily indicate lack existing solution particular prob lem could simply mean specic tooling solution mentionedin literature due incompleteness analysis instance decoupling test framework host environment referenced grey literature one possible solution facilitating crossplatform testing however seems solution adequately supported existing aienhanced tool mainly provide approach allow identication different environmental congurations face crossplatform testing another solution seems adequately supported tool concern execution test case mock response tool support construction mock object usedin concerning test selection optimization solution aiming prioritiz ing test case removing unnecessary test case guibased testing seem adequately supported existing aienhanced tool ocan interest professional researcher aim developing innovative tool technology capable supporting identied solution identied tool support solution related different phase tool specic given phase instance tool applitools egg plantai functionize mabl testai able support different phase egtest creation maintenance execution conversely tool katalon retest sapienz testsigma seem specic thus mainly supporting given testing phase test creation ocan interest practitioner selecting appropriate tool business taking account prob lem face also aspect specicity exibility toolsa retrospective analysis grey literature aisupported test automation open issue analysis cover three year grey literature concerning usage articial intelligence test automation claim work capturesall relevant grey literature condent included document cover important tool february hand grey literature one reacts faster rapidly evolving technological advancement recentrelease large language model llm public tool par tially included analysis expect see wider adoption llm context test automation future research necessary fully understand thecomplex relationship articial intelligence test automation nonetheless analysis provides valuable starting point understanding current state practice threat alidity threat internal validity concern bias error selection document classication considered item problem solution aibased test automation tool particular classication task difcult context grey literature web document often infor mative nontechnical terminology vague sometimes ambiguous werelied existing taxonomy work existing procedure thus also inherit threat previous work search may missed relevant docu ments captured search query minimize classication error wefollowed systematic structured procedure multiple interaction doubt concerning creating new category classifying item discussed among author concerning external validity considered googlearxiv document specic time frame ndings may generalize document search engine repository concerning reproducibility result term ofdata plot reference available replication package related work est automation aiml software testing community increasing adoption aiml solution automate different phase testing deal problematic issue test suite maintenance test case prioritization test generation one rele vant area adoption aiml investigated instance zhang walia propose adoption computer vision approach automate gui test generation goal reducing required human effortqian adopt evolved ocrbased technique localizing gui element test generation test maintenance another wellknown testing phase traditionally requires huge human effort page object generation aiml technique benecial fact computer vision approach also widely used web test migration test repair neural embed ding web page used automated web page similarity automated modelinference codeless functional test automation investigated vos phuc nguyen test maintenance latter study combine sele nium technique reducing time spent tester changing modifying ricca test code among testing issue camara propose mlbased app roach using test code smell predictor aky test mahajan computer vision approach detection crossbrowser incompatibility feng adopt computer vision approach prioritizing test case mobile applica tions yadav check new code identify area code test coverage increased differently work aim investigating specic aiml technique rather aim going indepth grey literature aiml technique realizing retrospective analysis capturing stateoftheart term problem proposed solution existing tool secondary study literature several review survey context via aiml instance trudova report systematic literature review slr con ducted study role aiml result review conrms literature study investigate computer vision technique reducing manual intervention software testing improving effectivenessand reusability test suite lima report slr show fuzzing regression testing studied type testing adopt technique particular neural network leger report liter ature review adoption software testing especially focusing challenge identication show relevant one domain knowledge gap problem training data availability oracle problem computational cost size quality dataset test case design test result interpretation related work presented paper following two paper jha present preliminary slr test automation tool focusing test ing phase technique adopted test script generation test data genus tion test execution test maintenance root cause analysis also briey present existing aienhanced tool katalon studio applitools testim testcraft para soft soatest mabl accelq functionize believe work could help practitioner better comprehend stateof theart aiml test automation instance select appropriate tool testing purpose problem however work could help researcher capturing issue could require investigation new research direction conclusion future work paper focus analysis grey literature practitioner perceivethe adoption improve presented result retrospective analysis conducted starting data collected ricca extended additional source analysis investigation include several interesting result instance identi cation problem faced existing aienhanced solution implemented provided tool problem requires solution involving several phasesa retrospective analysis grey literature aisupported test automation test creation execution maintenance iii solution investigated sup ported existing available tool nally tool supporting multiple phase future research direction consist conducting multivocal literature review integrating ndings gathered grey literature white literature would also interesting conduct controlled experiment existingaienhanced tool quantify benet provide validate observed connection problem investigated solution reference bajammal stocco mazinanian mesbah survey computer vision improve software engineering task tse camara silva endo vergilio test smell prediction aky test sast association computing machinery choudhary zhao versee orso water web application test repair proceeding international workshop endtoend test script engineering etse acm feng jones chen fang multiobjective test report prioritization using image understanding proceeding ieeeacm international conference auto mated software engineering ase acm new york garca gallego gortzar munozorganero survey selenium ecosys tem electronics garousi felderer mntyl guideline including grey literature con ducting multivocal literature review software engineering ist gyimesi bugjs benchmark javascript bug proceeding ieee international conference software testing verication validation icst ieee gyimesi bugjs benchmark taxonomy javascript bug softw test veri cation reliab plotly inc collaborative data science httpsplotly jha popli articial intelligence software testingperspectives practice ccict kitchenham charter guideline performing systematic literature review soft ware engineering leger barragan mixedsignal test automation yet ieee international symposium circuit system iscas leotta clerissi ricca tonella approach tool automated endto end web testing advance computer leotta stocco ricca tonella automated migration dombased visual web test proceeding symposium applied computing sac acm leotta stocco ricca tonella pesto automated migration dombased web test towards visual approach softw test verication reliab lima cruz amr ribeiro articial intelligence applied software testing literature review iberian conference information system technology cisti luo hariri eloussi marinov empirical analysis aky test pro ceedings acm sigsoft international symposium foundation software engineering fse association computing machinery new york ricca mahajan halfond wgj detection localization html presentation failure using computer visionbased technique proceeding ieee international confer ence software testing verication validation icst mckinney data structure statistical computing python proceeding python science conference austin memon banerjee nagarajan test oracle effective gui testing ieee international conference automated software engineering proceeding mesbah van deursen lenselink crawling ajaxbased web application dynamic analysis user interface state change acm trans web phuc nguyen maag codeless web testing using selenium machine learning icsoft international conference software technology icsoft scitepress online france qian lin chen accelerating ocrbased widget localization test automation gui application association computing machinery replication package httpsgithubcomriccafquaticreplicationpackage material ricca marchetto stocco aibased test automation grey literature analysis proceeding ieee international conference software testing verication validation workshop icstw springer cham ricca stocco web test automation insight grey literature bure ed sofsem lncs springer cham http doiorg schmidt sankey diagram energy material management ind ecol stocco leotta ricca tonella pesto tool migrating dombased visual web test proceeding international working conference source code analysis manipulation scam ieee computer society stocco leotta ricca tonella creating web page object manually done automatically proceeding international workshop automation software test ast ieeeacm stocco leotta ricca tonella clusteringaided page object generation web testing bozzon cudremaroux pautasso ed icwe lncs springer cham stocco leotta ricca tonella apogen automatic page object generator web testing software qual stocco willi starace lll biagiola tonella neural embeddings web testing arxiv stocco yandrapally mesbah visual web test repair proceeding acm joint european software engineering conference symposium foundation software engineering esecfse acm triou abbas kothapalle declarative testing paradigm testing software application sixth international conference information technology new generation trudova dolezel buchalcevova articial intelligence software test automa tion systematic literature review proceeding enase insticcscitepress tej aho pastor rico rodriguezvaldes mulders testar scriptless testing graphical user interface softw test verication reliab retrospective analysis grey literature aisupported test automation walia application machine learning gui test automation xxviii inter national conference information communication automation technology icat yadav botchway senkerik kominkova robot testing machine learning perspective international conference electrical computer energy technology icecet zhang cheng tang chen sketchguided gui test generation mobile application proceeding ase process improvement using scientic method demonstration requirement engineering isabel lope margaridob porto portugal isabelmargaridofeuppt abstract several method successfully used process improvement equalpi framework evaluate quality ofimplementation process improvement main concern performance term eciency eectiveness outcome process relevant considering compliance additionally believe process improvement method must repeat able reliable unbiased given scientic method used create new knowledge applying method process improvementcan greatly contribute rigorous le prone bias result paper present denition scientic method applied process improvement based validated aquasiexperiment two group graduate student undergrad uates output process improvement later adopted organisation method tailorable quasiexperimentwe showed scientic method process improvement applied smaller lower maturity organisation keywords process improvement scientic method requirement engineering continuous improvement unbiased research organisation introduction organisation rely process forever stag nated time otherwise fast paced changing world may fail tofull purpose consequently change occur new knowledge integrates company worker technology research process must adapted isprocess must gathered order understand improvement opportunity lie documented object experiment obtained data objectively analysed positive change identi must documented communicated using change managementapproach order ensure change introduced smoothly stake holder engaged informed worker dierent role must involved lope margaridoindependent researcher cthe author license springer nature fernandes ed process improvement using scientic method change denition therefore people prone adhere process potential resistance point addressed creating environmentthat embrace continuous process improvement furthermore defended watt humphrey claimed process dened people using agree also share opinion expressed process used people change reason also recommend process adjustment deployment several continuous improvement method process improve ment framework documented literature shewhart cycle pdsa plan study act derived known pdca cycle plan check act demings wheel jurans quality improvement process six sigma ideal model initiating diagnosing establishing acting learning although method widely used success industry additional structure recommendation could greatly benet continuous process improvement area providing set tool used science ensurethe required information process gathered allow experimentation adopting new process procedure documented manner allows experiment repeated step found scienticmethod used generate new knowledge prove refute theory argue including method process improvement signicantly aid working important area organisation remainder paper organised follows sect review exist ing continuous process improvement method sect present quasi experiment conducted adoption result process improvement industry section propose detail process improvement method includes step scientic method discus research sect conclusion proposed future research work sect continuous process improvement section present better known continuous process improve ment method benet attributed scientic method already tackled shewhart author carried analysis evolution integrating scientic method science improvement shewhart turned step product improvement cycle specication production inspection cycle claiming may helpful think three step mass production process step scientic method therefore following term equivalent specication mak ing hypothesis production testing hypothesis inspection carrying experiment paper taking consideration scientic method process mapped also detail covered section professional experience shewharts improvement cycle extended thstep dem ing later coined shewhart cycle learning improvement lope margarido step redesign marketing research method got known pdsa acronym representing following step plan plan change test aimed improvement carry change test study analyse result gather lesson learnt understand went wrong act adopt change abandon alternatively run cycle shewhart cycle learning improvement plan study act jurans quality improvement process dened continuous process established organisation coupled governance model intended last organisation lifetime involves denition plan specic upper management role author considered relevance given new development inherently given greater emphasis structure thanthe necessity reducing chronic waste le attention quality detail organising forming quality council thus described well preparing improvement project would include criterion rolesneeded improvement project team summarise step awareness proof need determine potential return investment select process project implement diagnosis journey understand symptom formulate theory identify cause select one tested retrospective analysis check lesson learnt remedial journey choose remedy remove cause establish control hold gain institutionalise process improvement six sigma used motorola reduce defect published adopted many others includes method dene new process named dmadv dene measure analyse design verify approach improving eliminating defect dmaic meaning dene problem impact potential benetsprocess improvement using scientic method measure identify relevant measurable characteristic process ser vice product dene current baseline set improvement goal analyse identify process variable causing defectsineciencies improve establish acceptable value variable improve pro ce perform within limit variation control continue measuring new process ensure process variable expected behaviour achieve established improvement goal six sigma dmaic dene measure analyse improve control ideal model continuous process improvement framework published software engineering institute sei consisting phase respective activity initiating stimulus improvement phase includes activ ities characterise identied need start project set context build sponsorship charter infrastructure diagnosing understanding current state dening desired future state includes activity characterise current desired state set priority develop approach establishing denition plan achieve desired state test improve solution implement includes activity plan action create pilot test rene implement solution learning analyse done understand goal achieved learn experience prepare future improvement includes theactivities analyse validate propose future action dened step process improvement method considering part prior model scientic method quasiexperiment professional knowledge basis upon dene process improvement method research begun conducting improvement using scientic method posed two research question possible good classication list specic requirement defect list help requirement defect answer conducted quasiexperiment require ments review answered adoption result cmmi level organisation paper indicating quasiexperiment may experiment quasiexperiment designate lope margarido ideal model initiating diagnosing acting learning quasiexperiment requirement review quasiexperiment conducted process improvement review requirement process following scientic method research summarised table experiment compiled defect classiers found literature review conducted time removed several according criterion set endingup classiers type defectattribute tried give clear meaningful denition rening second group experiment following classiers missing incomplete incorrect information inconsistent ambiguousor unclear misplaced infeasible nonveriable redundant dupli cate typo formatting relevant extraneouswe summarise group quasiexperiments table conclude experiment comparable due dierent environment circumstance group furthermore control group ensure comparison using classiers would even bepossible identied defect sr focus gathering good taxonomyprocess improvement using scientic method table summary information validation process improvement using scientic method label description motivation requirement defect top cause software failure fac tor impacting software maintainability however defect classication specic requirement defectsto ensure quality defect classication created wedid experiment method literature review dene classication defect adequate foruse requirement reviewsconduct experiment graduate student undergraduatesanalyse data experiment rene classication ofdefect type result gathered classication type defect specic requirementsnow used least one organisationdened step considered process improvement table experiment condition group experiment information group group education graduate undergraduate experience perform review software requirementsspecication sr documentperform review ansrs document subject introduction presentation thescope instruction aboutthe experimentthe teacher gave themthe introduction class clarify doubtsabout nal project presented theexam performedafter exam preparation time min read classiers listno individual record average min read skipped thereading oneswho spent timedoing classication experiment duration min classicationno individual record min average doingthe classication adoption organisation even though could fully test process improvement progressively deploy control result requirement defect classication created introduced organisation part improvement initiative considered new requirement taxonomy lope margarido successfully characterised requirement defect type compared using orthogonal defect classication odc requirement defect werelabelled documentation therefore adopted requirement defect type taxonomy extended classication applicable two type related document respectively requirement content requirement typo formatting classication result used pareto chart evaluate requirement defect type con tributed requirement defect ambiguous unclear typoor formatting incorrect information missing incomplete percentage defect found requirement review type analysis result input causal analysis resolution car project used dene solution address problem origin type defect prevent future review metric recom mended monitored improve requirement review process number requirement defect found posterior phase development cycle however organisation interested measuring aspect requirement review introduced several improvement thatcannot isolated eect using taxonomy nonetheless indicated number defect found requirement consider ably higher introducing taxonomy showing improvementprocess improvement using scientic method organisation used defect classication scheme support two goal mentioned step identify requirement defect frequent higher impact analyse root cause requirement defect agree card defect taxonomy support specic analysis interest organisation going itnamely implementation defect causal analysis section result validated equalpis process improvement step following scientic method experiment student followedsteps even though could validate step progressively deploy control output improvement adopted organisation lend ing recognition value facto satisfying last step furthermoretogether result also validated two research question posed process improvement method process improvement involves step common regardless whatthe organisation intends change improvement step also particularity several methodology mentioned paper used deal intention toprovide new one explaining process improvement shall carried individual case within scope paper however experiment conducted followed scientic method see rigorous well suited render process improvement repeatable unbiased result approach also contributes increase accuracy control conducting process improvement stickto step followed process improvement experiment highlight important element consider carrying particularly complement improvement step scientic method representation scientic method adapted scientic method process improvement process improvement continuous activity organisation always future opportunity restart procedure next paragraph detail step followed applying scientic method process improve ment depicted lope margarido scientic method process improvement step identify need characterise current process step process improvement identication need organisation may want achieve business goal attainedusing current organisation setting organisation may facing problem need solved aecting success business experiment needwas reduce number defect requirement phase detected posterior phase software development cycle need exists necessary reason befullled current setting root cause problem identify process changed achieve goal target process area requirement management specically process review requirement process improvement using scientic method process improvement aimed detect defect eectively requirement review hence gathered defect classication taxonomyspecic requirement important able measure improvement otherwise one determine benecial nefarious necessary determine theperformance indicator need monitored create baseline indicator equalpi used monitor process improvement task facilitated even possible detect eect otherprocesses turn monitoring indicator baseline provides state current process including indicator value state stage improvement characterisedin term needand goalto achieve step identify dene improvement necessary determine change implement following established selection criterion method used metric chosen monitor impact change case solve problem whoseorigin unknown one must select adequate set metric monitor analyse order determine root cause problem help dene solution control baseline chosen metric set could pilot improvement organisation would want understand number defect detected posterior development phase caused requirement defect therefore metric monitor would defect per phase originated requirement phase organisation adopted classiers list monitor exactly metric focus nding highernumber defect requirement phase step determine selection criterion select improvement method accordingly step specic design improvement may onlybe applicable similar one experiment assembled classiers list reviewing liter ature defect classications used one specicmore adequate classify requirement defect another aspect considered whether recommendation correctlydene classication list used quality property good classication scheme reference step set improvement goal validate organisation ensure improvement eective also ecient must guarantee return investment roi improvement done organisation would nec essary analyse cost requirement review xing defect posterior phase development validation maintenance current cost goal cost achieved would also tobe documented simulator could used predict roi improvement cost training personnel rampup time updat ing tool would also need considered lope margarido organisation setting test process improvement nal number defect per phase originated requirement phase wouldhave reduced consider improvement successful goal experiment ensure classication list useful classify requirement defect people would understand list would uniform classication without confounding classiers validated classiers list measuring level concordance individual classifying defect formalising hypothesis reviewing requirement specications subject value classify type defect subject value classify type defect performed cochran test binomial considering subject chose used classier answered majority used classier chose fleiss kappa used measure level agreement subject classify defect improvement involves classication similar experiment designcan used case one way evaluating adherence process survey also like correctly perform individual interview step pilot process improvement pilot process improvement necessary select project representative population improvement include acontrol group current practice people using process need receive training criterion select pilot vary couple example project good eort cost margin toensure team time follow new practice without compromising project successful completion project short duration get result faster case improvement require given project size experiment subject instructed execute process assigned task included table denition defect type followed example useit step analyse pilot result analyse result pilot verify improvement actuallyoccurs impact indicator process indicator process may impacted well several one may monitored understand whether improvement needsrenement new experiment executed necessary repeat step process improvement using scientic method second experiment group realised result obtained classication list satisfactory wefollowed lesson learnt rene requirement type classication list step prepare nal version applicable nal process must documented training material prepared user learn new process case others step mayalso include updating existing tool add tool tip help people remember denitions update help denitions example new tool change existing one tested pilot project validate themand ensure ready used practice crucial ensure everyone common understanding renement needed step progressively deploy control progressive deployment indicated setup phase equalpi controlling indicator parallel progressively train team discussion analyse execution process improvement step using scientic method objectively mapped activity step identied mandatory per mandatory activity maximum score activity successfully performed executed incase partially conducting activity score given summarise evaluation table total score mandatory activity executed evaluating step executed conducting experiment thestudents sum total score performed mandatory activity consider addition data implementation pro ce improvement result organisation score increase havingperformed mandatory activity also see set step involved activity found analysed related work process improvement step fully validate step identify need characterise current process indicator current state process starting improvement ideally able measure eect improvement would number requirement defect detected requirement review detected posterior phase introducingthe improvement baseline would allow measure eect improvement increasing number defect detected requirement phase getting reduction defect next phase project lope margarido table evaluation improvement step executed improvement step respective activity act man exe score step identify need characterise current process identify need root causesprocess improve step identify dene improvement determine change implement selection criterion dene metric monitor set baseline par step determine selection criterion select improvement method accordinglyb dene selection criterion solution brainstorm solution select solution implement according criterion step set improvement goal validate set target goal par dene method analyse determine goal achieved step pilot process improvement conduct pilot improvement group subject representative populationyes par neededpossible control group subject theimprovement step analyse pilot result analyse pilot result determine goal achieved needed repeat step step prepare nal version publish nal version improvement step progressively deploy control dene training process conduct training gradually deploy subject control improvement variable ensure deviation fromthe goal total note going back added letter attributed activity scientic method collumn mandatory man activity step receive score partially par act indicatesthe maximum score activity given step exe mean executed step could adapted improvement although would rather validated step set improvement goal validate quantitative goal related reducing number defect subse quent phase development process rather getting good level ofagreement using classication scheme considering goal showing list defect type specic requirement defect appropriate nonspecic experiment done controlgroup would example odc classify defect indicated step pilot process improvement process improvement using scientic method regarding step progressively deploy control could directly validate would require following deployment organisation thatadopted measure eects using nonetheless one quanti tative goal would set conducted experiment organisation namely reduce number defect subsequent phase wasachieved since organisation higher number defect require ments review introducing improvement using odc classication additionally organisation also used defect classication analyse address common defect type improve requirement process prevent serving one purpose implementing able analyse correct cause defect conclusion process improvement step equalpi validated partially validated could dene metric monitor indicated instep identify dene improvement group subject used test improvement may representative population required activity step pilot process improvement depends already working practitioner even though may represent thebeginning career already working eld process improvement procedure focused organisation reason consider would easier follow step organisationnonetheless able complete almost step academic setting showing process used useful purpose jurans quality improvement dmaic put emphasis determining root cause defect eliminating reducing chronic waste improvement step equalpi alignment implementing improvementnot focused reducing defect also better way work line ideal dmadv pdsa end elimi nates process ineciencies ineectiveness well benet followingthe process improvement using scientic method describe paper getting accurate result prevalidation beneting scientic method rigour diminishing bias detail allowrepeatability extracautions successful change management deployment future research conduct experiment regarding sci entic method process improvement industry reference card defect analysis basic technique management learning adv comput httpsdoiorgs card learning mistake defect causal analysis ieee softw lope margarido chen huang empirical analysis impact software develop ment problem factor software maintainability syst softw httpsdoiorgjjss freimut denger ketterer industrial case study implementing validating defect classication process improvement quality manage ment proceeding ieee international software metric symposiump ieee computer society httpsdoiorgmetrics goul mcpa componentbased software engineering quantitative app roach doctoral universidade nova lisboa faculdade encias tecnologia gremba myers ideal model practical guide improvement sei bridge hahn hill hoerl zingraph impact six sigma improvement glimpse future statistic stat juran godfrey jurans quality handbook mcgrawhill new york kitchenham software metric measurement software process improve ment blackwell publisher inc hoboken korsaa people aspect modern process improvement management approach process evol process smr lope margarido faria vieira vidal classication defect type requirement specications literature review proposal assessment proceeding iberian conference information system tech nologies cisti chaves portugal ieee lope margarido equalpi framework evaluate quality imple mentation cmmi practice doctoral faculdade engenharia univer sidade porto malinova gross mendling study contingency process improvement method inf syst httpsdoiorgjis mcfeeley ideal user guide software process improvement tech nical report cmuseihb cmusei ada moen norman evolution pdca cycle proceeding anq congress asian network quality tokyo japan log based verication tool serious game autistic child arini nur rohmahand nelly condorifernandezb lappeenrantalahti university technology lut lappeenranta finland arininurrohmahstudentlutfi centro singular investigacin tecnoloxas intelixentes citius university santiago compostela santiago spain ncondorifernandezusces abstract serious game referred entertaining tool purpose education correct implementation serious game important ensure high level adoption competency game user even challenging target autistic child understanding actual need child autism spectrum disorder asd supporting learning activity serious game burden paper present architecture oflogs based verication tool named gvt identify potential scene serious game might causing negative emotion autistic child gvt architecture follows client sever model whichenables merge game log emotional data log data analysis visualization carried server side pro vide relevant information support developer enhance qualityof serious game autistic people keywords verication tool serious game inclusive game game log stress autistic child introduction lack stress management common trait child autism spectrum disorder asd trait contribute aggressive behaviour include easily getting bored temper tantrum meltdown aggression highly happen child learning activity espe cially school home maintaining emotional stability key approach eectively prevent aggressive behavior child autism one best attempt engage child asd fun learning activ ity utilizing serious game however stress level child mental disorder may inuenced therefore mitigate occurrence happens child asd play benecial tool verify analyze autistic child considering aspect cthe author license springer nature fernandes ed rohmah condorifernandez various guideline case study tool developed evaluate validate analyze game design element aiming enhance player satisfaction however development verication tool ass game feasibility maintain targeted player emotional stability creating purpose assist game developer identifying potential stresstriggers autistic player guide design stressless game paper proposes prototype game verication tool gvt enhance design autistic child gvt help game developer analyzeelements may cause high stress level integrating game player log emotion log current prototype us synthetic data emotion log nal version connect mobile emotion detector app bluetoothplayers wear wearable emotion detector generates data mobile app connecting gvt mobile device via bluetooth analyze data similar proposed prototype paper structured follows sect map related ndings based cost stakeholder involvement section describes proposed gvt archi tecture data analysis process section cover development process finally sect concludes paper addressing limitation providing rec ommendations related work several verication validation method proposed assist game developer developing inclusive game section present previous approach used ass verify game component analysis carried based two criterion enduser involvement cost figure show mapping previous work game mapped evaluation technique identifying validating game design element done according game targeted example research done razali elogs based verication tool serious game autistic child focus validation serious game element context climate change validation method require enduser involvement instead need expert climate change topic validate game design using game criterion checklist considered relative costly due number expert required according author validation processmight take two week another validation approach based questionnaire jsselsteijn pro posed game experience questionnaire geq consists core ques tionnaire social presence module iii postgame module moreover scoring guideline also proposed facilitate evaluate question naire result considering duration analysis using methodis according many participant small number participant duration short expert expensive equipment needed method considered low cost another commonused game validation method using questionnaire player experience need sat isfaction pen proposed ryan pen created elaboration theory selfdetermination theory sdt sdt discus factor related motivation either undermine facilitate since method need much resource number participant well asthe duration xed also considered low cost heuristic evaluation playability hep method proposed desurvire hep need several evaluator inspect game based player log method also requires involvement game player satisfaction questionnaire even though method stated cheap fast easy consider gathering evaluator one place may challenging thus mapped cost hep middlelow omar developed ahpheges analytic hierarchy process based holistic online evaluation system educational computer game tool ahpheges combine two evaluation technique playability heuristic educational game pheg playability assessment educational com puter game paeg ahpheges online tool educational com puter game expert evaluator addressing challenge faced hep gather evaluator one place online tool evaluator required tobe place evaluation process ahpheges focus forma tive evaluation cost using ahpheges tool considered middle range since requires maintenance tool database system tosave pheg module expert evaluator takahiro miura research proposed method called game game measurement environment method evaluating game content interface based test theory classical test theory item response theory method aim eectively evaluating inclu sive game considered relatively costly since requires high number ofparticipants time example according evaluation carried author using game took two month gain total participant rohmah condorifernandez game user research gur technique proposed lennart nacke technique used optimize user experience game virtual entertainment product physiological evaluation aimed standard tool gur considering target academic industrial applica tions stated currently physiological evaluation method used forgur require expensive equipment used primarily laboratory setting point cost apply gur highest compared mapped technique hand telemetry user analytics technique focus two aspect game analytics game telemetry game metric analytic technique raised anders drachen overall technique collect distance data valuable game development gameresearch transformed metric analyzed eight total step done data processing analytic part considered complicated cost operate technique considered high well accordance ndings closest research gur however physiological response evaluation gur requires following equipment electromyography emg electrodermal activity eda galvanic skin response gsr cardiovascular measure electroencephalography eegin considered obtrusive mental disorder child especially child asd meanwhile considering research focus analyzing game element maintain player stress level need diminish using equipment may trigger high stress level player carrying testing evaluation process technique entail simple wearable stress detector player hence technique reconnoitred unobtrusivefor autistic player previous technique primarily target general game involve endusers verication validation process however approach donot address limitation child mental disorder making process le inclusive hand simple tool benecial term cost time supporting industrial application also small startup individual game developer interested creating serious game autistic child validate game taken account gvt developed simple bene cial lowcost serious game verication tool autistic child next section discus proposed gvt architecture required player log gvt architecture current gvt architecture us clientserver model figure show gvt server share resource analyze data gathered network game veried gvt desktop hosted gvt desktop app composed gvt congurator module allows set local host address get game path iii choose emo tion detector device module iii require gvt user inputlogs based verication tool serious game autistic child gvt architecture choose game path device respectively initialize gvt gvt desktop app initialized directly start game inside chosen path veried data manager start monitor ing player log player emotion log stress level value col lected edvia bluetooth game playing since still development process gvt instead using real emotionlogs prototype generated synthetic data synthetic data range value based range generated device research done sunilopez value point range repre sent absent stress relaxed presence stress start point highest level correspond data going analysis process analyzed device gvt user operate thegvt app server gvt user required operate order display result data manager analysis process accordingly gvt required usable characteristic gvt user includ ing following quality property appropriateness recognizability learnability operability along availability maintainability data manager analysis process gvt entail game player log emotion log author proposed minimum requirement player log player log preferably json format minimum following variable time yyyy mmdd hhmmss scene scenename iii asset assetname event clickdragdrop task successfail player log time variable represent time every triggered event scene indicate chapter game composed asset task event meanwhile asset property construct game example rohmah condorifernandez button image etc task present game challenge fulll player event player nish task using external input example mousemanipulation addition gvt requires present valuable data analysis game developer data generated player log must examined formula asshown table player log emotion log gvt deliver new data time spent time accumulation total time scene average stress scene order provide game developer valuable data analysis gameverication tool gvt necessitates examination data generated player log using formula outlined table analyzing player log emotion log gvt yield new data time spent time accumulation totaltime scene average stress scene table formula value formula time spent time accumulation tete tete ten ten total time scene tscene tsetsetsen avg stress scene sestsessestsessens tsens tsestsestsens time spent duration current next event game calculated subtracting current event time next event time time accumulation represents total duration event current event calculated subtracting previous event time current event time adding result accumulated time total time scene overall duration spent specic scene calculated summing time spent activity within scene verage stress scene represents average stress level particular scene calculated multiplying stress level time spent activity within sceneand dividing total time scene utilizing game log conjunction formula developer dis tinguish specic scene induce high average stress level scene consist asset event task detail provide insight ele ments need improvement order make scene le stressful order totest gvt prototype used modied existing serious game called gemas initially gemas static game autistic child based kinect could generate player log gemas modied adesktop game generate player logslogs based verication tool serious game autistic child conclusion research aim propose novel solution using emotion log game log verify serious game autistic child aim analyzed previous approach based user involvement player expertsnonexpertsand estimated cost previous approach primarily focus player satisfaction involving game player process questionnaire game experience however approach tailored autistic childrenas target audience questionnaire design consider specic need child asd investigation revealed gur technique closely aligns approach however physiological measurementsmay obtrusive child mental disorder particularly asd response propose unobtrusive technique specically designed insight study assist game developer creating inclusive serious game child asd gvt aim evaluate game element maintain autistic player stress level end research expect fully integration gvt emotion detector built sunilopez planning carry pilot study test evaluate prototype endusers noware nonautistic child later would actual autistic people moreover plan also involve external serious game developer testing usability gvt tool focusing report analyzed gvt result limitation gvt designed straightforward game analysis tool relying game player log emotion detector however certain seriousgames autistic child lack player log limiting gvts ability analyze another challenge gvt currently desktop game since considered bigger medium help child asd tobe focus valuable serious mobile game also require analysis research needed see extent script implemented generate log gemas could reused game recommendation space improved research work space recommend development gvt fornot consider autistic player stress level particular also extended range emotion instance happy anxiety shock mad etc thus open possibility integrate gvt future wearable devicesfurthermore stated limitation section gvt requires game player log generated externally game addressing promising gvt generate game player log automatically internally thatgvt evaluate game without player log additionally able evaluate serious mobile game autistic child using gvt also recommend future research rohmah condorifernandez acknowledgement project supported spanish ministry science innovation grant pidobc funded mcinaei erasmus mundus joint master degree programsegd reference irsyadi rohmah game edukasi bagi anak autis bertema anggota keluarga berbasis kinect xbox serious game autistic child based kinect xbox study family member simetris jurnal teknik mesin elektrodan ilmu komputer berkovits eisenhower blacher emotion regulation young child autism spectrum disorder autism dev disord httpsdoiorgs desurvire caplan toth using heuristic evaluate playability game chi extended abstract human factor computingsystems drachen elnasr canossa game analytics basic game analytics maximizing value player data httpsdoi org ijsselsteijn kort poels game experience questionnaire tech nische universiteit eindhoven johnson gardner perry validation two game experience scale player experience need satisfaction pen game experience question naire geq int hum comput stud machalicek oreilly beretvas sigafoos lancioni review intervention reduce challenging behavior school setting student autism spectrum disorder re autism spectr disord httpsdoiorgjrasd miura game game measurement environment scheme evaluate interface game content based test theory proc acm interact mobwearable ubiquitous technol nacke game user research physiological game evaluation game user experience evaluation omar ibrahim jaafar methodology evaluate interface educa tional computer game international conference pattern analysis intelligence robotics ieee overskeid power autistic trait front psychol fpsyg razali nem ramli mohamed mat zin rosdi mat diah identifying validating game design element serious game guideline cli mate change heliyon httpsdoiorgjheliyon ryan rigby przybylski motivational pull video game selfdetermination theory approach motiv emot suni lopez condorifernandez catala towards realtime automatic stress detection oce workplace lossioventura muante alatristasalas ed simbig springercham httpsdoiorglogs based verication tool serious game autistic child tsikinas xinogalos studying eects computer serious game people intellectual disability autism spectrum disorder systematic literature review comput assist learn jcal white oswald ollendick scahill anxiety child adoles cent autism spectrum disorder clin psychol rev httpsdoiorgjcprbeyond dashboard operationalising measurement framework agile team gijsbert boonb christoph stettina joost visser yassin elbaz leiden institute advanced computer science leiden university niels bohrweg leiden netherlands gcboonliacsleidenunivnl abstract context abundant literature available metric support agile team improving way working performance however little knowledge available operationalise metric successfully objective objective understand challenge benet selecting measure introducing via dashboard supporting agile team improvement ambition method report action research large international organ isation metric dashboard introduced agile team varying level agile maturity diverse purpose observed dashboard usage assessed actionability survey interview result key observation metric support agile team improving performance higher gain team lower agilematurity collecting sharing qualitative survey data interactively agile ritual highly eective measurement data quality key factor inuencing actionability conclusion metric dashboard support organisation agile team improvement ambition optimal result achieved selecting enough metric based actionability dashboard dierentiated based agile maturity customised need team important factor actionability interactive collection qualitative measure data quality data quality prof twofaced measurement improves adherence process data main tenance hand lack trust number impedesthe measurement keywords agile transformation metric dashboard performance measurement actionability introduction organisation implementing agile framework like scrum safe typically apply metric part continuous improvement cycle daily work tohelp team dashboard reect improve however many metric cthe author license springer nature fernandes ed operationalising measurement framework agile team discussed empirical study adoption process selection right measurement contextual factor generally le well described leverage value crucial understand bigger picture metric dashboard contributes improvement work agile team challenge selecting right measurement andadopting dashboard understand factor like actionability metric capacity metric proactively raise awareness take appropriate action andimprove learning team alignment stakeholder conducted action research project captured following research question rqwhat challenge benet operationalising measurement framework help agile team improve sect describe theoretical background operationalising perfor mance measurement context agile transformation identify relevant gap section present action research approach addressing share learning recommendation sect theoretical background section describe key element related measurement software development benet limitation performance measurement management context agile transformation ample research published measurement specic area software process maturity broaden scope holistic concept performance literature suggested three starting point understanding performance agile context strategic business objective stakeholder need agile principle provide overview perspective respective background perspective business objective balanced scorecard bsc model developed kaplan norton early one bestknown approach determining performance objective measuring business per formance aim model align business activity vision strategy business improve internal external communication andmonitor business performance strategic goal using four perspec tives nancial customer internal business process learning growth oers holistic approach motivating measuring business unit performance observe several potential weakness agile context bsc mention measuring business unitperformance explicitly construct process team people obviously heart agile considering agile manifesto noted many might want consider broader group stakeholder therefore achievean even holistic longterm approach khurum created boon software value map svm building kaplan nortons bsc perspective project bsc realm software development alahyari projected value map agile software development context concluding customer value prioritised perspective innovation learning nancial value received almost priority however korpivaara stated nancial performance objective also relevant scaled agile organisation may conclude shared opinion priority measurement perspective stakeholder need broader stakeholderdriven approach attempt optimise need objective allstakeholder group includ ing internal development team well external stakeholder customer supplier partner user stakeholder groupsmay equally relevant context oza korkala suggest stakeholderdriven approach balance dierent viewpoint therefore pro vides comprehensive foundation performance metric collection strategythe term stakeholder paper used alignment mendelows deni tionstakeholders organisation depend organisation realisation goal turn organisation dependson way full realisation goal opposed narrow denition stakeholder primary referring customer user often used practitioner context aforementioned bscframeworklist highlight importance ownership stakeholderdriven measurement stakeholder group invested performance metric com bined ability impact likely yield result several challenge relevant raised ram operationalisation metric data availability supported work process integration inthese process actionability perspective agile transformation principle instead applying general performance measurement approach agile context study suggest performance dimension agile organisation derived agile manifesto accompanying principle olszewska introduce model containing eight quantitative metric based four area responsiveness throughput workow distribution andquality inter national survey performed stettina compared survey result previous result laanti olszewska safe next including context agile maturity dierentiation organisationallayers additional measurement employee satisfaction engagement stakeholder framework case study largescale agile transforma tion nancial service organisation supported backlog data measurementsis described boon stettina study concept deriving performance benet broadened way organisation follow agile prin ciples corresponds agile maturity fontana state agile maturity mean fostering subjective capability collabo ration communication commitment care sharing selforganisation present framework ambidexterity play important role beingoperationalising measurement framework agile team adaptive explore practice work balanced process exploita tion associated implementation aspect execution seeking eciency improvement guided acting outcome instead following prescribed practice metric geared towards principle often based software develop ment activity respect focused internal delivery eciency insteadof externally generated outcome study shed light agile organisation combine prioritise internally oriented metric based agile principle measure external outcome kupiainen conducted systematic literature review identify motivation metric within context agile software development concluding lack empirical study industrial contextthis conclusion supported ram researching rationale operational challenge metric agile software development overview perspective identify following research gap literature describes need selecting prioritising balancing right metric measuring progress towards business goal improving performance however empirical study scarce sometimes contradictory scope stakeholder need might broadened beyond customer feedback used continuous improvement ability act upon result expected agile context stakeholderdriven measurementis well documented however question raised operationalise metric seem unanswered summary derive two main point interest using metric agile team one selects prioritises right measurement howto operationalise metric become eective agile team word team actually measurement improve reect aspect section learning discussion action research applied action research methodology create knowledge executing organisational change via collaboration researcher practitioner executed four stage see diagnosing cur rent state planning intervention action executing action reectingon result overview timeline stage activity action research boon applied principle canonical follows researcher client agreement research executed part formal thesis assignmentof fourth author hosted case organisation supervised author cyclical process model adopted process model diagnos ing action planning action taking evaluating specifying learning onefull cycle completed theory principle theoretical ambition understand selection operationalisation measurement agile team change action action researcher actively participated throughout entire project learning reection survey interview conducted gather feedback case organisation multinational global food corporation based usa oces netherlands several introductory conversation held key stakeholder emea lead project management oce pmo agile coach seven agile team selected participate average team size eight person ranging four thirteen member team selected based fact agile team open toparticipating scope diverse customerfacing backend diagnosing case organisation introduced scrum framework year ago team longer others see table initial question determine right set metric help improve team diverse broad set potential metric gathered however way forward selecting assessingactionability measurement potential benet challenge introducing measurement framework unclear management consultation stakeholder sponsor researcher proposed conduct projectto iteratively explore measurement visualisation useful actionable given organisational context using metric dashboard examine current situation exploratory interview held aforementioned stakeholder objective introduce design exper iment performance measurement framework mean dashboardintegrated agile way working seven participating team order understand context participating team agile maturity assessed questionnaire eleven question gain understanding ofthe way team worked reect inuence maturity need measurement used agile maturity model laanti describe initial selection measurement sect sur veys sect dashboard sect dimension category pragmatic starting point dimension proposed stettina used productivity responsiveness quality workow health customer satisfaction employee satisfaction briey describe four dimension measurement framework section followedoperationalising measurement framework agile team section elaborating last two survey measurement table present complete list dimension example measurement exampleof dashboard shown productivity metric incorporated management feared could perceived micromanaging therefore negatively inuence accep tance dashboard team quality scope category statistic data bug workow health velocity effort planned past sprint andwork health current sprint item estimate responsiveness average cycle time lead time satisfaction survey employee satisfaction survey evident inclusion measure ments conveying happiness team member employee key stakeholder term morale satisfaction might relevant multiple measure ment model focus employee satisfaction evaluated authorshowever minnesota employee satisfaction questionnaire msq selected since considered pragmatic wellknown consul tation stakeholder compacted ensure high response rate whilekeeping essential part msq category used question collabo ration autonomy accomplishment feeling ability dstresslevels agile team varied using mentimeter interactive online microsoft form via emailforms alternative survey tool within retrospective see table team descriptives survey medium chosen frequency response rate customer satisfaction survey regarding customer satisfaction abundant model questionnaire available well net promoter score npsand customer satisfaction score csat american customer satisfaction index acsi framework selected researcher next fact acsi amongst cited framework described antecedent generic enough customer satisfaction context team led six question based four antecedent customer loyalty per ceived quality perceived value expectation overall communication predictability limit motivation model satisfaction measure respecting scope paper powerbi dashboard setup design powerbi dashboard executed close coopera tion participating team team data connected azure devops backlog employee satisfaction survey result customer satisfaction survey result measurement selected within dimen sion framework availability avoid overwhelming team mem bers many metric visualisation sponsor challenged designto single page via multiple design iteration together team ambition aligns recommendation hartmann dymond using small set metric boon table descriptives participating team maturity former metric year active team survey medium interval ass employee satisfaction response team agile maturity laanti model metric alreadyused research year ago startedemployeesatisfac tion frequencyemployeesatisfaction mediumemployee satisfaction response novicefluent none monthly form low fluentadvanced sprint mentimeter high fluentadvanced sprint mentimeter high advanced none monthly form low beginner none monthly form low novicefluent sprint mentimeter high fluent monthly form low example powerbi dashboard category quality workow health responsiveness employee customer satisfaction accompanied custom information team category visualisation similar team dashboard action planning planned several way collect ndings exploratory interview weekly meeting interactive plenary meeting powerbi dashboard microsoft form mentimeter survey exit interview semistructured exploratory interview conducted scrum master product owner question determined consultation sponoperationalising measurement framework agile team sor researcher objective twofold first introduc tion researcher manage expectation regarding context scopeand approach second objective collect relevant back ground team composition deepen researcher knowledge agile mindset product purpose understand customerstakeholdercontext participating agile team custom dashboard see sect created selection measurement dimension described fol lowing section overview stage presented next section elaborate content activity executed stage action taking action taking phase using dashboard spanned eleven week executed action researcher time period action researcherwas available team observe support team customise dashboard weekly interview scrum master starting beginning action taking phase researcher updated log starting key question youopened used dashboard week however improve standing actionability three week researcher focused inquir ing concrete action taken team based dashboard measure question zoomed presented metric clarity dashboard presentation change request idea alternative metric employee satisfaction survey team using microsoft form tool sur veyed via email scrum master stimulated response meeting known communication channel team using interactive mentimeter survey researcher conducted survey team retrospective identical question result stayed hidden participant responded avoid inuencing team member customer satisfaction survey microsoft form tool used cu tomer satisfaction survey link periodically sent via email customerstakeholders result customer satisfaction survey added dashboard lower frequency survey conclusion response rate change indeterminate joint demo review session addition weekly individual interview plenary meeting planned week share ndings report theresearch progress group attendee consisted scrum master product owner agile coach stakeholder pmo leadership team session interactive mentimeter survey held gather feedback andsuggestions improvement participant liked far measure ment research missed likely would recommend dashboardmetrics approach colleague similar net promoter scorequery boon logbook actiontaking phase detailed logbook kept team registering note weekly team interview additional observationsof participating researcher team meeting standup retrospective meeting evaluating section present main observation feedback weekly interview plenary feedback session exit interview followed section benet challenge discussion result observation start describing main observation usefulness frequency key factor inuencing actionability potential improvement research team perceive metric dashboard approach useful part weekly update monitored closely whether team used dashboardand perceived usefulness part plenary exit meet ing validated positive feedback asking would recommend dashboardmetrics approach colleague rated point scale often team dashboard importantly team using metric dashboard ambition improve work often team reported weekly update exit interview using twice per sprint common desired frequency either part ritual whole team stakeholder present planning review retrospective used scrum master individually obtain insight team activity factor inuencing usability actionability report three important factor according ndings agile maturity participating agile team experienced benet using dashboard team lower agile maturity reported benet morefrom dashboard team higher level agile maturity support work team lower level agile maturity experienced benet using dashboard support data maintenance adherence agileprocesses anecdotal example health metric reminded team correctly assign eort estimation user story distribute unsolved bug among team member team higher agile maturity le driven metric guide agile work instead potential improvement trusting get job done reported relevantbut could supported metric timing right occasion metric relevant allthe time metric might useful beginning sprint health metric check hygiene backlog metric useful sprint cycle time understand item lagging impedimentsoperationalising measurement framework agile team arise metric useful end sprint velocity retrospect learn much work done sustainable pace othermetrics add value quarterlyyearly meeting nancial data release schedule customer satisfaction selecting right measurement dimension dimension resulted action category reported scrum master team share observation summarise table quality dimension one team reported category quality useful actionable another team stated intensively using metric longest open bug quality category workow health dimension one team used category workow health cur rent sprint manage administrative process improve data quality two team explicitly conrmed category proved actionable mature way working customer employee satisfaction survey overall scrum master empha sised usefulness actionability dimension quantifying customer satisfaction add value reported survey result could help intheir dialogue stakeholder shed light question value team delivering scrum master using interactive mentimeter tool retrospective ritual reported outcome quantied gut feeling teamsusing microsoft form employee satisfaction showed decreasing response rate opposed team using mentimeter see table contrast two scrum master stated team already aware employee customersatisfaction two category le interesting opinion low actionability observed reported scrum master team member data employee satisfaction visible dashboard presenting historical data regard dimension responsiveness unclear whether actionability low caused looking backnature many fea turesuser story completed cycle time percep tion scrum master responsiveness metric data quality onpar potential improvement metric dashboard adoption participant asked share thought potential improvement missing element regarding dashboard majority feedback concerned adding metric followed request minor change functionality emphasis support adoption management metric focus metric convey outcome deliv ered value functionality drill functionality adoption support change management attention adoption introduction continuing support dashboard afterwards sum mary key takeaway consider adding swapping current metric outcome value followup ambition pay close attention boon table measurement dimension measurement observation actionability dimension included measurement example actionability remark productivity included responsiveness lead time cycle time user story pbis completed period feature completed periodmixed ndings data quality play role trusting measurement quality longest open bug unsolved bug unassigned bug bug severity bug created past month feature caused bugspositive actionability action taken longest open bug workow health velocity effort planned past sprint effort completed committed current sprint estimate current sprint unassigned task current sprint task without remaining workpositive actionability improves data quality adherence process customersatisfaction customer loyalty likely would recommend development team peer point scale perceived quality satisfied quality product point likert perceived value satisfied value product provides point likert scalesmixed observation actionability employee satisfaction satisfied collaboration within team autonomy satisfied ability team take decision lead better result accomplishment proud accomplishment teamstresslevel satisfied amount work assigned ability satisfied opportunity apply skill point likert scalesmixed observation interactive measurement better actionability response rate introduction adoption continuous iterative improvement support dashboard reect two observed topic data quality theinteractive measurement learning discussion section continue summary benet challenge benet potential transparency measurement oer introduction dashboard made agile team process transparent especially beneciary team lower agile maturity dashboard agile metric motivated scrum master team reect result improve quality backlog discover way improve team agile way working introduction measurement dashboard overall perceived aspositive scrum master remarked information shared via dash board could queried found otherwise easily dashboard made aware potential impediment needed act potential interaction provided measuring dashboard supported scrum master dialogue team member regard workoperationalising measurement framework agile team sprint backlog visualising sharing metric sparked relevant conver sations scrum master able dashboard support decision orrequests team mentimeter tool used interactive part retrospective team reported productive dialogue con tributing purpose retrospective ndings showed result ofemployee customer satisfaction survey triggered relevant discussion since outcome quantied sentiment challenge one main challenge introducing dashboard containing agile metricswas data quality caused metric perceived useful actionable scrum master team cycle time metric example becomes useless item registered timely otherhand dashboard used team improve data quality workow health used eectively identify unassigned issue second challenge adoption implementation management scrum master team needed integrate metric dashboard existing working process routine third challenge balance creating default dashboard catering need agile team versus accommodating specic demand preference team might tool dierent way translates changing dashboard accommodate way working hand one want spend lot time customising dashboard template team impeding maintainability decreasing ease ofadding new measurement improvement via default dashboard balance need found evaluated optimise eectiveness eciency fourth challenge customer employee satisfaction rely qualitative input survey observed potential downside response rate subjective nature respect potential data quality issue learning discussion methodology used address research question introducing andsupporting metric dashboard mean objective getting better understanding operationalise metric framework way metric may support agile team improvement ambition learnedfrom observed challenge benet three aspect important benet interactive collection qualitative measurement like customer employee satisfaction emphasise importance adaptation customisation team need maturity role measurement data quality interactive collection sharing qualitative data measure related stakeholder special interest research since stakeholderdriven boon measurement customer employee satisfaction identied key perspective performance measurement customer satisfaction often referred highest priority performance objective agile mind set focus customer collaboration people interaction val ues manifesto however agile methodology explicitly prescribe specic metric customer employee satisfaction reported ambiguity ndings one hand satisfaction metric stimulated dialogue team stakeholder conrmed sentiment hand onlya number action reported based measurement therefore team suggested metric highest priority included dashboard take ambiguity themetrics become actionable interactive hand interactive aspect metric make le interesting display dashboard suggest using qualitative dimension like employeeteam member satisfaction conduct interactively integral part team ritual ensure engagement improve dialogue stakeholder therebyactionability adoption management customising recommend organising well guided introduction nudging team using dashboard embedding usingmetrics daytoday ritual fundamental furthermore continuous technical support support management reported crucial cu tomising framework maturity need team iteratively proved success factor usefullness dashboard weighed maintainability eciency aspect team set ofmetrics eectively guided actionability focus enough metric point departure basic set measurement dimension inspired stettina excluding productivity dimension herewith avoiding potential discussion micromanagement perception proved productive start set avoiding immersed lengthy dis cussions incrementally optimising selection right measurement wesuggest rightmeasurements context actionable measurement measurement data quality project data quality eciency collection data proved prerequisite metric two side story example dimension workow health helped team improve data quality especially team lower maturity beneted using dashboard improve quality following process data measurement like workow health enhances actionability measurement framework general hand team stopped usingmetrics lead orcycle time trust number therefore important understand dynamic part selection processoperationalising measurement framework agile team limitation threat validity research seven team ensure thorough dialogue team member however potentially dicult generalise ndings due focus since team dierent level agile maturity team worked diverse product argue threat validity partly mitigatedthe reliability observation impacted fact two seven participating agile team could leverage value dashboard much expected one team nearing end theirproject another team hold week two additional remark team selection firstly observe dierences result due team size secondly introduced potential bias selecting team werewilling participate would improve validity ass impact decision additionally specic threat participatory action research even though shared agreement topic mention known threat relevant study checkland holwell state action researcher must ensure reproducible research mitigated eort log ging observation carefully herr anderson state participatory nature important remain aware political factor asthe researcher may indirectly inuenced biased oce politics since seven participating product team responsible dierent product mutual inuence interaction researcher teamwere separate meeting furthermore role sponsor steering providing feedback occasion finally cough lan coghlan state principal threat validity methodology researcher potential lack neutrality threat mitigated factual neutral formulation logbook regular mutual feedback moment author operationally involved finally ambitionof research study measurement may support improving way working team measure improvement performance reason draw conclusion direct relation performance metric conclusion objective action research study investigate benet challenge operationalising performance measurement dashboard support agile team achieving improvement ambition measurement dimen sion framework proposed stettina used starting point designing dashboard team ritual seven team period nine month study show dierentiating dashboard based agile team matu rity support actionability additionally data quality aects actionability two way low data quality impedes measurement lack trust ing number transparency improves adherence process boon data maintenance therefore stimulates action taking another nding qualitative measure stakeholder dimension become actionablewhen used interactive shared format selecting prioritising enough metric learned actionability key criterion adding judgement power criterion like perceived usefulness conclude success dashboard depends guidance integration new existing work process continuous adaptation team need contribution study twofold provides empirical evidence encountered benet challenge operationalising measurement framework practitioner demonstrates agile team study achieved optimal result selecting enough metric focusingon actionability data quality team maturity reference alahyari svensson gorschek study value agile software development organization syst softw anderson fornell lehmann customer satisfaction market share protability ndings sweden mark van bennekum beck schwaber fowler sutherland agile manifesto httpsagilemanifestoorg boon stettina case datadriven agile transformation lon gitudinal backlog data help guide organizational improvement journey strayv stol paasivaara kruchten ed lnbip springer cham checkland holwell action research nature validity syst pract action re coughlan coghlan action research operation management int oper prod manag davis perceived usefulness perceived ease user acceptance information technology mi davison martinsons kock principle canonical action research inf syst dubinsky talby hazzan keren agile metric israeli air force agile development conference adc ieee computer society fontana fontana rosa garbuio reinehr malucelli process versus people agile software development maturity bedened syst softw fontana wojciechowski monta marczak reinehr malu celli countrywide descriptive survey agile software development brazilin stray stol paasivaara kruchten ed lnbi springer cham greenwood introduction action research sage publication thousand oak gren torkar feldt prospect quantitative measurement agility validation study agile maturity model syst softw operationalising measurement framework agile team hartmann dymond appropriate agile measurement using metric diagnostics deliver business value agile ieee herr anderson action research dissertation guide student faculty action research dissertation guide student faculty kaplan norton balanced scorecardmeasures drive perfor mance kersten project product survive thrive age digital disruption flow framework revolution press portland khurum gorschek wilson software value map exhaustive collection value aspect development software intensive product jsoftw evol process korpivaara tuunanen sepp anen performance measurement scaled agile organization proceeding annual hawaii international conferenceon system science hawaii international conference system science kueng process performance measurement system tool support process based organization total qual manag kupiainen antyla itkonen using metric agile lean soft ware development systematic literature review industrial study inf softw technol laanti implementing program model agile principle large software development organization proceeding international computer software application conference compsac ieee washington laanti salo abrahamsson agile method rapidly replacing traditional method nokia survey opinion agile transformation inf softw technol list bruckner kapaun holistic software process performance mea surement stakeholder perspective international workshop ondatabase expert system application dexa ieee mahnic vrana using stakeholderdriven process performance measurement monitoring performance scrumbased software development processelektrotehniski vestnikelectrotech rev mendelow information system organizational eectivenessthe stakeholder approach information system organizational eectivenesstheuse stakeholder approach neely adam crowe performance prism practice meas bus excell olszewska heidenberg weijola mikkonen porres quantita tively measuring largescale agile transformation syst softw oza korkala lesson learned implementing agile software development metric ukais ram rodr guez oivo software process measurement related chal lenges agile software development multiple case study international con ference product focused software process improvement russo agile success model acm trans softw eng methodol safe scaled agile framework httpswwwscaledagileframeworkcom boon stettina van el croonenberg visser impact agile trans formation organizational performance survey team program portfo lios gregory lassenius wang kruchten ed lnbipvol springer cham wei dawis england manual minnesota satisfaction questionnaire minnesota study vocational rehabilitation exploring data analysis visualization technique project tracking insight itc andr barrocas alberto rodrigues silvab joo saraiva instituto superior tcnico universidade lisboa lisbon portugal andrebarrocastecnicoulisboapt inescid instituto superior tcnico universidade lisboa lisbon portugal albertosilvatecnicoulisboapt denescope setba portugal joaosaraivadefinescopecom abstract data analysis emerged cornerstone facilitating informed decisionmaking across myriad eld particular software development project management integrative practice prof instrumental enhancingoperational efciency cutting expenditure mitigating potential risk deliver ing superior result sustaining structured organization robust control paper present itc synergistic platform architected streamline multiorganizational multiworkspace collaboration project management technical documentation itc serf powerful tool equipping user capability swiftly establish manage workspace documentation thereby fostering derivation invaluable insight pivotal technical businessoriented decision itc boast plethora feature supportfor diverse range technology language synchronization data customizable template reusable library task automation including data extraction validation document automation paper also delf thepredictive analytics aspect itc platform demonstrates itc harness predictive data model random forest regression anticipate project outcome risk enhancing decisionmaking project management feature play critical role strategic allocation resource optimizing project timeline promoting overall project success effort substantiate efcacy usability itc also incorporated result feedbackgarnered comprehensive user assessment conducted feedback suggests promising potential platform application setting stage development renement insight provided paper onlyunderline successful implementation itc platform also shed light transformative impact predictive analytics information system keywords data analytics machine learning project management author license springer nature fernandes ed barrocas introduction organization seek satisfy customer need stay competitive often leaning project management practice improved performance control absence effective project management practice lead substantial loss due communication gap poor planning disregard requirement engineering practice compromising product quality customer satisfaction counteract challenge solu tions proposed introduction domainspecic language dsl itlingo research project language include requirement speci cation language rsl project specication language psl test specication language tsl developed specically efcient specication project requirement plan test respectively support software development process critical mitigate risk uncertainty manage cost ensure deadline compliance given organi zations generate daily data role data analysis visualization becomes criticalto comprehend current historical project performance machine learning technique fed past project data predict potential future issue suggest preventive measure tool aid work planning information dissemination among stakeholder reducing process inconsistency proposed approach address issue providing mechanism guide software development process involves investigating collaborative platformsand cloud tool manage organization workspace line agile process evaluate approach test focusing learnability usability paper discus core theoretical technological concept including data analysis machine learning visualization aspect project management theory also detail proposed solution architecture requirement technological aspect evaluating testing itc platform background introduce discus general concept underlying research namely dataanalysis agile project management aspect data analysis visualization data analysis integral across various domain particular helping business max imize potential data mining project management statistical tech niques articial intelligence particularly neural network aid predicting projectperformance making complex decision organization generate vast amount data data visualization provides comprehensive mean summarizing data facilitates communication reducesmisinterpretation offer insight visually representing data tool like dashboard chart statistical technique namely descriptive inferential statistic summarize characteristic dataset make informed prediction population parameter respectively enable deeper understanding data thereby enhancing decisionmaking capability exploring data analysis visualization technique project tracking data type report analyze interpret data well understand apply ndings essential basic understanding data variable combination data type compose dataset inuences choice data visualization implemented highest level data classied two general categoriesquantitative qualitative quantitative data countable measurable qualitative data usually interpretationbased descriptive easily measured quantitative data continuous discrete ratio data continuous data measured constant sequence exist continuous range data type meaningfully divided intosmaller ner increment height weight temperature length example continuous data ratio data considered another form continuous data property interval data distinguishing property ratio data true denition absolute zero point qualitative data classied nominal ordinal nominal data also called categorical data represent type data may divided group race sex data type classied dichotomous two category polytomous two category ordinal data data value follow natural order discrete data counted age educational level nominal data classied ordinal data classied ordered data visualization technique data visualization technique pivotal effectively presenting ndings specic datasets understanding trend pattern relationship among data element choice visualization type bar chart line chart pie chart scatter plotsand histogram dictated specic need nature data bar chart commonly used technique excel comparing quantity across dif ferent category facilitating understanding data trend line chart excellentfor tracking change time connecting individual numeric data point illustrate sequence value pie chart serve represent part whole ideal showing relative proportion percentage although recommended limit pie wedge sixfor clarity scatter plot help examine relationship variable capacity highlight trend concentration outlier histogram suitable analyzing data distribution across group presenting continuous numerical data addition projectspecic visualization like gantt chart burnup chart burndown chart play key role project management gantt chart provide holis tic view task deadline milestone resource planning supporting informed decisionmaking burndown chart depict remaining work facilitate predicting completion likelihood time conversely burnup chart represent project progress work done time serving intuitive gure project status barrocas random forest algorithm random forest robust machine learning algorithm form core pre dictive analytics model itc type ensemble learning method developed leo breiman operates constructing multiple decision tree outputting class mode class classication mean prediction theindividual tree regression algorithm provides strong balance accuracy interpretability manages handle large number input effectively dealing missing value maintaining accuracy large proportion data missing context itc random forest chosen reliability versatil ity algorthm adequate predicting project success due complexity datasets nonlinear relationship domain specication language dsl decision tree within random forest understood individualrules contributing nal decision providing insight signicant factor inuencing project prediction combination accurate predictive capability interpretability allows informed decisionmaking project management agile project management project management set practice crucial maintaining control project aspect like scope quality schedule budget resource risk align projectobjectives notable international framework include pmbok guide iso ipma icb traditional follows waterfall model project plan xed beginning however approach struggle uncertainty need change contemporary project agile method scrum kanban focus adaptability communication collaboration often suitable project scrum denes role product owner scrum master development team us short iteration sprint better control risk reduction kanban le pre scriptive limit workinprogress efciency based justintime premise method contribute enhanced project performance improved customer satisfaction quicker product delivery itc overview itc advanced multiorganization multiworkspace platform designed collate manage analyze projectrelated data transforming actionable insight strategic business decisionmaking key tool userfriendly interface intuitive management workspace technical documentation incorpo rate standard feature agile project management tool draw inspiration emerging collaborative solution cloudbased integrated development environment ides provide conducive environment quality swift software developmentexploring data analysis visualization technique project tracking itc stand compatibility various technology language explored prior research project instance integrates seamlessly predened project data template like psl rsl excel template thereby streamlining data syn chronization also robust automation capability automatic text extraction todocument automation empowering user effortlessly manage utilize stored organizational project data platform bolster data analytics builtin dashboard present ing critical project data easily digestible format crucial aspect predictive analytics model designed monitor project cost enhance project productivity aid manager informed decisionmaking itcs architecture designed seamlessly integrate online ide enabling user directly access modify deploy software development arti fact stored platform database integration would bolster softwaredevelopment deployment process within workspace scope itc employ clientserverstyle architecture comprising front end accessible web browser backend server relational database architecture utilizes postgresql database implementation employ django applica tion framework supplemented javascript library like chartjs dashboard development platform also mobileresponsive ensuring usability across variousdevice size introduction present overview main element itc focusing user role organization workspace agile process management data import document automation notications data analysis project prediction spotlight robust data science analytics capability user role user may different role determining permission access platform page access certain information perform system action guarantee access management information user role may changed easily platform organization workspace level user information may searched ltered sorted user role also chosen invitation sentto part one specic organization workspace organization itc allows user store search visualize several organization information better structure team facilitate collaborative work possible create several workspace inside organization space named organization eachorganization may store le namely library template psl excel template rsl excel template may used lled project data workspace level system store process project data provide intuitive statistic aboutorganizations intending present track performance analyze compare budget project cost track project aid business decision registration process user register system create neworganization thus becoming organization manager organization creation user immediate access control user added invited member organization already exists platform case organization manager organization need accept access request organization moment user organization manager role may accessthe list organization user organization invite new one change user barrocas role organization provides statistic analyze data namely analytics page main page possible edit information related organization name organization activity type country setting page workspace workspace created scope organization main workspace property project management process status project benet successcriteria general cost schedule information property dened man ually automatically imported le uploaded platform user manage document product backlog sprint backlog workspace helpful spaceto support collaborative project management contains several page several feature system allows storage le psl excel le lled project data data automatically imported le consequently saving time user may select merge relevant data stored excel le related product backlog sprint backlog item project cost choose theywant import database feature particularly useful promote better collaboration team stakeholder since may share dispersed le itc provides visual insight statistic intuitive dashboard analyze workspacedata may imported user may generate project management report using data stored database scope workspace agile process itc support scrum kanban agile process allowing user manage product backlog sprint backlog kanban board enables storing associated data like le image effort task scrum user access sprint backlog sprint history page managing sprint task including search function sprint history statistic sprint cre ation requires specifying relevant information name schedule stakeholdersthis data imported excel entered manually system detects whether task already exists database imported data update creates information accordingly manual creation task detail must provided itc alsoenables creation task importing item product backlog assigning unique task id dening different type effort task kanban process sprint backlog sprint history page replaced kanban page show kanban board task creation function like scrum kanban data imported excel dsl generating chart automatically file management itc support storage multiple le promoting reusabil ity integration itlingo template psl excel template itlingo library contain reusable specications dened psl rsl language beused create new specic specications itc support reusing template import ing data saving time using data scope organization respective workspace itc ensures user access document version stakeholder may share itc allows selecting merging data excel le allowing toselect content user may need stakeholder case open issue product backlog item data import stakeholder involved software project constantly generate data organization including information related requirement bug budget risksexploring data analysis visualization technique project tracking effort multiple stakeholder work simultaneously problem version data consistency outdated information erroneous data itc system allows import specic data excel le namely based psl excel template speed process adding new information updating existing data stored databasefurthermore possible partially select specic information excel le synchronize information database itc avoids duplicate infor mation detecting duplicated id data element stored excel le hencethe itc update information database already exists specic workspace duplicating data otherwise create data database possible select specic psl excel worksheet imported namely theproject data several worksheet product backlog item sprint backlog kanban task project stakeholder document automation document automation allows generates document report containing text table gures specic topic itc provides report automation system us data stored database generate differentreports feature handy save time production technical artifact monotonous repetitive activity standard project management report must follow certain practice contain certain type information ofthem identied pmbok bragana carried study understand common report project management research designed functionality generate automatic report psl excel template documenttemplates collected produced bragana adapted used itc notications itc includes notication system share relevant information event happen scope organization project notication system enables realtime notications allowing directly read message notication bar important information automatically sent namely invite member organizationsor specic workspace also accepting rejecting invite directly notica tion message possible besides system informs one invite accepted rejected project planned end date approaching invite member organization workspace made even person yet account platform case email sent invite user register systemdepending invitation type invite member specic organization workspace made organization workspace level supposing user email already registered system one invitation notication shall sent shallbe possible accept reject invite data analysis itc support analysis projectrelated data summarizing centralizing information itc help make informed correct decision le uncertainty user explores data interaction chart obtain sum mary characteristic statistic organization project data itcsupports dashboard organization workspace level track progress working hour outcome relevant information itc includes organization main page summarizes organization data organization analytics page thatanalyzes data detailed level data analysis mechanism scope barrocas organization summarized following compare organizational productiv ity change time namely work completed time track completed work per workspace analyze workspace status compare user involved per workspace analyze workspace cost namely better understand available budget comparing planned cost current cost among workspace figure present itc organization analytics page project prediction system designed effectively manage predict project outcome begin integrating multiple data source including project detail domain specications create unied project dataset rich dataset feed amachine learning model case random forest regressor trained pre dict project success based multiple variable like project scope budget duration team member complexity predictive functionality multifold aid resourceallocation suggesting project deserve budget time considering potential success support risk management identifying project predicted le success thus aiding early risk identication mitigation italso aid project planning predicting project duration performance evalua tion estimating project success system also leverage predictive analytics project prioritization rank project based predicted success provides alist toppriority project allows stakeholder allocate resource attention project likely succeed result presented dashboard report support informed decisionmaking effective project management figure present itc workspace analytics page evaluation itc evaluated scope user assessment independent researcher teacher student mainly test collaborative data analytics feature thisuser assessment based ctitious organization ctitious project discussed msclevel information system project management course study robustness machine learning algorithm deployed itc system thoroughlyassessed using standard evaluation metric root mean square error rmse rsquared value model yielded impressively low rmse value indicating low degree error high rsquared value demonstrating asignicant proportion variance dependent variable accurately predicted independent variable result underscore machine learning model strong predictive capability practical value managing forecasting project outcome user assessment conducted user assessment evaluate system receive preliminary feedback people directly involved research test helpful problem solve evaluate usability collaborative feature wellas capacity understand data visualization mechanism provided itc inexploring data analysis visualization technique project tracking screenshot analytics page organization level particular test ability user analyze ctious organization data take conclusion evaluation process used usability test user individual session interact directly platform finally elaborated questionary user gather vital feedback guarantee system meet theusers need analyze obtained result test phase performed june august questionary answered group participant age ranging year oldand least bachelor science degree namely bsc msc phd degree participant little professional experience particular participant le year participant year participant year participant year experience analyzing user background possible understand user haveprevious training project management eld particular participant previous training comparing answer possible barrocas screenshot analytics page workspace level understand user experience project management tool minority experience tool user pilotuser test session conducted following condition test conducted controlled environment without distraction ofceor home environment realization task without previous learning system user required internet connection browser good support user free think loud share idea theevaluator didnt interact user test nished except case blocking error session maximum min duration guide user assessment test participant received script briey describing itc explaining goal activity bier organization ctitious project tracked system contextualizing user step befollowed carry evaluation task explained user assessment session divided two part part involved testing collaborative feature platform second involved ability ofusers data visualization feature particular understand whether able apprehend preliminary information dashboard intend transmitexploring data analysis visualization technique project tracking part included task script involved registration platform creation organization workspace management product backlog sprint second part referent task script user asked analyze general statistic related bier organizationits analytics page available workspace statistic summarized analytics page well data analysis visualization stored specic sprint historic organization data used test purpose mainly imported excel le including information related ctitious project make possible compare data organization global level comparing information among project stakeholder productivity effort performance end participant asked questionnaire rate platform suggest improvement report error answer data analysis question questionary structured following session respondent characterization three question focused general characterization participant following aspect agegender academic level user background analysis four question directly related user background analysis namely related year experience previous experiencein project management subject related tool user experience overall assessment eight question focused test usability learnability aspect itc asked percentage completed thetasks proposed asked participant rate likert scale completely disagree completely agree aspect related interface complexity usability feature integration interface inconsistency learnability data analysis question asked question evaluate user capacity interpret dashboard information lot possible aspect ask related dashboard still focused testing two question related organization data analytics two related workspace data analytics one interpret historic sprint data asked organization productivity cost effort hour work completed item check user understoodthe chart asking concrete answer itc general evaluation section highest number question part questionnaire asked aspect related theusefulness specic feature provided platform asked participant rate likert scale know low low medium high high useful functionality create andmanage organization workspace import projectrelated data manage sprint task well functionality analyze organization workspace statistic sprint dashboard include openended question usersto provide additional comment suggestion problem bug result analysis mentioned questionary divided section sec ond section already analyzed previously describing participantrelated aspectsnamely general characterization background barrocas section three analyzed itc usability learnability aspect response section revealed good interface result analyzing answer concluded task completed participant remaining question asked participant rate likert scale completely disagreecompletely agree table summarizes average score question based may verify following ndings participant would product analyzing result question system complexthan necessary found although people disagreed question still three people answered one answered vast majority people agreed system easy easy learn feeling condent whenusing product feedback provided participant open ended question interface usability aspect tool visual intuitive allowing avery interesting analysis information platform complete visual great good job table user experience overall assessment result question average think would itc itc complex necessary itc easy various feature itc well integrated itc inconsistency suppose people would quickly learn itc felt condent using itc value scale completely disagree completely agree section evaluates user capacity understand dashboard well ability understand information whose graphic intended convey verify data analysis done correctly asking concrete answer regardingthe question project item solved organization participant got right remaining question vast majority got answer right percentage correct answer question projecthas current cost higher planned cost question remaining effort foreseen day question sprint involved hour work question many item werecompleted participant provided following feedback open ended question data analysis feature good monitoring data analysis tool monitor user project active canceled completed among task one note would increase size graph allow better visibility number thescales graph last suggestion followed number ofexploring data analysis visualization technique project tracking graph increased well color rened better understanding value section important detect bug system improvement particularly beginning testing phase user tested platform intensivelyfound bug system caused message text description provided another bug found related draganddrop provided kanban board bug related need manually refresh page kanban boarditems updated bug xed beginning evaluation phase improvement suggestion think description optional eld ended placing name task description would beinteresting add integration feature management tool example suggestion followed task description longer required eld second suggestion implemented feature requires extensive workand shall considered future work table itc usefulness assessment result question average rate usefulness creating managing organization suitable platform creating managing workspace rate usefulness importing product backlog data rate usefulness managing sprint task rate usefulness sprint board lters rate usefulness organization data analysis rate usefulness workspace data analysis rate usefulness sprint data analysis value scale low high sect also asked aspect related usefulness specic feature provided platform participant rated likert scale verylow low medium high high usefulness functionali tie creating managing organization workspace import project related data manage sprint task well functionality analyze organization andworkspaces statistic sprint dashboard table summarizes average score supported feature based may verify following ndings answer high high question themajority question rate usefulness import prod uct backlog data one person answered medium remaining answer result conclude user found allthe feature evaluated useful regarding openended question sect participant answer however addition feedback improvement bug already barrocas mentioned answered provided encouraging comment feed back good congratulation congratulation work among positive feedback mentioned previously analysis com ments led conclusion tool useful work carried outsuccessfully sum result collected analyzed section posi tive score usability expert like nielsen landauer observed group tester enough uncover usability problem since questionnaire focus usability general evaluation itc may conclude participant fair number exploratory assessment allowing identify signicant aws usability proposal furthermore assessment wasalso handy detecting solving bug conclusion research led creation itc collaborative platform designed support range software development process project management activity itcs pri mary goal facilitate effective data management analysis within organization itpresents accessible userfriendly interface enables stakeholder easily navigate interact wealth projectrelated information key concern addressed system include enhancing organizational performance promoting synchronized andcollaborative work managing projectrelated data fostering collaboration among stake holder translating project performance decisionmaking aid system usability capability tested via experiment user assessment receiving positive feedback encouraging result performance metric machine learning model integrated system specically rmse rsquared val ues found respectively indicating substantial reliability supporting project management moving forward area improvement identied firstly aug menting itcs data analysis capability could provide greater insight project cost via predictive model aiding informed decisionmaking there also room advance capacity predicting project timeline based past project data future researchendeavors directed towards rening input variable tweaking additional hyperparameters optimize model accuracy secondly document automa tion functionality could facilitate inclusion additional report platformlastly enhancing integration itc online integrated development environ ments ides could provide allinone platform software development project management adding developer tool cloud ide feature reference patanakul iewwongcharoen milosevic empirical study project management tool technique across project lifecycle impact project successj gen manag emam koru replicated survey software project failure ieee softw exploring data analysis visualization technique project tracking silva itlingo research initiative arxiv preprint arxiv nayebi ruhe mota mufti analytics software project management proceeding ieeeacm internationalconference automated software engineering workshop asew march httpsdoiorgasew kanakaris karacapilidis kournetas lazanas combining machine learning operation research method advance project management practice operation research enterprise system novitzk informatics ieee international scientic conference informatics proceeding november poprad slovakia gamito silva rigorous requirement user interface specications software business application international conference quality information communication technology silva rigorous specication case rsl language international conference information system development ai smith gupta jnd neural network business technique application operation researcher comput oper re wang chan predicting construction cost schedule success using articial neural network ensemble support vector machine classication model int project manage httpsdoiorgjijproman costantino gravio nonino project selection project portfolio management articial neural network model based critical success factor int project manage httpsdoiorgjijproman sadiku shadare musa akujuobi perry data visualization int eng re adv technol ijerat zheng data visualization business intelligence global business intelligence routledge hardin hom perez williams chart graph right tell impactful story data tableau software vetter fundamental research data variable devil detail anesth analg cabri grifths earned value agile reporting agile agile project management institute guide project management body knowledge pmbok guide project management institute stellingwerf zandhuis iso guidance project managementa pocket guide van haren vukomanovi young huynink ipma icb global standard project programme portfolio management competence int project manage commission informatics project management methodology guide publication ofce charvat project management methodology selecting implementing supporting methodology process project thesing feldmann burchardt agile versus waterfall project management deci sion model selecting appropriate approach project procedia comput sci httpsdoiorgjprocs barrocas pundak mixed agiletraditional project management methodologyreality illusion procediasoc behav sci beck manifesto agile software development alqudah razali comparison scrum kanban identifying selection factor international conference electrical engineering informatics iceei httpsdoiorgiceei carvalho bragana document automation itlingo psl excel template msc dissertation instituto superior tcnico universidade lisboa ravindran django design pattern best practice packt publishing ltd nielsen landauer mathematical model nding usability problem proceeding interact chi conference human factor computing system breiman random forest mach learn liaw wiener classication regression random forest news genuer poggi tuleaumalot variable selection using random forest pattern recogn lett professional association steer digital transformation case study belgian notary industry ziboud van veldhoven kani kili divya prakash ryan michael smithcooper jan vanthienenb research center information system engineering leuven leuven belgium janvanthienenkuleuvenbe abstract embarking digital transformation key challenge facing many organization especially smaller rms face great difculty due lack nan cial resource time culture paper showcase professional association key player digitalize industry made small rmsby using semistructured interview largescale survey outline digital transformation belgian notary industry steered profes sional association fednot ndings indicate fednot functioned aprocient driver digital transformation strong emphasis customer centricity network organizational structure product ecosystem finally highlight success factor barrier change recommendation futureprofessional associationled digital transformation keywords digital transformation professional association notary general introduction digital transformation term introduced talk rapid change process happening world due increased usage reliance digital technology process brings forward major change industry society demandmore research numerous denitions exist process aim improve entity triggering signicant change property combination infor mation computing communication connectivity technology vial oras increasing interaction digital technology business society van veldhoven vanthienen recent year research become major topic information system research practice paper published date van veldhoven etikala goossens vanthienen global rms indicating critical survival coming year sap center business insight however numerous company face great challenge dealing lack leadership brock von wangenheim lack resource cichosz wallen burg knemeyer lack knowledge schneider kokshagina one author license springer nature fernandes ed van veldhoven way deal challenge might hand professional association organization represent aid protect certain trade industry grouping knowledge resource might ideal driver sector face challenge however research role professional association oftheir sector missing literature reason aim investigate belgian notary industry led professional association royal federation belgian notary fednot onlyis research notary lacking unique business environment pose inter esting case study belgian notary industry governed professional association fednot also integral part belgian legal system predatesthe digital technology hence largely rooted traditional way business primarily composed small local familyowned rms status legal ofcers state delegated power thus far kept thenotaries relatively well insulated external threat due various emerging threat fednot member embarked journey collect data mixed method approach interview survey tertiary data collection used next section elaborate digital transformation describe belgian notary industry detail afterwards interview surveybased methodology given section three belgian notary industry given section fourone result launch four new digital product shown section discus ndings implication future research section six conclude paper section seven background digital transformation increased usage digital technology organization response everchanging everdigitizing competitive landscape saarikko westergren blomquist vial however transformation beyond strictly technical nature also align overall cultural organizational shift associated adopting technology perkin abraham saarikko vial important consideration organization expectation employee customer shaped experience daytoday life hereafter personal life become everincreasingly digitized automated consumer expect service product consume similar nature newly empowered consumer alter landscape rms must operatelucas agarwal clemons sawy weber saarikko vial addition technological sociotechnical possibility increasing number competition front firm must pay close attention change theirsector act swiftly professional association professional association also called professional organization professional society trade organization operate interact variety way within single industryhow professional association steer digital transformation profession within similar rms often founded funded member organization operate respective industry government primary objective entity utilization knowledge capability resource control direction certain activity aim aligning outcome theinterest sector drahos shearing essentially professional association aggregate resource ensure view heard topic affect barnett key role therefore ability facilitate environment specic industry thrive tsuiauch belgian notary industry belgian notarial system semifederal legal profession established early century ensure centralized governmentsanctioned institution thatoversees take record various civil law agreement notary public ofcer appointed king receives power state however appointed notary function independent entity delegated responsibility cover threeprimary legal area real estate family law enterprise law activity real estate include facilitating purchase sale property certication mortgage loan family law activity include authentication marriage set tlements donation divorce inheritance enterprise law activity include incorporation merger acquisition royal federation belgian notary ndcurrently shown roughly individual rms notary notarial staff operating belgium federation enterprise belgium belgian notary industry glance primary responsibility notary belgium provide legal advice client regard contract performance pertaining aforementioned legal area inform client right duty consequence theircommitment royal federation belgian notary also play critical role van veldhoven drawing authentic act additionally notary also ensure followup protocol registration public register royal federation belgian notary government effectively created monopolylike climate federally appointing notary mandating operation hence notary prohibitedfrom engaging price differentiation revenuegenerating activity conse quently belgian notarial system situated federal institution private institution individual notary act private independentfashion peer notary supported professional association fednot founded fednot support notary invests research development function asa buffer government industry shown provide service member legal advice service training solution illustration depicting information citizen government however notary found precarious position many disruption legal technological front threat innovative technology liberalization activity deregulation price result notarieswould longer able benet protected environment loss rele vance key business segment along anticipated rise external rivalry functioned wakeup call fednot individual notary therefore fednot embarked journey hope protecting interest notary methodology investigate impact belgian notary industry role fednot amixedmethod approach chosen consisted interview largescale survey tertiary data collection online source three type interview conducted first interviewed chief transformation ofcer cto fednot better understand industry frame questionnaire subsequent interview sec ondly interviewed marketing director strategic advisor fednot theaim understand current digital strategy competitive landscape belgian notary industry third investigate industry large three semistructured interview conducted distinct notary rms understand alignment withfednot digital situation ndings interview used construct survey inves tigate adoption digital solution across industry survey distributed belgian notary consisted largely likertscale multiplechoice question also included optional open question approximately notary responded survey however exists variation betweenhow professional association steer digital transformation number question answered respondent free skip question respondent reported part microsized employ ee smallsized employee mediumsized employee digital transformation fednot notary predigital strategy fednot prior fednots primary objective function service company notary rms activity centered around designing developing applica tions well tool backofce activity notary moreover aimed supporting ofces building bridge notary government emphasis keeping transferring data secure way ensur ing efciency notarial activity strategy internally focused notarieswere prioritized consumer external partner additionally fednot served medium information owing government rms update law regulation registration deed critical news driver change three primary driving force behind decision embark derived interview first european union looking way open notarial activ ities player market secondly european union trying makeprice competition possible two change occur external competition profession expected three notary domain real estate threat large real estate agent developer stated thelast decade notary lost around percent real estate sale belgium family law competition law rms bank enter prise law threat large consulting rms thirdly innovative technology blockchain articial intelligence possibility alter current operation signicantly causing major disruption market competitive advantage key competitive advantage professional association typically size hold true fednot represents entire industry funded notarial study belgium therefore fednot access nancial team large law teamof lawyer large ict department ict specialist evidently access capability single notary capability enable fednot invest project initiative benet entire industry another key advantage industry innate network structure due price reg ulation marketing restriction internal competition notary typically work close cooperation network structure make agile decision making exible change single large moreover allows notary close knowledge customer understanding whattechnological solution would work best practice van veldhoven infrastructure change fednot fednot created transformation unit cto lead unit created specically drive initiative separated departmentadditionally fednot instituted crossfunctional project group steering commit tee extended management committee transformation project cross functional nature include cto product manager business managershowever institutionalized structure remains hierarchical department based regarding infrastructure completely managed premise prior introduction initiative changed dramatically cloudrst infrastruc ture since initiative implementation currently product hosted cloud need high availability good monitoring thing internal team deliver old internal application register still operating legacy system premise cultural readiness cultural readiness often major challenge company embarking hartl hess due approximately half fednot composed personnel employee generally exhibited openness enthusiasm changesregarding yet major issue conceptual nature proposed project project shifted internal application built top manner external customercentric product built cocreation stakeholder partner customer also required shift culture although fednot major cultural barrier cultural inertia prevalent amongst notary rms committing digital strategy development fednot apparent considering shortterm benet new digital product instance notary adopt short term see added value really challenge change management team try practical situation convince notary promote project fednot utilizes ambassador program composed enthusiasticnotaries encourage proactivity among notary towards interview emphasis dedicate resource towards program goal fednot communicated general management employee notary series communication medium internal communication platform called enotariaat direct mailing change team ambassador program furthermore fednot make world cafe thereis peertopeer exchange notary regarding future notary industry help design strategy initiative cope shift externally facing application new role skill needed considered nonexistent fednot designer fednot opted gap hiring additional new employee roughly current size also utilizes external partner largely due exibility external partner provide fednots unsuccessful previous move internalize many role needed due subsequent loss agility however training exist withinfednot focused primarily strategy people management culturehow professional association steer digital transformation fednot also offer webinars training program change team notary project effective important elicited survey notary strongly somewhat agree skill gap hindered impacted neither agreed disagreed strongly somewhat disagreed moreover notary found training support offered fednot good quality found excellent found average found either poor terrible quality solutionthere associated instructional video well informational webinars address internal skill gap notary seem opt mandatory training course external partner properly integrate fednots solution existing itinfrastructure workow adopting agile value common practice embarking fuchs hess hold fednot going traditional inwardfacing mindset agile customercentric focus today fednots strategy based excellent customer experience collaborative culture building ecosystem linked together new image notary additionally fednot moving towards agile principle culture risk taking working iteration project improving speed product delivery regarding collaboration fednot embraced crossfunctional team expanded management committee thetransformation unit agile value mostly place department organization considering added value agile department key cultural value prioritized fednot move toward cocreation employee empowerment believe evolve coaching leadership empowering people instead topdown culture anempowering culture addition horizontal steering committee must take responsibility facilitate necessary culture fednot grow digital transformation strategy recent year strategy fednot changed year ago strategy make tool notary real digital approach digitalapproach notary related work study fednot outlined digital strategy strengthen notary role trusted neutral expert advisor involve notary part customer journey rather anauthenticator legal document strategy today look market larger way notary objective required fednot broaden customer technology focus earlier entire focus providing tool service necessary connecting notary government focus serving external customerscitizens collaborating strategic partner well renewedcustomer centricity necessitated development new product service aimed society large internal notary unique aspect found fednot driving single organization entire industry additionally unlike typical organization notary fednots employee independent entity therefore notbound adopt fednots strategic vision developed solution complicates van veldhoven project rollout build product notary notary buy sell product launch notary also choice completely dependent fednot kind product service could brand well requires precaution precisely outlining product linking notary starting real development business model innovation part fednots strategy creation planned business model innovation con sisted three key component shown datacentricity aspect leverage fednots role information hub using vast amount legal data industry posse collaboration aspect investing collaborative ecosys tem strengthen position market third aspect deal automationof service aibased expertise novel product aim component produce additional revenue used fund fednot activity subsidize service provided fednot notary business model innovation component fednot starting point information hub model vast amount data form legal supporting document customer provide fednot plan bundle enrich dataset attribute open data geospatialdata order provide better service advice another value stream digital vault citizen upload document automatically access legal deed since citizen authorization document accessed otherinstitutions thereby simplifying process submitting physical document collaboration aspect ecosystem developed consumer external partner notary citizen government agency application developersand profession bank insurance rms accountant lawyer want enter ecosystem need think market going partner going expand offering motivation work ecosystem came desire notary taking part broader customer journey play role together party also pragmatic realization notary beat competition area thehow professional association steer digital transformation ecosystem consists collaboration platform api platform allows fednot thirdparty application seamlessly share data strengthen notary role expert advisor fednot exploring data build new service areaof tomorrow aim enhance data data mining aimodels two important way aidriven model built data hub real estate evaluation augment frontend advisory capability anaidriven document verication solution aim automating backofce task thereby freeing time notary focus core competency legal advisor digital transformation product source inspiration new product developed fednot notary self various workshop done collaboratively fednot notary brain storm new service improvement inspiration used innovation lab program digital expert collaborate develop prototype potential product service fednot might offer notary lab considerableleniency autonomy experiment different concept provisioned ambitious exible budget prototype submitted board member approval development since beginning fednot fourmajor product developed within industry biddit biddit launched online public auction platform real estate allows consumer bid listed property participate pricing valuation thelisted property fednots project identied declining revenue source previous auctioning scheme product survey inquired usage effectiveness give one example survey result notary indicated used biddit indicated always time regarding biddits effectiveness consider extremely successful identied somewhat successful consider biddit either somewhat extremely unsuccessful additionally respondent indicated likely recommend biddit client moreover respondent indicated effectively trained biddit overview shown belgian notary network belgian notary network bnn launched private network implemented fednot enable individual notary communicate sign authorize deed exchange information securely bnn operates closed network party participate fednot commenced bnn project meet need notary regarding secure digital communication line delivered operated byexternal provider van veldhoven notary feedback biddit estox estox online digital shareholder registry launched small medium sized business want maintain document shareholder list easy toaccess online format created response regulatory reform enabled business digital channel keep track shareholder document ajoined notary accounting product housed separate nonprot organization estox platform also provides ability interact external entity exchange information shareholder list izimi izimi launched online digital repository entrusted safeguarding individual condential deed document secure digital vault free thecustomers notary allows choose document store izimi strictly speaking consumerfacing product capability integrate fednots existing future service example integration nabanwhich digital archiving tool notary future izimi integrated management software solution notary discussion summary belgian notary industry interesting case professional associa tion main driver notary come long way largelypredigital industry notary equipped new product skillsets would help remain relevant business technological regulatory pressure aid fednot attention paid novel technology cloud computing data analytics mobile social resulted four new product biddit bnn estox izimi integrated managementsoftware notary fednot several organizational change taken place accommodate new focus transformation unit steering group tohow professional association steer digital transformation manage process project team develop novel digital solution greater focus ecosystem strategic partner promotion agile development meth od shift towards customercentric mindset table highlight major impact fednot industry overview belgian notary industry organizational structure topdown hierarchical structureshybrid structure withcrossfunctional project teamsand transformation unit strategic focus improving notary government coordinationincreasing customer experienceand ecosystem integration focus backofce efciencyoriented applicationsagile development ofinnovative product based cloud analytics mobile andsocial technology role responsibility traditional role discrete departmentsemphasis crossfunctionaland dynamic role governance dictated board ofadministrators enforced bythe clevel executive governance shared thetransformation unit industry image nondigital traditional modern customercentric customer experience heterogeneous across notary uniform across notary customerfacing digitalproducts biddit estox izimi importance professional association role professional association respective sector researched topic information system research community yet role canbe crucial thanks pooling resource fednot access large ict team resource innovate survey response discussing would look without existence fednot substantial proportion respondent elicitedthat would nonexistent without fednot additional response highlighted likely would slower difcult costlier however notary express lessenthusiastic response indicating believe would better userfriendly cheaper faster without orchestrating role fednot overall respondent consider fednot either extremely useful useful driver general fednots effort either completely somewhat met notary expectation satised effort satisfaction van veldhoven fednot driver may evidenced quick adoption rate seen survey respondent respondent placed innovator category early adopter early majority late majority laggard category however fednot state laggard free convince follow novel approach early adaptor follower board notary follow fednots effort importantly notary feel initiativeshave projected positive image profession term techsavvy client friendly think image much improved standard professional modernized dramatically last year role fednot professional association expanded primarily service provider notary also primary driver whole industry providing customerfacing solution term outcome individualnotaries overwhelmingly pleased vision direction fednot taken believe industry much along would fednot nonexistent moreover nancial resource required hiring employee transformation indicate process requires signicant investment something individual notary could afford indicates pooling resource entire industry may smart approach undergoing resourceand knowledgeintensive process fostering proper culture four major application produced since start fednots transformation three directed towards consumer however shift also requires shift mindset culture notary expressed prefer fednot focus onimproving internal efciency rather addressing citizen pain point cultural aspect fednot address change management issue related culture well result indicate notary rms may needed digital mindset lead reluctance change another important facet successful transformation culture learning vey fandelmeyer zipp schneider however fednot present training program notary specically address technical training present issue effective application relevant response notary expressed desired training collaboration solution development user friendly design better integration product avoid excessive double encoding moreover notary stressed going fast focused citizen instead notary many product abstract nature properly diffuse promotewithin industry one notary elaborates would wise opinion better calibrate project ensure bearable notary cultural challenge require close attention successfulhow professional association steer digital transformation barrier success factor recommendation based ndings recommendation derived followed professional associationled transformation shown succes factor create partner ecosystem customercentric datadriven prioritize innovation prioritize continuous collaboration embrace employee cocreation implement network structure fednot barrier frequently changing board administrator topdown control flow innovation shortsightedness notary firm presence technology skill gap inability relay goal effectively resistence agile nonit departmentsdigital transformationrecommendations holistic training program industry stakeholder continuous collaboration industry firm utilize early adopter agent change utilize change management team ensure commitment industry firm institutionalize success factor avoid loss momentum success factor barrier recommendation future work studying belgian notary industry provided unique insight effort small enterprise professional association driver change achieving alignment company act adopter digital change professional association serf driver change pose unique challengesrequiring research another interesting research avenue impact product standardization prod ucts designed professional association launched across entire sectorwhile previously notarial study used provide service unique way customercentric product promoted fednot standardize customer experience across notary longterm impact standardized product across industry oncompetition competitiveness unknown warrant research develop deeper understanding complex steered professional association case study must conducted industry comprised smallsized rms professional association directs research could used draw comparison impact professional association driver industry essence needed largescale research effort professional association could key element successful sector many smaller player case research must conducted whether itmakes sense industry without professional association create one van veldhoven limitation several limitation may inhibited ability collect optimal amount quality data first enquiring selected notariesabout interviewing appeared general reluctance participate possible response bias towards techforward notary coupled time restriction covid pandemic led nonoptimal numberof interview lastly literature professional association available inspire interview survey compare result conclusion report unique industry comprised small notary federally protected activity central professional association coordinate effort investigated ndings indicate ability notary pool resource professional association proved advantageous giving manysmall rms capability much larger organization however research needed role professional association sector interview survey question link interview survey question httpstinyurlcomfednot reference barnett one voice whose voice exploring drive trade association activity bus soc brock von wangenheim demystifying digital transformation leader teach realistic articial intelligence calif manage rev cichosz wallenburg knemeyer digital transformation logistics service provider barrier success factor leading practice int logist manag httpsdoiorgijlm drahos shearing nodal governance may fuchs hess becoming agile digital transformation process largescale agile transformation international conference information system icis hartl hess role cultural value digital transformation insight del phi study amcis america conference information system tradition innovation august august legner digitalization opportunity challenge business information system engineering community bus inf syst eng lucas agarwal clemons sawy weber impactful research trans formational information technology opportunity inform new audience mi perkin abraham building agile business digital transformation professional association steer digital transformation royal federation belgian notary notary notarial profession belgium language notarisbe saarikko westergren blomquist digital transformation recommendation digitally conscious bus horiz httpsdoiorgjbus hor sap center business insight sap digital transformation executive study way leader set apart schneider kokshagina digital transformation learned thus far next creativity innov manage may httpsdoiorgcaim federation enterprise belgium sectoral federation tsuiauch bureaucratic rationality nodal agency developmental state case stateled biotechnology development singapore int soc http doiorg van veldhoven etikala goossens vanthienen scoping review digital transformation literature using scientometric analysis international conference onbusiness information system bi van veldhoven vanthienen digital transformation interactiondriven perspective business society technology electron mark vey fandelmeyer zipp schneider learning development time digital transformation facilitating culture change innovation int adv corp learn ijac httpsdoiorgijacvi vial understanding digital transformation review research agenda strat inf syst httpsdoiorgjjsisdqbrk data quality business rule identication based isoiec ramn galerab fernando gualo ismael caballero moiss rodrguez dqteam ciudad real spain rgaleradqteames alarcos research group uclm ciudad real spain fernandogualoismaelcaballerouclmes aqclab uclm ciudad real spain mrodriguezaqclabes abstract organization continuously generate manage extensive amount data specic purpose making informed decision monitoring certain parameter essential obtain data obtainedstored maintained equally valuable data quality crucial factor organization data meet required level quality yield best result maintain adequate level ofquality organization need identify data requirement business rule data must adhere intended purpose common problem organization lack knowledge identifying business rule adequately inthis regard model based isoiec enables assessment data quality based organization requirement solution work present methodology facilitate identication classication business rule foran organization well association data quality characteristic dened isoiec standard keywords business rule data quality isoiec introduction data quality measurement model aim quantify extent dataset repository meet characteristic proposed data quality model different methodsand tool available ass data quality properly aimq methodology information quality assessment dqa data quality assessment nowadays organization want evaluate data quality must develop data requirement specication business rule data must comply based intended within organization although highly complex process require certain level knowledge fundamental handled properly process take longer expected evaluation conducted adequately author license springer nature fernandes ed dqbrk data quality business rule identication work present systematic methodology assist organisation obtaining business rule mechanism require le time effort current one perform data quality assessment remainder paper structured follows sect introduces isoiec standard highlight quality characteristic next sect explains technique used obtain designed methodology sect methodology presented along phase subsequently sect methodology validated case study finally conclusion future work discussed background isoiec isoiec among model standard developed recent year data quality assessment isoiec standard stand denes quality model set charac teristics considered evaluating data product property total fteen characteristic however performing data quality assessment focus inherent characteristic address situation regardless technological context approach enables conduct objective preciseevaluation characteristic accuracy degree data attribute correctly represent true value intended attribute concept event specic context completeness degree subject data associated entity value expected attribute related entity instance specic context consistency degree data attribute free contradiction coherent data specic context either among data regarding one entity across similar data comparable entity credibility degree data attribute regarded true believable user specic context credibility includes concept authenticity truthfulness origin attribution commitment currentness degree data attribute right age specic context hand isoiec standard present set metric measuring data quality standard applies data structure within system numerous property way measure example record completeness compliance minimum set essential feature representing identity registration system file completeness level agreement dataset data entity minimummaximum range record intended entity referential integrity level correspondence eld record related attribute another data relational database foreign key value eld present corresponding attribute different relational database referenced primary key value ofthe foreign key null galera brdq brdq methodology developed purpose resolving common problem related collection grouping validation business rule thecontext data quality management within organization methodology aim overcome challenge lack organizational agreement stated business rule absence explicit statment business rule integralpart organization internal approach data quality management brdq represents improvement certain existing methodology incorporates dedicated phase categorization verication business rule pertaining data quality characteristic implicated evaluation data quality categorization carried based data quality characteristic thatencompass data quality prerequisite methodology focus ensuring relevant business rule within orga nization identied captured comprehensively mechanism established validation effective implementation implementing method ology organization enhance ability ensure data quality maximize value business information however necessary highlight methodology specically focus internal data quality management system contrast approach presented work focus providing support gathering requirement evaluate anorganization something innovative compared evaluation methodology research method conduct rigorous approach research carried proposal methodology identication classication data requirement section present step followed based principle design science problem identication motivation numerous assessment certica tions conducted recent year ensure data quality identied one common challenge associated collection business rule organization seeking evaluation poor identication data rule entity either due incomplete nature imperfect collection lead decrease inthe accuracy evaluation result proper thorough evaluation con ducted primary motivation provide highly efcient methodology identifying classifying business rule based iso standard aiming signicantly reduce time required stakeholder minimize ambiguity much possible dene goal solution since lack appropriate business rule efcient evaluation often stem primarily stakeholder lack understanding time foundation solution develop methodology facilitates identication business rule comprehensible lightweight manner organization optimal way achieve functional solution methodology integrated methodology isoiec used certify data quality project dqbrk data quality business rule identication design development solution problem objective dened different phase designed related necessary step progress start evaluation identifying scope conclusion obtaining quantitative result data quality validation solution validation solution carried applying methodology evaluation organisation real context theanalysis result presented sect dqbrk methodology dqbrk methodology composed several phase provide support identify ing classifying business rule data quality evaluation process according iso standard furthermore seek facilitate script generation evaluationand support thereby establishing structured workow dqbrk follows similar structure brdq methodology term logic business rule identication capture methodology based premise business rule fundamental assessing data quality organiza tion however brdq focus internal data quality management systemdqbrk center around enabling third party may indepth knowledge internal system identify comprehend business rule evaluated data phase purpose description required input product expected output activity carried specied important note depending organizational context performing phase may benecessary although recommended instead phase considered necessary support different activity executed illustration depicting different phase dqbrk observed methodology overview phase dening scope evaluation purpose description main objective identify data element part data quality measurement evaluation process combining one multiple repository list element obtained form baseline workfigure provides detailed overview current phase input product organization data catalog documentation information system subject evaluation galera detail phase methodology output product clone data repository evaluation list entity evaluated list attribute evaluated support document evaluation different entity attribute evaluated tool technique used data lineage data dictionary data catalog formal informal meeting stakeholder activity identication organization data catalog prioritization data catalog selection data catalog evaluated quality assessment phase capturing business rule question purpose description main objective phase identify determine describe business rule dene data validity quantify extent repository complies rule improve management phase achieve better traceability reduce required time based theexperience various evaluation described decided develop closed questionnaire contains series question directed toward organization wish carry data quality evaluation effort made minimizethe number question limit possible answer much possible including binary option several case done avoid redundant question ensure question appropriate however openended question necessary fundamental obtaining sufcient context example question found phase methodology validation specically dqbrk data quality business rule identication similarly due different nature organization open section created data requirement rule classied within question naire question due specic domain introduced still necessary know question answered sufcient information beenobtained classify using approach data quality characteristic prop erties according iso model furthermore development phase rule validated identify possible error introduced clientorganization validation performed iteratively always super vision stakeholder figure provides detailed illustration development phase detail phase methodology input product clone data repository evaluated list entity evaluated list attribute evaluated support document entity attribute evaluated output product support document entity attribute evaluated including questionnaire question corresponding response business rule section additional requirement rule whenever necessary tool technique used questionnaire guide identication improvement capturing business rule guideline guide capturing business rule within data quality character istics list question guide capturing rule formal informal meeting stakeholder galera activity identication selection question asked depending context type evaluation validation additional requirement rule effective resolution question validation response phase classication business rule purpose description main objective phase shown classify identied rule requirement output product phase intodata quality characteristic according isoiec data quality property according isoiec detail phase methodology input product business rule section additional requirement rule whenever necessary output product document business rule grouped characteristic property necessary evaluation tool technique used guideline guide grouping business rule data quality characteristic property activity identication classication set rule classied characteristic identication classication set rule classied propertydqbrk data quality business rule identication phase script generation repository measurement purpose description main objective produce data requirement validation mechanism business rule necessary data quality measurement evaluation addition mechanism generated necessaryto execute obtain degree compliance data requirement identify strength weakness organization data repository figure provides detailed outline nal phase detail phase methodology input product document business rule grouped characteristic property section additional requirement rule whenever necessary clone data repository evaluation conducted output product validation script business rule support document evaluation result tool technique used future automatic script generation tool specic characteristic manual script generation guide activity implement business rule validation script annotation result subsequent evaluation environment validation order validate effectiveness usability presented methodology process measurement evaluation carried realworld contextfocusing nongovernmental organization approach allow collection galera empirical data support validity proposed methodology ability achieve desired result practical environment organization contains data various user study nationality assistance case study focus property record completeness complete ness referential integrity objective explore various example question format evaluate property applied implementation methodology carried rigorously following different phase detailedthroughout study order make validation reproducible static version repository clone measurement script document containing business rule obtained phase dening scope evaluation identifying organization data catalog analyzed prioritized assistance organization set table attribute selected evaluated quality assesment element identied priority determining data quality crucial proper functioning organization output product phase clone data repository cre ated provided accessed supporting document containing entity attribute evaluated generated document created tabularformat row table display different attribute entity case database table example expected result shown list attribute two different entity phase capturing business rule question entity attribute evaluated identied next step toidentify select question asked depending context type evaluation order capture business rule three question beenidentied ass mentioned property work two yesno questionsdqbrk data quality business rule identication related record completeness property completeness remaining question corresponding referential integrity property also booleantype case afrmative response additional detail must provided figure show question mentioned possible answer detail question identify business rule corresponding property assessed obtaining list question asked organization proceeded provide effective resolution question support supervision researcher involved work case need generate additional section additional rule necessary detail proper measurement property evaluated specied response received reso lution validated proceed next phase output process section question corresponding answer generated within evaluation support document shown fragment question answer corresponding question supporting document phase classication business rule thanks questionnaire business rule classied systematically reduc ing time required identifying categorizing requirement question orseries question associated specic property based isoiec isoiec ensures standardized efcient process classifying aligning rule relevant data quality property therefore identication classication business rule feature property carried way business rule document obtained bussiness rule grouped characteristic property table question figure show table document question must eld always contain value grouped completeness property value eld refer another attribute contained another entity organization rule allows easier reference galera question rated completeness integrity characteristic analysis enabling comprehensive understanding rule relates evaluated data quality property phase generation evaluation script phase necessary script implemented validate business rule later evaluation furthermore script executed example referential integrity personanacionalidades entity script generated provides detailed result shown image script result record referential integrity personanacionalidades table finally measurement result annotated subsequent evaluation supporting document based result different entity measured property evaluation carried figure provides example recording measurement resultsdqbrk data quality business rule identication example measurement result supporting document conclusion future development work present valuable contribution eld science introducing methodology identication business rule evaluation data qualityunlike existing methodology proposal stand focus enabling organization without prior knowledge identify classify business rule methodology designed work proven effective real project validating applicability usefulness practical context main contribution lie providing structured accessible guide collecting business rule facilitating data management analysis process organization methodology offer aninvaluable solution lacking experience eld enabling effectively progress identifying classifying business rule regarding future work project plan expand covered quality property identify business rule methodology connection rule identi cation support document automatic evaluation script generation program beingdeveloped within organization also planned furthermore effort underway enhance existing dashboard application provides clear visualization degree compliance rule based identied quality requirement whileapplying methodology proposed work acknowledgment research partially funded following project grant industrial doctorate ref din funded ministry science innovation university esedm project evaluation master data exploitation system ref funded european regional development fund feder program castillala mancha adagio alarcos data governance framework system generation ref sbply funded ministry education cul ture sport junta comunidades castilla mancha spain european regional development fund feder aetheruclm smart contextualised dataanalysis focused quality safety focused quality safety ministry science innovation innovation pidrbc reference batini cappiello francalanci maurino methodology data quality assessment improvement acm comput surv lee strong khan wang aimq methodology information quality assessment inf manage pipino lee wang data quality assessment communication acm heinrich hristova klier schiller szubartowicz requirement data quality metric galera caballero gualo rodrguez piattini data quality certication using isoiec industrial experience syst softw iso httpsisocomindexphpnormasisoiso accessed mar calabrese esponda pasini boracchia pesado gua para evaluar calidad datos basada isoiec xxv congreso argentino ciencias computacinpp iso httpsisocomindexphpenisostandardsiso accessed may isoiec system software engineering system software quality requirement evaluation square measurement data quality httpswwwiso orgstandardhtml accessed mar caballero gualo rodrguez piattini brdq methodology grouping business rule data quality decis syst seyffarth kuehnel maintaining business process compliance despite change decision support approach based process adaptation decis syst kumar anand domainindependent method detecting inconsistency sbvr based business rule formabs iso isoiec system software engineering system software quality geneva loshin enterprise knowledge management morgan kaufmann watt shankaranarayanan even data quality assessment context cognitive perspective decis support syst corea matthias towards inconsistency measurement business rule base pitching big fish elevating presentation communication skill software quality course miguel moralestrujilloband ismael caballero muozreja university canterbury christchurch new zealand miguelmoralescanterburyacnz castillala mancha ciudad real spain ismaelcaballerouclmes abstract work present software quality teaching experi ence based gamication experience meeting big fish lecturer student play dierent role shark tanklike situation lecturer big fish shark maintain plannedmeeting student harsh unexpected situation happen student presenting software process improvement proposal initial result shown eectiveness activity term ofengagement fun authenticity keywords gamication education gamebased learning pitching software process improvement communication skill introduction gamication proposes game thinking dynamic increase engage ment stimulate user active participation thus enhancing outcome introducing gamication educational context may benet student attentive ness understanding course material lower tension boost stu dent morale result using playful element learning environment promotes powerful learning experience develop knowledge skill andor ability case software engineering education gamication useful modeling specic behavior motivating student apply practice concept development endeavor however despite potential gamication education term motivating student study oer sound empirical evidence impact gamied application user engagement performance innovative exploratory paper present important contri bution meeting big fish gamied activity aim improve student learning experience software quality course big fish gamied activity integrates pitching game element present software pro ce improvement spi assignment student practice enhance condence communication presentation skill cthe author license springer nature fernandes ed moralestrujillo caballero muozreja remainder paper structured follows section describes relevant concept activity based course isdeveloped section describes big fish activity sect present discussion finally sect present conclusion future work background related work pitching shark tank pitching refers presenting product service potential investor convince viability value fund pitch beconcise engaging must highlight key feature productservice show deliver value pitching usually targeted preprepared sounding speech addressed potential investor accompanied visualelements slide demonstration promoted object action etc eective pitch requires clear communication eective storytelling show casing market opportunity addressing potential risk emphasizing valueand uniqueness proposal pitching encloses soft skill stu dent would benet communication yet received proper coverage scientic discourse shark tank reality television show participant pitch idea entrepreneurial funding entrepreneur pitch product service negotiate investment deal seek nancial support sharkspanel investor ass viability potential productservice following idea shark tank pitching gamied activity cre ated software quality fourthyear course help student develop andor improve communication presentation negotiation persuasion skill benet personally professionally related work developed haertel used shark tank improve creativity entrepreneurship aspect engineering stu dent found student tended avoid radical innovation riskseven playful atmosphere moore presented inventure challenge shark tankbased activity attempt deliver authentic experience introduce student engineering concluded eectively engagesstudents entrepreneurship invention course seng software process product quality seng software process product quality course introduces fun damental concept methodology technique related software quality throughout entire software development lifecycle taught univer sity canterbury seng elective course oered fourthyear soft ware engineering well computer science hons master student information system information technology course content beendesigned one author paper drawing upon experience inpitching big fish software quality course software industry business analyst developer tester project product manager seng pursues ten learning outcome los relevant paper following one apply analysis skill abstract devise quality problem aecting process product people software engineering hypothesize specic improvement make three eec tive ecient reliable plan evaluate form experience report organiza tional process product term quality attribute write compose explain software quality assurance sqa come assessment audit report plan supported oral synthesis todemonstrate eective communication skill report writing pre sentation course content topic presented course include introduction basic concept software quality review industry commonlyused quality standard model presentation several sqarelated tool technique core topic context paper quality software process comprehensive exploration obstacle encoun tered organization software product development strategy employed address spi initiative presented full descrip tion course consulted assessment course assessment split three item two assignment nal exam assignment student work team create spi proposal practical experience assign ment allows student reect current software engineering practice critically besides allows evaluate adapt technique methodology practice need assessment item address assignment specication released week course handed four week later marked feedback stu dent provided week opportunity improve spiproposal last week semester week team pitch spi proposal big fish activity completeness assignment related software product assessment student expected measure specic quality attribute product using isoiec standard assignment also developed team game meeting big fish activity context meeting big fish gamied activity student required pitch spi proposal game element integrated challenge moralestrujillo caballero muozreja point time constraint play money spi proposal developed team three four student part one course assignment seesect team act startup responding request proposal rfp launched big fish organization pitch last six minute student try convince big fish contract service team roleplay startup present proposal big fish team advisor lecturer performs big fish ceo panel advisor shark isformed three four postgrad student familiar activity asked act sharp brutal little patience shark shark play role cto cfo coo cmo optional addition thisseveral unexpected situation occur time student assessed handle proposal assessed term planning scope time eort specied completeness required element dened risk awareness feasibilityappropriateness spi doable given organization constraint objectivity measurable improvement dened metric quan tiable clarity presentation extra aspect chosen shark passion engagement innovation important mention student knowthat meeting ruthless fair always teachinginnovative controlled academic umbrella team assessed presentation everything say count team start meeting condence vote point represented colored ball goal keep many possible lose vote throughout meeting depending manage unexpected situation see activity setup nar make room familiar student aware would available projector computer wifi access chair table set week meeting student received email big fish personal assistant dear startup hope email nd well writing request meeting discus spi proposal meeting held date timeplease prepared everything ready ceo one hour available anticipate fruitful discussion upcoming meeting best regardsat point student know big fish busy person sure wont onehour meeting time constraint organization ample nancial resourcespitching big fish software quality course organization strict security policy include access physical virtual resource meeting date time headquarters organization regarding room arrangement chair table promote sense authority formality centrality big fish lead meeting chair placed along side table participant big fish sits head table facing participant givinga sense authority importance big fish surrounded shark something expected student name card placed seating position indicate student supposed sit meeting personalization team access projector wifi unexpected situation unexpected situation challenge randomly occur team meeting see table designed ass student capabil ity creative tackle solve problem situation based onreal case author paper experienced software project carried dierent industry meeting student face three unexpected situation related access building wifi connecting projector meeting student bombarded dicult malicious ill intentioned question shark like question team capabilitiesor high cost complexity proposal depending stu dent handle big fish shark decide many vote lose handled well student keep vote unexpectedsituations main learning moment activity reason lecturer anymore big fish provides feedback team individual managed give advice presentation nished shark decide distribute budget organization allocated project among team shark token representing play money allo cate team preference see team receives money kept least three condence vote win theproject activity result discussion data collection analysis meeting big fish part course activity since student enrolled course period around participated activity student option opt moralestrujillo caballero muozreja condence vote budget unexpected situation card participation activity weighs term course assessment item following completion activity student answer standardized questionnaire evaluate gamied aspect activity using point scale questionnaire result shown excellent result activity attractive average median suit student way learning content connected learned fun level challenge adequate student would recommend peer felt contributes learning questionnaire also includes section student asked select los believed addressed activity last section student provide free text opinion regarding participationexperience regarding los chosen student got respectively freetext opinionsfrom student presented next subsection upside downside important part activity fact objective make student live tense challenging learning experience aware since lecturer explained beforehand giving student opportunityto ask question nevertheless impediment enjoyable experience increased student engagement fun consistent ndings previous gamication study really fun nervewracking thank organizing wonderful event denitely liked whole setting people acting technicalpitching big fish software quality course table unexpected situation meeting entering headquarters one top richest people world immediately arrive team must verify identity showing trouble acceptable proof ofidentity sorted obstacle reached thoor stateoftheart building realize haveaccess wifi security policy strict slide cloud wait around min department grant access internet meeting one organization expert wise guy couple intervention realize attending meeting weakest spot exploitit criticizing arent using super duper modelstandard used many european organization huge benet whatwould dont know modelstandard ceo assistant enters room inform thecity council phone apology must take thatthank coming took min allocated meeting great presentation ceo authentically interested solution right hand whispering ear get rid obstacle ceo asks would know capable knowledge team implement proposal successfully however given small size startup short history theceo asks threefour capable carry millionaire project would advisor dissect saying fun challenge enjoyed challenge fast hard nature taking meeting authenticity unexpected situation brings realism learning experience student much appreciated unexpected scenario made exercise challenging made think potential realworld problem good way prepare kind question may face industry awesome experience one personalized fun experience ive ever standard lecture moralestrujillo caballero muozreja educational side memory uni ill remember really enjoyed meeting big negative side type activity may suitable learning style potential cause student deciding participate although every year participation rate around theenrolled student far negative comment received worth mentioning participant come prepared taken activity seriously student participated main issue mention isthe lack detail provided didnt like unexplained activity hard prepare pitch little documentation ithowever one activity goal student capable anticipat ing potential challenge change build readiness mindset enables face ambiguous unpredictable situation condence overall positive feedback observed eects surpassed potential negative one conclusion future work educational context game element shown important benet student attitude motivation interest improving learning experience whole pitching work case assignment contributed development presentation communication ability student enrolled software quality course meeting big fish combine pitching spi knowledge activity exhibited afun enjoyable meaningful learning experience student future work expect formalize activity step replicated obtain feedback educator reference ambrosio burghardt hecht authentic engineering design ass ment asee virtual annual conference content access balakhonskaya balakhonsky pitching communication technol ogy pitch tool investor relation digital environment communication strategy digital society seminar ieee csse university canterbury software process product qual ity httpswwwcanterburyacnzcourseinfogetcoursedetailsaspx coursesengoccurrencescyear haertel terkowsky may shark tank experience engineering student learn become entrepreneur asee annual conference exposition moore newton baskett inventure challenge inspiring stem learning invention entrepreneurship int eng educ moralestrujillo learning software quality assurance brick ieeeacm international conference software engineering softwareengineering education training icseseet ieee pitching big fish software quality course pedreira garca brisaboa piattini gamication software engineeringa systematic mapping inf softw technol pesare roselli corriero rossano gamebased learning gami cation promote engagement motivation medical learning context smart learn environ souza mrda veado moreira figueiredo costa systematic mapping study gamerelated method software engineering education inf softw technol wortham using familiar game human factor engineering course proceeding iie annual conference institute industrial system engineer iise quantum service generation deployment process qualityoriented approach jaime alvaradovalienteb javier romero alvareza moises rodr guez ignacio garc arodr guez enrique moguel jose garciaalonso juan murillo university extremadura quercus software engineering group aceres spain jaimeavjromerojgaralo unexes castillala mancha alarcos research group ciudad real spain adiazaqclabes moisesrodriguezignaciogrodriguez uclmes cenitscomputaex aceres spain enriqueunexes juanmurillocenitses abstract quantum computing technology revolutionizing cur rent world enabling creation advanced application various eld healthcare economics however industry carry mass production quantum software crucial ensure adequate level quality however quantum technology movetowards practical application face signicant challenge depend ing heavily specic platform developer diculty creating quan tum application run dierent quantum provider additionally lack mature tool make creation quantum application slow complex process requires specialized knowledge quan tum mechanic computer science quality quantumservices compromised article address need ensure adequate level quality quantum software proposes process allows improvement current generation deployment quantum service evaluating quality created quantum service using extension openapi specication sonarqube tool keywords quantum computing quantum service quantum software quality process improvement introduction quantum computing paradigm utilizes principle quantum mechanic process information new form computing promise tremendous computational power enabling solution problem remain unsolved classical computing reasonable amount timesuch class problem called bqp result quantum computing cthe author license springer nature fernandes ed qualityoriented quantum service generation deployment process experienced great surge popularity major technology company amazon ibm google investing heavily development newquantum machine oering user cloud platform quantum computer cloud platform provided various vendor reminiscent classical computing serviceoriented architecturesthis mean quantum computing utilized classicalquantum hybrid architecture technology oer resource form service developer create quality quantum service hybrid architecture tool technique help obtain desired quality level needed however lack suitable software engineering technique quantum service pose several challenge include low abstraction level developer work well lack mechanism inte gration deployment quality control developed software order address problem alternative emerging aim close gap classical process quantum computing context one relevant aspect software development process including quantum software quality goal quantum ser vice development process must ensure service reliable scalablesecure ecient moreover aim ensure quantum service meet required standard quality used realworld application therefore controlling quality new quantum system crucial order toensure function correctly meet required level eectiveness eciency process operation well expectation dierent stakeholder quality system place crucial meeting quality standard government regulation industry standard traditional computing even vital quantum computing help reduce cost identify correct problem early improve user experience increase reliability product organization addi tion help protect information preventing data information security compromised among many key point therefore controlling improving quality new quantum system essential order article proposes combination extension openapi specication code generator instance sonarqube element integrated continuous deployment process github action address challenge eectively need answer critical ques tions including needed ensure adequate level quality quantum software improve upon existing process generating deploying highquality quantum service furthermore metric used evaluate whether given set meet required standard propose approach using openapi specication combined sonarqube integration lead towards improved generationdeployment httpsdocssonarqubeorglatest httpsdocsgithubcomenactions alvaradovaliente process allowing developer obtain desired standard respect reli ability scalability also hypothesize combination would help bridgegaps classicalquantum hybrid architecture allowing technolo gy oer resource serviceoriented architecture present rest paper organized follows sect analyzes background presented work discus relevant related work section present proposal automatic generation deployment quantum service supervision quality service section includes result evaluation proposed method finally sect detail conclusion future work background support tool software design proved way developer improve quality produced software however term quantumsoftware still severe lack kind tool consequently absence tool impedes advancement maturation quantum software development making challenging meet desired standard qualityand reliability rapidly evolving eld currently work weder propose quantum software developmentwork lifecycle comprising multiple phase systematically apply software engineering principle enhance quality reusability quantum application lifecycle ensures quality quantum software throughout development stage initial requirement analysis implementation however despite grounded software engineering best practice lack conformity norm quality standard maypose challenge limitation implementing following lifecycle practice assessment software quality usually carried testing review static dynamic analysis among quality assurance technique usually involves measurement evaluation software based dierent attribute functionality usability eciency etc past decadesmultiple model standard related classical software quality developed including isoiec isoiec highlighted addition iso standard also known squaresoftware product quality requirement evaluation widely used organization worldwide ass improve certify quality classical software within standard isoiec division denes quality model software product consisting quality characteristic set subcharacteristics related httpswwwisoorgstandardhtml httpswwwitcisqorgstandards httpsisocomindexphpenisostandards httpsisocomindexphpenisostandardsiso qualityoriented quantum service generation deployment process order determine quality level software product aforementioned characteristic series metric used objectivemeasures allow measurement evaluation control software quality however currently consensus model measurement evaluation quantum software quality metric level beensome recent publication attempt measure evaluate quantum circuit still metric available determine element controlled quantum code carry measurement classical quality metric numer ous tool available assist software development team identifying poten tial area improvement tool include static code analyzer analyze source code software quality issue automated testing tool automate accelerate software testing process per formance analysis tool measure performance software dierent situation condition architecture analysis tool identify potential quality deciencies related scalability maintainability portability among others among quality measurement tool worth mentioning sonarqube one widely used source code analysis platform thesoftware development evaluation community sonarqube provides dierent feature detect potential issue improvement additionally sonarqube support multiple programming language including currently used abasis quantum program development allows inclusion analysis continuous integration deployment process intended project process continuous integration deployment based openapi generation quantum service scientic perspec tive openapi facilitates seamless exchange information across diverse software system establishing shared vocabulary describe functionality apis facilitates integration data multiple source research project application allows developer dene doc ument service clear standardized way adapting tool work quantum software combine sonarqube generation quality metric summary integrating quality measurement tool process devel oping quantum service essential ensure quality eciency security service well ensure interoperability reuse dierent context application generation supervision quantum service section address full process generation deployment valida tion quantum service conceptualization idea evaluation system performance alvaradovaliente openapi specication service generation fully operational service developer often add business logic service chosen programming language however understanding servicescharacteristics documentation source code alone challenging nev ertheless using openapi specication service parameter dened using standard interface languageindependent restfulapis way based openapi specication source code structure generated dierent programming language facilitating development service study openapi specication applied similarly used creating classical service aim dening generatingquantum service purpose openapi code generator modied allows generating server application openapi speci cation generator adapted support process dening andcreating quantum service creating extension openapi specica tion includes custom property extension code generator allows dening generating code quantum application solution process dening quantum service stan dardized made possible automatically generate quantum service api specication quantum circuit workow continuous deployment continuous deployment implemented workow integrates automatic code generation quantum service dierent quantum machine provider deployment container ready consumed user implementation github code management platform tool called github action utilized enables developer specify action perform whenever change made repository dening workow developer outline sequence step execute change made process shown start process developer creates one quantum circuit using circuit generation tool open quirk directly writing code quantum circuit python step primary programming language quantum computing developed ibm qiskit subsequently developer modies yaml contains extension openapi specication endpoint service step including location python code encapsulated url designed circuit open quirk extension openapi specication designed allow developer include url quantum circuit designed httpsopenapigeneratortech httpsalgassertcomquirk httpsqiskitorg qualityoriented quantum service generation deployment process workow continuous deployment quantum service encapsulated service provider service generated machine executed number shotstimes circuit executed machine obtain result point process executing github action dened repositorybegins developer design work end specically pro ce automatic generation deployment service start developer performs commit repository step ver ied repository specication correctly formatted generating service code updated version openapi code generator step code generated correctly service automaticallydeployed container step done request api deployed aws server includes url yaml containing spec ication credential congure execution provider api receives call github action generates encapsulates generated code container step bwhich deployed exposing onthe free port step finally return developer url generated service hosted visible end workow execution step continuous deployment approach github action intended help developer automate timeconsuming task reduce time required release new version software automatically deploy servicesin container making easier user access addition explained improves code quality help prevent bug vulnera bilities help improve eciency ensure quality quantum softwaredevelopment httpsgithubcomjavierromequantumdeployment alvaradovaliente sonarqube quality supervision order evaluate quality code identify potential problem vulnerability connection sonarqube included process asshown workow sonarqube widely recognized tool industry research static code analysis software quality evaluation leveraging sonarqube parseran advantage gained integrating analysis quantum metric established development analysis environment sonarqube oers several key advantage integration existing workow specicplugin evaluating quantum metric ease conguration adapt project need additionally plugin allows easy integration quantum software quality measurement initiative making theproposal open accessible aim provide quality metric identify problem code able solve end workow specically thegeneration deployment service generates le contain code corresponding circuit step le stored dif ferent repository using another github action automaticallyanalyzed sonarqube tool step integration github action sonarqube allows perform automatic analysis circuit code commit orpull request receive detailed report quality code potential security issue step help ensure code implemented production meet required quality securitystandards step integration congure sonarqube server mentioned eld software quality analysis sonarqube tool established one widely used community however given lack clear denition metric quantum software tool yet specic measurement system type software toaddress issue collaboration accredited laboratory aqclab plugin designed developed extends functionality sonar qube measurement quantum metric named plugin relies parser already sonarqube environment creates store record database obtain value metric contains furthermore plugin compatible qiskit syntaxthe quantum language developed ibmwhich allows integration continuous development integration deployment cycle thanks possible carry measurement quantum source code allow developer team detect correct quality problem quantum software realtime near future sonarqube corresponding plugin congured next step add code analysis task github action workow httpswwwaqclabes qualityoriented quantum service generation deployment process quantum metric plugin integrated sonarqube environment purpose sonarqube action available github action marketplace used task automatically executes code analysis every time commit orpull request made repository order obtain analysis result realtime mainly implemented qiskit plugin metric quality eld quantum software lack quality model metric forevaluation identied response issue developed initial proposal metric quantum code based reference classical quantum work reference detail metric implemented plugin focus ensuring software maintainability specically emphasis analyzability although still pending pub lication validity relevance metric eectively measure evaluate quantum software ability analyzed understood term structure functionality ensured contributes facilitating maintenance future improvement quantum software taking account mentioned article describes rened metric aim improving comprehensibility process ofmeasuring quality quantum software although reference made external publication reference obtain detail metric article focus providing overview implementation application specic context quantum software evaluation allows reader become familiar relevant metric understand used measure evaluate quality quantum software eectively circuit size larger code complex understand maintain therefore study quality property necessary analyze metric width depth quantum circuit width dened maximumnumber qubits involved simultaneous operation hand depth quantum circuit refers number gate layer required complete algorithm alvaradovaliente complexity gate operation knowing number singlequbit multiqubit gate quantum circuitis crucial evaluate analyzability quantity type gate applied impact calculation complexity ability analyze circuit behav ior furthermore understanding quantum architecture help identify potential issue optimize circuit eciency number measurement operation greater number measurement performed throughout quantumcode easier understand well detect failure table show quality metric necessary calculating property table metric number measurement metric description number qubits least one measure operation perc percentage measured qubits number initialization reset operation property analyzes number initialization operation initial ize exible number qubits arbitrary state number reset operation send qubits state middle specic computation operation gate unitary operation therefore reversible evaluation section evaluation quantum quality metric carried recognized quantum algorithm specically detailed measurement conducted determine level analyzability quantum algorithm achievethis goal sonarqube environment metric plugin used allow rigorous measurement result obtained measurement serve future reference guide continuous improvement quantum algorithm term performance eectiveness solving complex problem various application area process carried consists three main phase firstly set quantum algorithm selected subsequently necessary service execut ing algorithm appropriate environment generated deployedfinally detailed measurement relevant quantum metric regarding eciency selected algorithm carried study subject quantum algorithm serviced order validate ecacy proposal test carried dierent implementation quantum algorithm based quantum circuitsqualityoriented quantum service generation deployment process algorithm chosen cover wide variety application including quantumclassical hybrid algorithm purely quantum one areavailable public repository briey described bernsteinvazirani algorithm algorithm designed solve specic problem boolean function bit given bit composing input produce value need determined bernsteinvazirani algorithm complexity mean solve problem described time proportional number bit reason present signicant advantage equiv alent classical algorithm complexity deutschjozsa algorithm algorithm designed solve specic problem boolean function two type constant balanced deutschjozsa algorithm hasa complexity mean capable solving aforementioned problem single step grovers algorithm algorithm allows searching unsorted database element time instead time required classical algorithm grovers algorithmsee characterized using quantum superposi tion search optimal solution database also allows applied cryptography optimization representation grovers algorithm qiskit phase estimation algorithm main objective quantum algorithm determine phase quan tum state specic basis work applying successive controlled power nqubit quantum state using quantum fourier transform deter mine phase state complexity phase estimation algorithm see depends number qubits used input quantum state resulting exponential order complexity number qubits shors algorithm quantum algorithm designed factorize large integer polynomial time relies ability qubits quantum software processinformation simultaneously multiple state httpsbitbucketorgspilabquantumcircuitscode alvaradovaliente representation phase estimation algorithm qiskit simon algorithm algorithm focused nding function periodic unknown period time complexity number bit required represent input quantum teleportation algorithm quantum protocol allows transfer quantum state qubit two party without original qubit physically moving one place another algorithm us pair entangled qubits trans mit state original qubit however requires classical communicationbetween two party construct state original qubit desti nation qubit complexity dicult measure depends number qubits resource used generate maintain quantum entanglement quantum entanglement expensive resource practice complexity algorithm availability although general considered fairly ecient algorithm depends specicimplementation algorithm quantum system used tsp algorithm algorithm present possible optimal way solve traveling salesman problem using quantum property quantum system ofthe quantum fourier transform tsp algorithm requires city represented qubits thus able make quantum entanglement dierent qubits solution complexity polynomial time complexity compared classical algorithm exponential complexity result previously described algorithm implemented qiskit using open quirk circuit generation tool using implementation already available therefore total number generated quantum service generated service deployed correctly resulted deployment failure based analysis deployment failure determined cause lack consideration translation pro ce certain gate phase gate problem therefore lie thedeployment process fact certain gate type con sidered code generator address issue working new version generator evaluating quantum algorithm dened inqualityoriented quantum service generation deployment process chapter summary resulting value obtained relevant quantum metric presented table table summary relevant result obtained metric measuring algorithm algorithm environment metric width depth qreset bernsteinvazinari qiskit quirk deutschjozsal qiskit quirk grover qiskit quirk phase estimation qiskit quirk shor qiskit quirk simon qiskit quirk teleportation qiskit quirk tsp qiskit quirk general result obtained algorithm suggest imple menting algorithm quirk simpler le complex compared imple mentation qiskit however important note algorithm isdierent usefulness complexity vary depending problem solve specic characteristic algorithm case bernsteinvazirani algorithm clear advantage term complexity implementing algorithm quirk suggesting similar problem quirk could suitable option hand deutschjozsa algorithm lower complexity also observed theimplementation quirk suggesting tool may suitable solving specic problem grover algorithm although result term circuit width similar implementation signicant dierence observed measurement end algorithm dierence important depending problem solved data searched finally case phase estimation algorithm result obtained allow direct comparison complexity two implementation due dierences parameter used however result suggest implementation algorithm tool suitable useful solving problem related determination phase quantum state alvaradovaliente table ranking quantum algorithm based complexity gate algorithm environment metric phase estimation qiskit quirk shor qiskit quirk simon qiskit quirk deutschjozsal qiskit quirk bernsteinvazinari qiskit quirk teleportation qiskit quirk tsp qiskit quirk grover qiskit quirk based measurement proceed analyze compare measured algorithm based complexity singlequbit multi qubit gate resulting ranking shown table display algo rithms ordered highest lowest quantum gate complexity evidence phase estimation algorithm see shors algorithm would complex analyze due large number ofmultiqubit gate posse grovers algorithm see would simplest single multiqubit gate despite seven single qubit gate still early obtain data evaluation futurework metric allow obtain quality value based quantum model conclusion future work paper presented solution development quan tum service using technique method classical service engineering purpose proposed standardized way dening quantum service using openapi specication shown generatethe source code service specication quantum circuit addition developed workow continuous deployment service docker container using github action toolqualityoriented quantum service generation deployment process finally extended process incorporating sonarqube tool along specic plugin measure quality generated quantum service detect possible security issue integration process developer perform automatic code analysis receive detailed report code quality potential security issue realtime help ensure thatthe code deployed production meet required quality security standard way application environment made possible positively evaluate source code widely used algorithmsin quantum sector important step validation operation work also set basis carrying exhaustive quality evaluation future therefore hope facilitate transitionof classical service developer quantum service development promote advancement emerging area technology although still much done eld result obtained date encourage continue working line research improve quality quantum software thus several line future work beenidentied advance development evaluation quantum service since evident still clear standard evaluation quantum software quality specically line work include dening newmetrics related security evaluation service measuring performance term speed throughput expanding test coverage addition analysis testing tool included cover important aspect quantumservice development security scalability eciency acknowledgment work part grant pidobc pidobc funded mcinaei byerdf way making europe qsalud project exp mig line action center technological development innovation cdti ministry economy digital transformation ofthe government spain call quantum enia project euro pean union recovery transformation resilience plan nextgener ationeu framework agenda espa digital qsm project quality quantum software model expte nanced junta comunidades castillala mancha feder fund reference aaronson bqp polynomial hierarchy proceeding annual acm symposium theory computing october macquarrie simon simmons maine emerging commercial landscape quantum computing nat rev phys rojo valencia berrocal moguel garc aalonso murillo trial tribulation developing hybrid quantumclassical microservices sys tems arxiv ab moguel rojo valencia berrocal garciaalonso murillo quantum serviceoriented computing current landscape challenge softw alvaradovaliente akbar khan mahmood quantum software engineering new genre computing november garciaalonso rojo valencia moguel berrocal murillo quantum software service quantum api gateway ieee internet comput verdugo rodr guez piattini software quality issue quantum infor mation system qset qce zhao quantum software engineering landscape horizon arxiv preprint arxiv mishra otaiwi devops software quality systematic mapping com put sci rev piattini serrano perezcastillo petersen hevia toward quantum software engineering prof weder barzen leymann vietz quantum software development lifecycle serrano erezcastillo piattini ed quantum soft ware engineering springer cham rodr guez pedreira fern andez certicaci mantenibilidad del producto software caso actico revista latinoamericana ingenier software cruz piattini towards set metric form quantum circuit standability rodr guez piattini ebert software verication validation tech nologies tool ieee softw romero alvarez alvaradovaliente moguel garc aalonso murillo using open api development hybrid classicalquantum servicesin serviceoriented computingicsoc workshop gemeinhardt garmendia wimmer towards modeldriven quantum software engineering ieeeacm international workshop quantumsoftware engineering qse ieee schwichtenberg gerth engels open api semantic specica tions code adapter ieee international conference web servicesicws ieee rodr guez piattini towards set metric hybrid quan tumclassical system maintainability jucs submitted pending publicationexternal dependency software development ale hosryband nicolas anquetil univ lille inria cnrs centrale lille umr cristal lille france alesshosrynicolasanquetilinriafr abstract successful software requires constant modications guar antee continuous proper functioning application developersneed understand well particularly accurate map dependency part modifying however dependency easily identied example androidapplication dependency java source code xml part materialized generated java class call dependency external introduced someagent external source code top categorization depen dencies dened literature dene restriction external dependency allow verify source code identify possi ble aws created common approach relying reusable pattern search container entity part dependency implemented prototype validate two dierent projectsfrom github developed using dierent framework keywords external dependency cross language multilanguage multitier introduction repeated modications necessary successful software cycle mod ications known software evolution performed developer tool refactoring tool without enough knowledge application mainte nance lead decreased software quality knowledge required involves identifying incoming outgoing dependency software artifact bemodied dene dependency need one artifact rely another artifact order fully operate expected developer likely miss external dependency explicit dependency introduce bug soft ware rajlich call hidden dependency data dependency two module readily apparent source code dependency considered design fault interested dependency cthe author license springer nature fernandes ed hosry anquetil introduced external tool agent like android gwtj contrary denition dependency inevitable thereforenot design fault call external dependency dependency two artifact created external agent often two dependent artifact two dierent source le external refers fact thatthe dependency introduced external agent fact arti fact external example gui framework like javafx oer widget like button callback widget setonactioneventhandler dependency button handler clear source code one know javafx work handled externally artifact dened example external agent framework working variety programming language suited dierent objective building user inter face handling logic querying database framework allow dierent project collaborate example clientserver multitier application found clear unique denition literature hidden dependency thats introduce notion external depen dency also available tool consider specic type exter nal dependency specic context majority focus identifying dependency ignoring perspective like detecting error due missing dependency excessive dependency result following point outline strategy paper detect possible type external dependency built top earlier work hecht list paper type external dependency found previous work addition exception list commonality found lead single approach external dependency detection explain restriction commonality following type lead detection error validate approach tool work using common search pat tern experimenting implementation two application developed two dierent framework paper structured follows sect list previous work literature section list dierent category external dependency list cardinality found one tool adonis presented sect followed two experiment result sect finally end conclusion sect google web toolkit gwtprojectorg java platform enterprise edition oraclecomjavatechnologiesappmodelhtml open database connectivity wikipediaorgwikiopendatabaseconnectivity external dependency software development related work literature many solution exist analyzing dierent type external dependency present dierent publication found proposing classication scheme existing tool rajlich discussing hidden dependency deni tion class data dependency readily apparent source code dierent discussing paper dejee developed shatnawi able generate automated analysis jee solution order identify dependency call graph given jee application using kdm metamodel static analysis build kdm model software match xml artifact throughrules lexical matching babelref tool developed nguyen detects automatically dependency generated client artifact html javascriptand generated server artifact php relies dynamic analysis single treebased structure called dmodel using object matching edgeminer tool developed yinzhi automatically detect callback android framework application whether created java source code analysis performed statically source code return list callback identied using object matching example whencallbacks introduced implemented java interface author also provided dierent method implementing callback using xml resource android application although strategy address detection hecht developed another approach detects dynamically dependency established jee application using codied rule work found aim generic approach considering dierent type dependency callback multilanguage multitiers still jee framework polychniatis proposed static method detecting crosslanguage link based matching lexically common token two possibly depen dent module detection algorithm followed applying speciclters ltering frequent token omitting onecharacter token grichi made study java native interface jni open source multilanguage system identify dependency java cusing static multilanguage dependency analyzer smlda detect static crosslanguage link historical multilanguage dependency analyzer mlda based software cochanges identify link could detectedstatically gendemog tool developed pfeier wsowski allows specifying intercomponent dependency pattern statically artifact heterogeneous system tool relies parsing language querying source code hosry anquetil object time retrieving possible dependency dierent artifact mayer schroeder created generic approach understanding ana lyzing refactoring crosslanguage code directly specifying exploiting statically semantic link multilanguage program tool xll developed using qvtrelations qvtr set rule crosslanguage link per language dened relation inside transformation block parsing source code introduces time idea crosslanguage linkcorrectness dsketch tool created cossette walker used developer specify pattern match block code programming language usinglexical matching identifying artifact dsketch start looking statically possible link language artifact following set step predened author sotovalero suggested new automatic approach identify third party java dependency statically maven project remove unneeded classesrepackage used class dierent dependency regenerate xml conguration refer new dependency objective app roach create minimum project binary contains code requiredfor project eliminates bloated dependency introduce notion dependency correctness incorrectness case bloated dependency kempt introduced approach could applicable enhance refactoring crosslanguage link java groovy approach completely static relies searching source code object groovyand java easily interact order accelerate search ing engine author propose ltering class example method call executed creating hierarchy scope starting second searchfollowing method inside limiting hierarchical scope categorization tool classify presented work dierent category summarized table dependency type many paper considering dependency existing incrosslanguage application like java source code xml conguration multitier like client application server one cal lbacks external library generated le like class android le generated jee html javascript generated php analysis saw static dynamic analysis could used tool completion include table although already said consider dierent type dependencyexternal dependency software development matching strategy two dierent strategy used object matching work model application look specic object themodel lexical matching work directly source text java xml engine finally approach based user dened rule identify dependency others automatically discover table existing approach dependency type name dependency type analysis matching strategy engine rajlich data dependency static object rule edgeminer callback static object automatic dsketch crosslanguage static object rule grichi crosslanguage static lexical rule hecht alladynamic object rule kempf crosslanguage static object rule xll crosslanguage static object rule babelref mtiersbg cdynamic object rule gendemog crosslanguage static object rule polychniatis crosslanguage static lexical automatic dejee crosslanguage staticdyn lexical automatic sotovalero crosslanguage static object automatic amultitiers generated le callback crosslanguage bmultitiers cgenerated le see one paper considers multiple dependency type hecht crosslanguage multitiers callback generated le also two paper pfeier wsowski sotovalero consider depen dency correctness identifying dependency exist addition ally found approach generic others work specic language framework structuring domain reviewed literature dependency introduced agent external source code discus indepth dierent category external dependency introduced preceding section also discus dependency correctness external dependency detection tool help understanding software also pointing possible aws hosry anquetil categorization dierent kind external dependency exist software artifact written dierent language tier need interact crosslanguage dependency artifact written dierent language example gwt framework xml used dene java used handle behavior dependencybetween java cxml appears java code annotation asuifield uihandler change aects xml artifact developer must apply parallel change dependent javaartifacts otherwise dependency broken application might fail runtime seems kind external dependency studied see table dependency may dicult developer detect imply good understanding framework used example android also express gui xml behavior java code dependency materialized way example arenot gui crosslanguage dependency found sql query string reference table column external database multitiers dependency appear application distributed architec ture example access data one database server thebusiness logic run application server presentation logic deployed web server user interface run web browser thus call established client server application using java rmithe client program must aware structure interface extend javarmiremote order invoke method make successful call server tier call tier depend communication framework used yet change one tier could require parallel update second callback dependency often used library allow user get back control library element example javafx graphical library button widget give back control application upon enduser interaction setonactioneventhandler callback kempf mention android framework framework dierent set callback must known adequately identify thedependencies file generation dependency appear framework tool generates additional le predened conguration le parsed deployment time able generate additional component linked existing one project dependency hidden project deployed executed analysis phase developer analysis tool may aware existence dependency may accompanied kind example android generates rclass allows link java code xml artifact crosslanguage dependency context jee hecht dynamic analysis detect file generation dependenciesexternal dependency software development documentation dependency exist documentation refers source code example javadoc special annotation refer toclasses method parameter refactorings able detect modify comment artifact renamed dependency might considered le critical dont aect behavior theapplication yet important readability understandability source code case external agent introducing external dependency might considered human reader noticed category mutually actually frequently coexistent saw example generated dependency crosslanguage dependency multitier dependency often come callback dependency allow one tier answer event another tier dependency correctness dependency exists two artifact entity call reference resource following pfeier wsowski denitions resource entity fragment code introduces identiable object concept etc reference entity location code relates resource entity denitions need generic dealing solely source code xml le documentation mostly restrict external dependency involve source code although sometimes also consider dependency cs specications html document typically considered source code work cited sect focus identifying external depen dencies help fully understand application preserve quality modied source code saw sotovalero went one step considering correctness dependency also pfeier wsowski state dependency always manytoone reference entity resource entity issue correctness important allows checking possibly preserving quality application idea cardinality manytoone obvious candidate express possible restriction external depen dencies however although manytoone frequent found statement pfeier wsowski incorrect case external dependency manytoone consider cardinality external dependency independently reference side resource side resource side resource entity might mandatory optional mandatory common case resource entity referenced must exist error compilation execution time call key hosry anquetil optional le common example found html tag specic div considered resource entity cs reference depend non existent html tag javascript function could similarly look optional existence given node dom html page reference side reference entity mandatory optional single multiple multiple common case resource entity refer enced multiple reference entity single specic case orm one object referring element dened database optional time reference entity optional example one may possible callback oered library mandatory case reference entity mandatory absence often produce compilation execution error still denotes lack understanding framework usedin worst case lack understanding circumvented developer needlessly complex nonstandard construction source code cardinality external dependency xed framework con sidered stating cardinality external dependency allows tool identify dependency help analyze application also verify help discover aws see example sect aws propose two main category awserrors excessive dependency characterize resource entity cre ated never referred multitier application case many service declared server side never used client side possible extension used client appli cation old code ceased used dead service possiblecases developer made mistake reference entity point wrong similar resource entity sotovalero call bloated dependency removing unused java class imported jar le missing dependency characterize reference entity referring resource entity exist dependency uncommon since application run properly resource available dependency higher chance existing case html cs comment case would result wrongunappealingrendering web application misleading comment note wrong web page rendering lead unusable web application case object relational mapping wikipediaorgwikiobjectrelationalmapping external dependency software development external dependency detection section explains implement generic external dependency detec tor decompose problem two subproblems allows develop small library reusable pattern give general architecture solution requirement going back categorization work proposed sect want generic solution allows identify dependency following property dependency type limitation interested external dependency coming multitier programming crosslanguage programming gen eration le installation process library making callback matching strategy object matching strategy model appli cation allows identify complex structure lexical matching example searching method class implementing given interface carrying given annotation many publication usedit however building model application may complex task example le commonly used programming language generic parser symbol resolver available case lexical matchingis simpler solution fast exible implement allow solution taking advantage whatever tool already available given language engine publication propose automatic solution able discover dependency without user specifying look theseare specic one given framework except polychniatis produce many false positive prefer rulebased engine specify framework look dependency preferred solution domain see table analysis software analysis approach one static dynamic analysis static approach usually favored easier apply across various programming language language across appli cation context solution toofile generation dependency covered dynamically hecht could limitation approach dependency type decomposing problem simplify implementation generic solution decompose depen dency identication problem two part first look container soft ware artifact may contain reference entity resource entity contain er usually large artifact entire second within potentially hosry anquetil interesting container look entity either reference enti tie resource entity example reference container gwtframework could java class contains annotation uifield uihandler annotation used gwt framework establish link java xml decomposition help specifying rule using lexical matching limit container written single language like java con tainer xml container etc simplies work searching entitiesin container note may lead nonobvious situation sql string inside java comment inside source code considered dierent container language may veryimportant lexical matching rule key object matching rule based model would require sql comment model search literature many approach search kind container declaring specic search pattern discovering heuristic thus kempt propose ltering container may contain dependency accelerate research two kind container reference container resource con tainers gwt example java class containing annotation reference container resource container entire xml describing gui within container apply matching pattern entity involved external dependency gwt example inside ref erence container looking specic attribute method carryingthe gwt annotation reusable pattern decomposing problem container entity allows reusable pattern example searching xml element according one attribute name done whether xml conguration oran xml layout would therefore applicable external dependency detection jee gwt given language pattern used container entity detec tion pattern expressed declaratively given object type property form keyvalue pair consider pattern descrip tion nding annotation java model type object werelooking inside famixjavamodel order extract annotation useallannotationtypes property iii pattern accepts annotation name parameter associated value property famixjavaannotationtype search annotation interested uifield pattern return container name previously specied attribute found using famixjavaattribute parenttype property also expressed declaratively pattern using temporary variable classobjectexternal dependency software development especially important object matching pattern need build model source code working decomposition reusablepatterns allow easily add new framework adonis solution implemented tool called adonis httpsgithubcom alesshosryadonis first adonis take input two element code ana lyze framework identication gwt rmi framework must known tool programming language importer want object matching detection rule reference container resource contain er reference entity resource entity follows denition ofexternal dependency one need know usage rule framework able identify dependency introduces detection rule given framework based reusable pattern considered programminglanguage say pattern detect given java class used rule gwt rmi framework framework based java programming language second adonis oers two engine lexical object based matching depending rule describing framework analyze selection engine depends availability metamodels importer generatesource code model third adonis applies rule framework identify reference resource containersentities map reference entity resource entity leading generation external dependency implicit framework considering restriction dened sect identify possible aws validation validate approach two project taken github objective isto evaluate whether approach identify external dependency work dierent type dependency iii reuse pattern across framework detect aws missing excessive dependency validation setup interested approach adapted dierent framework possible dierent kind dependency type crosslanguage multitier etc practicality reason chose two framework involving lan guages java xml thanks moose platform already java importer metamodel easily express object matching pattern building xml model easy since many library parse xml hosry anquetil crosslanguage experiment crosslanguage example focus gwt framework develop web application using combination javaand xml gwt java artifact class attribute method linked widget described xml le annotation uifield anduihandler example listing show attribute line referring window dened listing xml element line similarly java method line linked button widget line xml gwt requires java xml le located folderand name without respective extension java andxml listing gwt java public classapplicationsettingsdialog implement editor applicationsettings uifield protected window window uihandler savebutton public voidonloginclicked selectevent event window hide listing gwt xml gxtwindow uield window pixelsize modal true headingtext global setting focuswidget savebutton gxtbutton buttontextbutton uield savebutton textsave gxtbutton gxtwindow cardinality external dependency manytoone several java association refer xml attribute xml attribute resource entity mandatory java one reference entity optional javapart required refer xml widget manually counted number reference container java class resource container xmlles reference entity java code resource entity dened xml le external dependency found number reference entity matching resource entity multitier experiment multitier example focus rmi framework also based java rmi allows build distributed applica tions client part call server method running dierent jvm java interface needed theremoteinterface example extends javarmiremote declares method throw javarmiremoteexception remote method invocationexternal dependency software development server side class theserverclass implement interface denes service method line listing instance class registered rmi registry line listing listing rmi server code public class theserverclass implement theremoteinterface registry registry locateregistrycreateregistryport number registrybind rmilocalhosttheserverclass newtheserverclass client side instance interface obtained rmi registry listing call method forwarded server application listing rmi client code registry registry locateregistrygetregistrynumber theserverinterface instance theserverinterface registrylookup rmi localhosttheserverclass manually counted number reference container java interface resource container java class reference entity java class resource entity dened java interface external depen dencies found number reference entity matching resource entity case crosslanguage experiment chose traccar projectthat us gwt framework created commits total java class xml le counted container entity manually found total reference container java class resource container xml le resource entity xml referred java multiple reference entity java may refer tothe resource entity number resource referred resource external dependency presented table row table pair matching java andxmlles referenceresource container multitier experiment chose uniscore solution created track record commits uniscoreserver server part subproject uniscore solution composed two interfacesand class uniscoreclient client part subproject uniscore solution one interface class manually counted number resource container interface extending javarmiremote one interface project declares method resource entity parallel reference container class httpsgithubcomtraccartraccarwebtreelegacy httpsgithubcomredhawkuniscore hosry anquetil table gwt crosslanguage experiment container resource referred resource external dependency applicationsettingsdialog applicationview archiveview devicedialog deviceview logindialog stateview userdialog usersdialog usersettingsdialog instance resource container found class class client part reference container also manuallycounted number entity say method invoking resource entity number resource referred resource external dependency presented table row table represents reference container rule pattern developed pattern java xml language used two framework experiment dened two xml pattern java pattern strategy consists ltering container nding entity inside one crosslanguage experiment gwt framework used one rule resource container xml le look xml le name matching java resource entity one rule look xml node uifield orfield attribute rule us twice xml pattern look xml node given attribute used one rule reference container java class look java class using uihandler oruifield annotation rule us twice java pattern look annotation instance given name reference entity one rule look argument value alluihandler oruifield annotation container rule us twice java pattern look annotation instance multitier experiment rmi framework used one rule resource container java interface look java interface extending javarmiremote interface rule us java pattern look implementation given java interface resource entity one rule look java public method declare throwing javarmiremoteexception rule us two java pattern one looking forexternal dependency software development table rmi multitier experiment container resource referred resource external dependency submissioncontentpanel dashboardcontentpanel examcontentpanel logoutnavigationpanel logincontentpanel uniscoreclient removequestionnotier displayquestionscontentpanel createquestioncontentpanel displayquestioncontentpanel studentcontentpanel modulecontentpanel questionnairecontentpanel submissionmailer public method looking method declaring throw given exception used one rule reference container java class look java class instance least one resource container rule us one java pattern look instance given interface pattern called repeatedly resource container found reference entity one rule look invocation resourceentities found rule us java pattern look invocation given method result ran adonis experiment detect number container entity external dependency compare found manual count gwt experiment adonis able correctly detect con tainers row table also correctly detected resource reference analysis resource referred resource column show multiple resource entity dened xml never referred java example deviceview container resource entity referred allowed gwt framework considered moreover comparison referred resource external dependency column show number external dependency larger number referred resource entity indicating resource entity referred several reference entity example hosry anquetil usersdialog container external dependency reference entity two reference removebutton addbutton found source code allowed gwt framework considered rmi experiment adonis able correctly detect refer ence container row table also correctly detected resource reference entity analysis resource referred resource column show multiple resource entity dened server never referred client example dashboardcontentpanel container see resource entity referred total found resource entity referred result existence excessive dependency moreover compar ison referred resource external dependency show number referred resource entity le number external dependency example dashboardcontentpanel class see none resource entity referred case examcontentpanel class found addlogactivity referred twice explains found external dependency instead conclusion various framework used create various type software frame work rely set rule specic one establish dependency conclude existence multiple type external dependency multi tier callback crosslanguage link polyglot programming also statethat even framework connects language tier unique way common approach emerges approach based nding correct con tainers lead identication specic entity dened according tothe framework rule additionally approach denes restriction lead error detection making important know proceed engineering work design detector achieve usage goal successfully established set requirement based developed tool adonis exibility dening using existing pattern limit number container detect entity link following frameworkrules experimented two dierent project reference anquetil modular moose new generation software reverse engi neering platform ben sassi ducasse mili ed icsr lncs springer cham cao edgeminer automatically detecting implicit control transition android framework nd external dependency software development cossette walker dsketch lightweight adaptable dependency analysis proceeding eighteenth acm sigsoft international symposium foundation software engineering grichi abidi jaafar eghan adam impact interlanguage dependency multilanguage system empirical case study java native interface application jni ieee trans reliab griswold atkinson mccurdy fast exible syntactic pattern matching processing wpc workshop program comprehen sion ieee hecht codifying hidden dependency legacy jee application asiapacic software engineering conference apsec ieee kempf kleeb klenk sommerlad cross language refactoring eclipse plugins proceeding workshop refactoring tool mayer schroeder crosslanguage code analysis refactoring ieee international working conference source code analysis manipulation ieee mayer schroeder automated multilanguage artifact binding rename refactoring java dsl used java framework jones edecoop lncs springer heidelberg http doiorg mushtaq rasool shehzad multilingual source code analysis system atic literature review ieee access neubauer thiemann sequential program multitier application program transformation proceeding acm sigplansigactsymposium principle programming language nguyen nguyen nguyen nguyen babelref detection renaming tool crosslanguage program entity dynamic web applicationsin international conference software engineering icse ieee pfeier wsowski taming confusion language france kuester bordbar paige ed ecmfa lncs springer heidelberg pfeier wsowski texmo multilanguage development environment vallecillo tolvanen kindler strrle kolovos ed ecmfa lncs springer heidelberg http doiorg polychniatis hage jansen bouwers visser detecting cross language dependency generically european conference software maintenance reengineering ieee shatnawi static code analysis multilanguage software system arxiv preprint arxiv shen crosslanguage code coupling detection preliminary study android application ieee international conference software maintenance evolution icsme ieee sotovalero harrand monperrus baudry comprehensive study bloated dependency maven ecosystem empir softw eng hosry anquetil vanciu rajlich hidden dependency software system ieee international conference software maintenance ieee rajlich hidden dependency program comprehension change propagation proceeding international workshop program comprehen sion iwpc ieee measuring team effectiveness scrum kars beekb gerard wagenaar laura kester sietse overbeek evert rooij faculty science department information computing science utrecht university princetonplein utrecht netherlands gwagenaarsjoverbeekuunl info support kruisboog eenendaal netherlands karsbeeklaurakesterevertderooijinfosupportcom abstract team become building block organization leading exponential increase team study including team effectiveness study scrumsoftware development however research measuring scrum team effective ness based objective measure contrary selfreporting likert scale absent design science research methodology literature reviewfocus group interview expert panel objective measure identi contributing seven team effectiveness concept measure quan tied directly derived work management system jira azuredevops example include number solved retrospective item new sprint contributing team effectiveness concept continuous improvement number time sprint goal achieved contributing bothteam morale stakeholder satisfaction way study offer proof benet agile especially scrum software development effec tive team well providing practitioner insight benchmarking scrum team effectiveness keywords team effectiveness scrum objective measure introduction scrum one popular method software development scrum framework consists framework offer way team collaboration solving complex problem result popularity scrum research topic team grown exponentially last decade leading also increase teameffectiveness study scrum however observation show study address topic scrum team effectiveness measure team effectiveness based self reporting word providing personal opinion situation question symptom selfreporting likert scale likert scale rating scale express subjectivity individual subjectivity measure bring limitation first subjective measure difcult aggregate interpret often expressed ordinal scale moreover noticed measure author license springer nature fernandes ed qua tic beek correlated fact eld result subjectivity measure limitation according research therefore objective research extent team effectiveness scrum measured based objective measure paper measure quantify team effectiveness scrum presented previous ndings topic team effectiveness discussed sect sect research design described section present ndings research sect ndings discussed validity threat examined last sect conclusion paper presented previous finding section discus previous ndings denition team effectiveness literature addition related work used compile information different method measure team effectiveness research area scrum denition team effectiveness signicant amount ambiguity regarding concept team effectiveness mainly since different organization different view denes effectiveness without giving formal denition hackman state addition perfor mance outcome speed solution number error outcome also taken account example group cohesiveness member satis faction determine effectiveness team general observation literature addressed abovementioned criterion team effectiveness however general denition team effectiveness often lacking one denitions team effectiveness found given fransen denes team effectiveness quality team performance well perceived satisfaction individual need team member denition address team effectiveness team level performance individuallevel satisfaction team member result denition fransen applied broader context therefore used research measuring team effectiveness since author found study measuring team effectiveness scrum based objective measure discipline visited case exploratoryliterature review done eld healthcare engineering two research area comprised majority team effectiveness study following num ber team effectiveness paper assumed paper researchareas respectable level team effectiveness maturity healthcare two metareview study provide overview measuring team effec tiveness within healthcare discipline one study research area measuring team effectiveness scrum reviewed study concluded study applied objective measure study also used subjective measure followup study show trend changed example objective measure categorized patient outcome functional status patient organizational outcome cost although number provided study applied subjective objective measurement study advised research topic team effectiveness healthcare includes outcome le frequently used professional wellbeing staff satisfaction focus identifying possible deadly combination betweenoutcomes engineering engineering study done contained subjective measure multiple study conducted study applied likert scale therefore subjective measure measure team effectiveness unfortunately paper elaborate contain subjective measure general conclusion section variety method mea suring team effectiveness area engineering healthcare research although healthcare research team measure effectiveness team based objective measure effectiveness study engineering team apply subjective measure measuring team effectiveness scrum study address topic team effectiveness scrum moe study evaluate team effectiveness scrum big five teamwork applied although paper included small case study already year old provides good understanding relationship betweenteam effectiveness scrum furthermore ndings moe form basis future research area team effectiveness scrum paper wijs teamwork one component overall picture team effectiveness therefore erwijs concluded seven factor contribute team effectiveness scrum factor continuous improvement stakeholder concern team auton omy responsiveness management support team morale stakeholder satisfactionin paper concept measured using likert scale likert scale give quantitative value qualitative data therefore study address objective measure measure team effectiveness implied research gap del gado explain team effectiveness study contain subjective measure instead objective measure state study subjective measure areused measure performance effectiveness behavioral outcome data often unavailable objective measurement result difcult make comparison different characteristic team research design study design science research methodology created peffers followed different phase shown phase consists activity beek design science process model adapted peffers literature review protocol different stage discussed literature review protocol elabo rated guide literature review protocol derived kitchenham tailored research step protocol apply search term different search engine term derived research question dened problem statement team effectiveness scrum productivity scrumare main search term derived research question problem statement step led selection paper inclusion exclusion applied exclusion criterion contained three element study written another language thanenglish excluded textbook paper include student experiment also excluded paper excluded published conference grouped category le based core conference ranking afterthe exclusion criterion inclusion criterion applied contained also three step first title screened paper selected title contained team effectiveness scrum productivity scrum second abstract paper selected inclusion criterion step analyzed third step selected paper second inclusion criterion step thoroughlyread paper included describediscuss least one following ele ments team effectiveness scrum productivity scrum method calculate team effectiveness productivity team effectiveness productivity metric scrum team ultimately paper derived protocol considered suitable paper problem identication solution objective main part problem identication solution objective identify problem research gap formulate objective nal created artifact problem identication research described sect solution objective phase elaborated sect design development design development phase consists data collection process elaborated sect several activity involved data collection process first two focus group organized generate objective measure related teammeasuring team effectiveness scrum effectiveness scrum focus group scrum expert asked generate measure objective measure related scrum team effectivenesstaking account denition team effectiveness fransen quality team performance well perceived satisfaction individual need team member second focus group aim link objective measure generated focus group seven concept team effectiveness dened erwijs erwijs proved seven concept form basis scrum team effectiveness linking certain team effectiveness concept indicated measure applied measuring scrum team effectiveness furthermore second focus group also applied review measure generated rstfocus group last phase data collection indicate whether measure derived focus group could measured practical setting work management system interview conducted scrum master indicate whether measure quantied work management system jira azure devops demonstration evaluation focus group previous phase measure collected linked seven concept team effectiveness expert interview conducted dene exact inuence certain measure team effectiveness since beenspecied yet result information collected certain measure inuences team effectiveness described sect addition expert least year experience scrum project structured interview method used duringthese interview method involves scheduling question researcher ask respondent question similar way expert interview following question asked taking account denition team effectivenessby fransen measure inuence team effectiveness last step phase analysis interview measure contains several opinion whether measure affect team effectiveness purpose analysis obtain information whether four opinion line thereforea coding scheme applied specic color applied measure end result overview includes expert perspective measure additionally colorcoded analysis also performed indicate whether expertswere line inuence measure team effectiveness generating objective measure total two focus group conducted generate objective measure addi tion six interview conducted indicate whether measure generated focus group measured work management system beek focus group focus group consisted participant participant least year experience scrum project total measure derived fromthe focus group session removing duplicate measure measure reduced measure addition removing duplicate measure needed divided objective subjective measure although participant askedto mention objective measure evaluation showed also subjective measure involved result check needed remove subjective measure process carried researcher validated focusgroup participant process measure reduced measure ultimately objective measure collected focus group focus group second focus group consisted six participant similarly focus group objective gather participant year scrum experi ence however one participant le year scrum experience participant second focus group asked relate objective measure focus group seven concept team effectiveness mentioned sect concept continuous improvement stakeholder concern responsiveness manage ment support team autonomy team morale stakeholder satisfaction addition participant could add objective measure concept participant didnot participate focus group total measure added resulted number measure grew unique measure however noted measure applicable multiple concept total measureswere applied two concept result measure duplicate measure distributed across seven concept table provides overview team autonomy team effectiveness concept measure related concept rstcolumn show team effectiveness concept related measure second third column show measure denition measure fourth column indicates whether measure derived focus group wereadded second focus group overview team effectiveness concept associated measure provided table sect data extraction work management system last part result section dive deeper objective measure currently measured work management system jira devops total sixinterviews conducted four scrum master software engineer delivery manager purpose interview review measure determine whether measured work management system interview itbecame evident always straightforward whether measure quantied work management system result category created category contains colormeasuring team effectiveness scrum table objective measure linked team autonomy team effectiveness concept measure quantied work management system green measure quantied jira azure devops blue measure directly derived work management system however data point available system yellow measure counted manually put work management system orange measure neither quantied visualized work management system red three category contain measure already computed work management system data available compute measure last two cate gories measure large adjustment made system computethe measure possible compute measure number measure percentage total number measure attached certain cat egory shown table column indicates category column show number measure percentage related category according interviewee column provides insight average percentage per category table show variety response provided determine whether measure quantied since knowledge work management system differs beek table number measure related category category interview avg category measure measured work management system measure computed jira orazure devops measure directly derived fromthe work management system however data point indicating measure available system measure counted manually putinto work management system measure neither measured norvisualized work management system measuring team effectiveness scrum among interviewee optimistic scenario chosen mean whenever expert mention measure quantied assumed themeasure quantied table one page provides detailed overview whether measure quantied taking account optimistic scenario mentioned table overview measure color code evaluation data extraction research phase beek evaluation team effectiveness measure section evaluation ndings discussed additionally measure contribute measuring team effectiveness presented expert interview total four expert interview conducted evaluate whether measure provides information team effectiveness addition answer expert link made scientic literature inuence certain measure team effectiveness already investigated however measure could linked scientic literature analysis opinion measure showed still much dis cussion among expert whether measure inuences team effectiveness therefore category assembled distinguish measure color green used expert agree measure effect team effectiveness color blue mean expert disagreed three expert agreed measurement impact team effectiveness two expert agree yellow used measure inuences team effectiveness color orange applied three expert disagreed one expert agreed whether measure inuences team effectiveness red used expert state measure inuence team effectiveness general concluded measure second category color green blue strongly inuence team effectiveness could argued much debate whether measure impact team effectiveness measure contain yellow orange red color due discussion assumed direct relationship measure team effectiveness ultimately measure assigned second category thus inuence strongly inuence team effectivenessmeasuring team effectiveness scrum relating evaluation phase work management data extraction phase aim section indicate whether measure provides information team effectiveness measured work management system previous section provided information measure related measuring team effectiveness section link made evaluation measure theextraction data work management system color green blue sect state measure inuences strongly inuences team effectiveness sect data extraction work management sys tems color green blue yellow indicate measure measurable work management system whenever measure attached category mentioned measure provides information team effectiveness measure bequantied work management system word objective measure con tribute measuring team effectiveness scrum previous section described measure measure inuence strongly inuence teameffectiveness based green blue colour measure taken expert interview column column show measure measure also green blue yellow colour mean according theexpert interview whether measure quantied work management sys tem measure contribute measuring team effectiveness measure contain contributes column complete overview whether measure contributes measuring scrum team effectiveness shown table provides name measure evaluation color color indicate measure canbe quantied work management system whether measure contributes mea suring team effectivenessand concept continuous improvement stakeholder concern responsiveness team autonomy management support team morale stakeholder satisfaction team effectiveness measure linked based second focus group discussion section measure contribute team effectiveness examined concept level described sect furthermore observation second focus group discus generated measure wms beek second focus group showed unique measure related seven concept team effectiveness evaluation phase showed measuresultimately contribute measuring team effectiveness scrum show measure could provide broad overview measuring team effectiveness whole however analysis show concept fully measured erwijs state seven concept important scrum team effectiveness ensure concept covered measuring team effectiveness objective measure linked seven concept team effectiveness analysis performed identify difference measurability concept word whether concept quantied analysis show two concept stakeholder concern management support represented three theseven measure related stakeholder concern contribute measuring team effectiveness four four measure related management support help measure scrum team effectiveness team morale team autonomy responsiveness percentage respectively indicates still great difference measurability concept level erwijs concluded concept inuence team effectiveness important note seven concept fully measured basis objective measure therefore taken account measuring team effectiveness basedon measure table provides overview measurability concept table measurability overview concept team effectiveness concept measurability continuous improvement stakeholder satisfaction responsiveness team autonomy team morale stakeholder concern management support addition difference concept another interesting note measure derived discussion second focus group discussion dealt idea number alone mean anything word measure provides number number mean several study discus importance providing meaning number first study concluded meaning vague quantiers numerical value vary greatly also problem people individual internal scale make judgment result number interpreted differently cancreate confusion focus group solution already suggested according focus group participant determine whether given number high low comparison made instance predened goal certain trend nmeasuring team effectiveness scrum study benchmarking dened enabling motivating one determine well one current practice compare practice applying benchmarking number measure understood help understand number mean certain standard trend apply matter study author point metric identied may related team effectivenessbut number order ass team effectiveness make comparison measure converted indicator threshold determine team low medium high level example general sect show measure help measure team effective ness although majority measure generated focus group mean mapping measure provides complete picture measuringteam effectiveness still great difference ability measure seven concept team effectiveness furthermore measure seen series trend certain benchmark applied provide context number measure validity threat section threat validity discussed concern internal conclusion external validity threat internal validity threat related expertise participant intervie wee research however interview focus group participant multiple year scrum project experience however different group formation used focus group result participant focus group didnot participate second focus group harm internal validity conclusion validity threat relates sample size focus group number expert interview seen rather small external validity threat relates generalizability research research took place one organization although threatens generalizability participant consultant also worked company result experience derived organization also indirectly taken account therefore limit external validity threat conclusion future research research result presented whether possible measure team effectiveness based objective measure focus group interview conducted answer research question extent team effectiveness scrum measured based objective measure identied measure contribute measuring team effectiveness scrum signal team effectiveness indeed measured large extent thebasis objective measure however note taken account first number certain measure meaning therefore benchmarking trend number applied provide meaning context number beek measure furthermore variety measurability team effectiveness concept example one concept linked measure provide meaning toteam effectiveness measured work management system another concept linked measure related measured work management system although concept fully measured seven concept canbe measured least providing solid basis measuring team effectiveness last research considered exploratory study topic measuring team effectiveness based objective measure outcome provide insightinto topic built future work focus extending research software company apply scrum principle result new insight new measure canbe applied measure team effectiveness furthermore would interesting apply measure practice result feedback collected new measure current measure reexamined reference bender hootegem team context moving team discussion beyond existing dichotomy manage stud buljacsamardzic doekhie van wijngaarden intervention improve team effectiveness within health care systematic review past decade hum resour health delgado pin mara romero martnez gmez martnez team organization review team effectiveness team perform manage int doolen hacker aken managing organizational context engineering team effectiveness team perform manage int fransen kirschner erkens mediating team effectiveness context col laborative learning importance team task awareness comput hum behav hackman morris group task group interaction process group performance effectiveness review proposed integration adv exp soc psychol imbrie maller immekus assessing team effectiveness annual conference jahedi mndez advantage disadvantage subjective measure econ behav org joshi kale chandel pal likert scale explored explained appl sci technol kitchenham procedure performing systematic review lemieuxcharles mcguire know health care team effectiveness review literature med care re rev mathieu gallagher domingo klock embracing complexity review ing past decade team effectiveness research annu rev organ psych organ behav moe dingsyr scrum team effectiveness theory practice abrahamsson baskerville conboy fitzgerald morgan wang ed lnbip springer heidelberg one annual state agile development survey ersion one inc httpssta teofagilecomufhcstateofagilemeasuring team effectiveness scrum peffers tuunanen rothenberger chatterjee design science research methodology information system research manag inf syst purwanto benet benchmarking method several industry systematic literature review syst rev pharm rashidi begum mokhtar pereira conduct structured interview research implementation method adv re de raymond benchmarking public procurement benchmarking int salas sims burke big teamwork small group re schwaber sutherland scrum guide scissons number created equal measurement issue assessing board governance corp gov int bus soc erwijs russo theory scrum team effectiveness acm trans softw eng methodol wohlin runeson hst ohlsson regnell wessln experimentation software engineeringan introduction kluwer academic publisher doedrecht wright gaskell omuircheartaigh much quite bit mapping numerical value vague quantiers appl cogn psychol yang jin examination team effectiveness distributed colocated engineering team int eng educ author index abreu fernando brito almeida duarte alvaradovaliente jaime anquetil nicolas barletta vita santa barrocas andr beek kars boon gijsbert caballero muozreja ismael caballero ismael caivano danilo condorifernandez nelly silva alberto rodrigues carneiro glauco rooij evert daz ana do real jos pereira elbaz yassin galera ramn garciaalonso jose garcarodrguez ignacio gualo fernando hackenberg georg heikkinen sanna hosry ale jntti marko kester laura kili kani lako alfred lope margarido isabel marchetto alessandro miranda eduardo moguel enrique moralestrujillo miguel mnch jrgen murillo juan overbeek sietse pal anibrata prakash divya ricca filippo rodrguez moiss rohmah arini nur romerolvarez javier saraiva joo smithcooper ryan michael editor applicable author license springer nature fernandes ed author index stettina christoph stocco andrea trieinger stefan tukiainen markku tzn alican van veldhoven ziboud vanthienen jan visser joost wagenaar gerard wei lukas
copyright paper author permitted creative common license attribution international talavera manifesto quantum software engineering programming mario piattini aquantum alarcos research group guido peterssen aquantum alhambra ricardo prez castillo facultad ciencias socia le talavera reina jose luis hevia aquantum alhambra manuel serrano information system technology department uclm guillermo hernndez formacin ignacio garca rodrguez guzmn information technology system institute claudio andrs paradela aquantum alhambra macario polo escuela superior informtica ciudad real ezequiel murina aquantum alhambra luis jimnez alarcos research group juan carlos marqueo alhambra ram gallego quantum world association jordi tura frank phillipson tno juan murillo university extremadura alfonso nio scicom research group moiss rodrguez aqclab abstract paper present talavera manifesto quantum software gineering programming manifesto collect principle com mitments quantum software engineering programming field well call action result discussion different viewpoint academ industry practitioner joined first interna tional workshop quantum software engineering programming qanswer keywords quantum software engineering quantum computing manifesto talavera introduction beginning last century basis new physic theory quantum chanics established many exceptional scientist planck einstein bohr schrdinger born dirac broglie heisenberg pauli etc theory scribe behaviour nature subatomic level photon electron etc led first quantum revolution allowed researcher engineer apply physi cal law set forth man cutting edge technology transistor gps well solid state lighting laser among advance nobel laureate richard feynman asked kind computer ing simulate physic second quantum revolution began idea quantum computing thus born quantum computer attempt various counterintuitive principle superposition object different state time entanglement object deeply connected without direct physical interaction effort provide faster computing speed apart quantum computer second quantum revolution includes key technology like quantum internet quantum clock quantum sensor cryptography etc already quantum computer expect near future take advantage huge computation capacity solve problem considered difficult today classic computer new computing para digm great deal direct application many potential one example applica tions include privacy cryptography certification randomness authentication supply chain logistics optimization problem procurement production distribution vehicle routing optimization etc chemistry simulation complex molecule discovery new material advanced molecular design etc economics financial service portfolio risk optimization fraud detection actual randomness financial model simulation scenario analysis etc energy agriculture production ammonia better distribution resource set degradation modelling etc medicine health prote folding drug discovery disease detection non invasive high precision surgery targeted drug design tailored medicine provement quality life prediction therapeutic prescription etc defence national security program mentioned application accomplished quantum computer alone application need quantum software rise first quantum computer initial programming language quantum algorithm came promising result nevertheless quantum software begun produced large scale industrial way expect industrialization quantum software pro duction come next year actually kind breakthrough already occurred several time history software engineering first notably diffusion third generation language cobol resulted structured analysis design programming came advent elational database management system led entity relationship analysis design another example object orientation emerging leading object oriented anal ysis design pattern turn see later model driven archi tecture recently point devops born late first decade century methodology made continuous integration continuous delivery must today believe quantum software ngineering qse necessary contribution success quantum computing ieee defines software engineering application systematic disciplined quantifiable approach development operation maintenance software well study approach appli cation engineering software feel time come take care pro ducing quantum software applying knowledge lesson learned software engineering field implies apply adapt existing software engineering pro ce method technique practice principle development quantum software may imply creating new one recognize rapidly increasing awareness need quantum computing application great desire produce quantum software industrial controlled manner however ineffective unless come stand software engineering help principle commitment propo following initial set principle commitment qse agnostic regarding quantum programming language technology qse serf deliver quantum software process method standable controllable repeatable broad community qse embrace coexistence classical quantum computing advo cates reengineering technique integrate new quantum algorithm existing classical information system reverse engineering technique lso needed parse abstract quantum program information integrated classical program qse support management quantum software development project livering quantum software fulfils initial business goal req uirements time ensuring quality time cost constraint properly observed methodology developing quantum program must cre ated adapted existing one effort estimation method quantum soft ware development need provided well qse considers evolution quantum software quantum software maintained evolved inception removal quantum software evolution must handled throughout whole quantum software lifecy cle qse aim deliver ing quantum program desirable zero defect charge defining applying testing debugging technique quantum pro gram way defect detected solved program released qse assures quality quantum software quality management pro ce product essential quantum software xpected quality level produced since improve measure new metric quantum program quantum process developed qse promotes quantum software reuse qse help development team share index find quantum software reused study design architectural pattern quantum program must addressed also necessary facilitate technical communication work eating library reference example application demonstration qse address security privacy design quantum information system must secure guarantee privacy data user qse offset consider security privac initial phase quantum software develop ment design qse cover govern ance management software manager aware particular process organizational structure principle policy framework informa tion culture ethic behaviour people skill compe tences well service infrastructure application associated quantum software provided organization call action follow ing stakeholder something right get started software practitioner try identify effect quantum project tech nical economic organizational context start asking question incorporate principle commitment daily practice think cial individual dimension talk issue colleague researcher identify research questi ons field help better derstand quantum software engineering discus ese peer think experience software engineering research could transferred quantum software research field educator integrate quantum software engineering curriculum within existing software engineering degree andor course discipline clearly specify competence skill required future quantum software gineers governme funding body analyse commitment provided consider quantum software engineering researchindustrial strategical plan provide ade quate funding program support plan contribute dissemination information plan quantum technology vendor actively aware latest trend quantum software engineering try make every effort commitment mentioned fulfilled professional association revise practice attempting incorporate principle acknowledge explicitly need consider quantum software engineering part professional practice customer put concern table ask next project user demand software embrace principle mentioned
volsoftware quality journal httpsdoiorgsy quantum serviceoriented computing current landscape challenge enrique moguel javier rojo david valencia javier berrocal jose garciaalonso juan murillo accepted march published online author abstract development quantum computing technology achieving beginning attract interest company could potentially user quantum software thus perfectly feasible next year hybrid system start appear integrating classical software system company new quantum one pro viding solution problem still remain unmanageable today natural way sup port integration serviceoriented computing conceptually invocation quantum software service similar classical one technically many difference technological limitation refer platform independence decou pling scalability etc highlight difference difficulty develop quality quantum service paper take wellknown problem quantum solution provided integer factorization making amazon braket quantum service plat form exercise trying provide factorization quantum service carried following best practice design pattern standard existing implementation classical service case study used highlight rough edge limitation arise integration classicalquantum hybrid system using serviceoriented computing conclusion study allows point direction focus research effort order achieve effective quantum serviceoriented computing keywords quantum service classical service hybrid classicalquantum software quality introduction quantum computing starting establish commercial reality macquarrie several major computing corporation already built working quantum computer ten quantum programming language simulator real quantum computer already used general public cloud motivating software development company take first step launching enrique moguel enriqueunexes extended author information available last page article software quality journal proposal integral development quantum software prezcastillo piattini wille bergholm piattini prezcastillo signal urgent call software engineer prepare enroll sail quantum sea generally assumed way new world software system mostly quantum transition time classical quantum system must coexist collaborate interacting sodhi called classicalquantum hybrid system mccaskey advance provided software engineering last two decade allow affirm natural way approach collaborative coexistence following principle service engineering service computing among reason two highlighted one hand hardware tech nology matures achieves affordable cost reasonable think compa ny inclined quantum infrastructure quantum software service used nowadays classical computing resource already hap pened classical computing service company amazon microsoft ibm google started approaching world quantum computing digital journal unreasonable think company offer clas sical quantum computing service indiscriminately hand reasonable think least initially quantum system used solve part problem solved classical architecture part problem already efficiently solved classical architecture continue treated example field health possible accelerate discovery new medicine perform simulation molecule pharmaceu tical enable development new medicine easier faster zinner financial domain could help analyze possible scenario compare risk optimize financial portfolio pistoia could also help decrypt cryptographic security system optimize travel route logistics model climate change etc cheng natural way achieve quantum solution consuming quantum service conceptually invocation quantum program similar classical ser vice piece software need result produced quantum system consumes service sake service engineering principle invocation even agnostic whether service return result quantum technically however invocation quantum service different classical service still pose challenge today due inherent nature quantum computing meaning quantum service differs classical service includes entanglement superposition solution collapse single solution interacting external world leading probability ampli tude associated result obtained upon observation quantum system servitizing quantum piece software namely converting service endpoint invoked standard service request possible existing tech nology however current status quantum software mean eliminating advantage made serviceoriented computing commercial success especially related software quality like composability modularity maintainability reusabil ity etc ravichandran rai reason multiple first foremost specificity architecture make quantum algorithm parameter dependent specific quantum hard ware executed also return result quantum process software quality journal subject error support intermediate verification result due system collapse thus different quantum architecture require different skillsets example circuitbased quantum programming requires developer know detail quantum gate wille quantum annealing programming requires adapt ing problem specific metaheuristic boixo consequently invoking quantum program agnostic way impossible today violates principle service engineering highlight need development quantum service engineering piattini paper explore current state quantum software engineering service oriented point view integer factorization problem nielsen chuang jiang used illustrate different problem arise quantum piece code tried used service amazon braket quantum computing service offered amazon part aws suite used service platform amazon globally rec ognized leader company service technology braket offer access quantum computer three different hardware provider using platform basis quantum service development identify problem limitation current technology using lesson learned serviceoriented computing paper provides exploration problem addressed pointing different research direction development future quantum service engineering order rest paper organized follows section detail work background field serviceoriented computing quantum software development section describes one possible way implement classic service following best practice design pattern existing standard section address servitization quantum software using amazon braket section list main limita tions found today technology limit benefit quantum service finally sect present paper conclusion future work background serviceoriented computing paradigm utilizes service fundamental element developing software papazoglou one pillar serviceoriented architec ture soa proposes implementation complex software solution set service composed choreographed endrei basic composition mechanism service call allows service invoked another piece code potentially another service agnostically respect place technol ogy architecture invoked service service thus maintained evolved replaced reused independently without affecting software invokes precisely property make especially attractive create quality software last two decade serviceoriented computing soa general web ser vice particular center intense research bouguettaya leading monolithic software gradually replaced servicebased software run cloud mazlami haugeland success serviceoriented computing possible great extent thanks development cloud computing paradigm aim provide reliable http aws amazon com braket software quality journal customized dynamic computing environment wang main rea son behind success cloud include ability company better control cost since buy upgrade maintain expensive hardware pay flexibility scalability provided cloud vendor allow company instantly increase decrease hardware capability according need made cloud one successful business model last decade recent estimation calculate usa cloud computing contrib uted approximately billion dollar valueadded gdp million job hooton given number surprise current quantum computer still expensive hardware build operate offered following model current form quantum computer accessed cloud model called researcher quantum computing service qcaas rahaman islam model compared classical infrastructure service iaa model offered cloud computing qcaas allows developer access world existing quantum computer nevertheless access dependent specific hardware developer must great proficiency quantum computing benefit advantage increase abstraction level qcaas multiple ongoing research effort commercial perspective platform like abovementioned amazon braket pro vide development environment quantum software engineer like qpath eco system cover wide range possible application integrating software classi cal quantum world quantum development application life cycle platform highquality quantum software academic perspective significant number work starting appear field quantum software engineering zhao piattini work focus translating lesson learned classical software engineering improve quality quantum software however far author know work focus perspective service engineering quantum hybrid software however work starting appear domain like barzen quantum application service qaas proposed narrow gap classical service engineering quantum software work like reveal need focus serviceoriented approach development quantum service good classic service implementation starting discus proposed case study limitation found describe one possible way manage entire lifecycle classic service start ing implementation followed deployment subsequent monitoring maintenance purpose follow existing best practice design pattern standard figure show good classical version implementation deployment maintenance service could look like would like point sin gle best way define classic service developed following different http www quant umpath software quality journal approach however tried follow accepted best practice design pattern standard become relevant recent year defini tion development classical service among followed model defined newman one early pioneer microservice architecture microser vice design pattern richardson renowned wellrespected microservices expert guide wolff renowned software architect written sev eral book microservices regard split vertically two left side seen service client service case study detailed sect would cryptographic decryption service right side invoked ser vice seen commented case study would algorithm calculating factorization integer horizontally split three layer represent different phase service life cycle top implementation phase service seen service developed middle deployment phase service seen published invoked bottom monitoring phase seen service used phase relevant standard best practice classic service discussed implementation classical service developer need combine two main aspect business logic service specific service imple mented hoc service api definition service api openapi specification used specification defines standard languageagnostic interface restful apis allows human computer discover understand capability service without access source code documentation network traffic inspection openapi definition used code generation tool like swagger generate server client various programming language using openapi case study integer factorization service defined input output parameter definition code stub generated example python business logic service added following approach service could accessed using rest request json provide input parameter good classic version implementation service http www opena pi org software quality journal service implemented must deployed client access deployment case cloud computing solution used deploy api project hardware provided third party depending level control require hardware several alternative ranging iaa solution like amazon elastic cloud computing complete control virtual machine container like docker serverless approach like amazon lambda control underlying infrastructure provided service creator independently deployment approach followed proposed service coupling operating system deployed level one used design pattern deployment classical service api gateway put simply api gateway take api request client determines service needed combine unified seamless experience user proposed case study service would invoke prime number factorization service api gateway backend api gateway would transmit petition appropriate service provide response computed finally service deployed invoked user must monitored devops team ensure service deal demand address usually load balancer used combination api gateway additionally monitoring rule defined combination tool like graphite cloudwatch obtain finegrained information service status would allow control status prime number factorization service number request much going pay infrastructure end month etc seen even simple service like prime number factorization ser vice development deployment monitoring process quite complex could thought component really necessary simple service however reason serviceoriented computing adopted pattern good practice contribute benefit provided ser vice orientation relevant benefit platform independence using rest api turn based http rest internet protocol service invoked platform indepen dently language service language client platform run similarly using json data transferred service regardless implementation language finally using openapi specifica tion independent wellformed api defined easily consumed client location independence classical service also independent location deployed independence considered two level http graph iteapp org http aws amazon com cloud watch http aws amazon com http www docker com http aws amazon com lambda software quality journal physical independence provided rest http dns allow service developer url access service independent deployed logical independence meaning independence given service inside complex project provided api gateway hide complexity service client decoupling three different type decoupling must taken account decoupling service decoupling different service single api provided api gateway communicate service without service knowing decoupling service hardware decoupling service hardware operating system provided platform service deployed docker lambda etc decoupling service programming language decoupling service programming language written provided openapi specification code generation tool able generate service stub different programming language scalability service also resilient developer able scale address change demand common way provide scalability without incurring high economic cost cloud provider elastic platform load balancer able start stop new instance service needed composability service also composable set simple service composed provide solution complex problem composability pro vided api gateway decompose single invocation call different service without service knowledge reliability service reliable broadest sense word including security maintainability accountability many xabilities achieve complete set monitoring analytic tool needed provide informa tion needed service achieve benefit complex infrastructure like one shown needed however far author know support obtain benefit serviceoriented computing one service api implemented quantum service quantum servitization problem solved efficiently using classical computation clear example factoring prime number quantum computing offer greatest benefit without forgetting knowledge acquired classical serviceoriented computing able distribute servitize development offered benefit already known address current state quantum service paper decided amazon braket amazon defines braket fully managed quantum computing service specifically braket provides development environment build quantum algorithm software quality journal test quantum circuit simulator run different quantum hardware technology given amazon currently global leader regarding cloud computing ser vice technology aws braket seems good alternative develop quantum ser vice nevertheless since state quantum software development roughly different existing platform expect similar result one presented paper quantum service developed different platform basic building block serviceoriented computing service defined self describing platformagnostic computational element support rapid lowcost compo sition distributed application papazoglou however braket directly pre pared offer developed quantum algorithm service invoked endpoint compose complex application shortcoming addressed wrapping quantum algorithm classical service implies including classical computer run classical service turn invokes quantum computer far author know currently way directly invoking quantum algorithm service figure show example approach one simplest wellknown quantum circuit one used create bell state two qubits wrapped flask service flask service deployed classical computer provides simple way include quantum algorithm complex serviceoriented solution next present complex quantum algorithm used case study identify problem limitation current technology perspective serviceoriented computing integer factorization case study order make analysis broad interdisciplinary possible decided select problem wellknown scientific community working quantum com puting time selected problem simple enough comprehended newcomer several application satisfy condition decided tackle integer factorization precisely particular application later denoted prime factorization know although fundamental prob lem number theory computationally hard believed belong hard class problem jiang nonetheless problem used basic hardness assumption cryptographic algorithm famous rsa algorithm thus integer factorization identification new method address task acquire important role information security multiple proposal algorithm solution problem famous shors algorithm nielsen chuang algorithm mally described term quantum gate circuit suitable development execution machine ibms computing chip haring considering approach quantum computing adiabatic quantum com puting based concept quantum annealing possible implement shors algorithm directly nonetheless algorithm proposed prime http flask palle tspro jects com software quality journal factor case algorithm proposed wang thus study conducted paper algorithm proposed integer fac torization shors algorithm quantum machine programmed quantum circuit gate rigettis motta ionqs kielpinski integer factorization based quantum annealing adiabatic quantum machine dwaves algorithm also serve illustration problem derived rela tive novelty quantum computing different existing implementation namely nonexistence algorithm doityourself characteristic mainly due complex nature problem addressed quantum computing prox imity algorithm underlying hardware used context producing problem similar software crisis moguel algorithm designed particular computing hardware many time recreate algorithm new machine even new increment problem reminiscent found example generate new circuit shors algorithm prime factorized although could done algorithm generate circuit automatically great majority possible user quantum computing ability able create type metaalgorithms beyond capability complicating expansion quantum computing usage specialized field thus necessary offer solution nonspecialized user utilization quantum computing case deployment quantum service allow hiding complexity user providing entry endpoint returning result execution quantum algorithm wrapped classical service software quality journal integer factorization amazon braket illustrate actual situation quantum service developed amazon braket translated abovementioned integer factorization algorithm platform moment writing manuscript braket support three different quantum computer simulator real quantum computer three different hardware vendor specifically supported quantum computer include two vendor whose development based quantum circuit rigetti ionq one vendor based quantum annealing dwave integer factorization algorithm tested supported quantum machine simulator since supported simulator also based quantum circuit shors algorithm used simulator quantum circuit hardware figure show fragment fragment quantum circuit needed run shors algorithm amazon braket software quality journal quantum periodfinding subroutine shors algorithm implemented using amazon braket complete circuit shors algorithm executed without change three simulator two circuitbased computer supported braket nevertheless interesting note measurement reinitialization qubits supported many existing simulator therefore found public implementation shors algorithm supported braket figure part algorithm left commented example shors algorithm adapted avoid opera tions mean additional effort adapt one wellknown algorithm specific given quantum platform difference existing solution cause implementation presented work certain occasion study result obtained integer factorization algorithm work execution great relevance interest study analysis behavior quantum algorithm point view serviceoriented computing although quantum circuit would regardless quantum hardware simulator used way algorithm invoked change depending run figure show braket invocation code three simulator two quantum computer supported seen figure using local simulator straightforward invocation run algorithm simulator amazon simple storage system destination defined result stored alongside timeout polling result polling timeout short result may returned within polling time finally running algorithm real quan tum computer recovery task defined quantum algorithm execution asynchronous operation developer charge consulting result ready finally execute integer factorization adiabatic quantum machine dwave one would completely rewrite algorithm since based adiabatic theorem closely related quantum annealing thus mapping challenge dif fers gatebased machine rendering quantum circuit inappropriate figure show braket code factorize number using dwave quantum machine example although small enough remark current limitation quan tum software point view serviceoriented computing fragment amazon braket code invoke shors algorithm different device software quality journal quantum service implementation current limitation developing described service algorithm tested execute defined machine simulator different metric used evaluate perfor mance limitation including quantum service hybrid system follow ing evaluated number qubits since one main limitation current quantum computer directly affect ability execute service number shot due problem arise characteristic real quantum computer mainly noise state qubits experiment must performed several time shot statistically consistent precision result since discrep ancy result obtained different machine response time measure cor responds time elapsed sending request receiving result economic cost invoking solution proceed evaluation several http request made postman api client tool allows making request rest apis taking described metric analysis carried experiment allows conclude roughness limitation problem arise quantum piece software expected provided service mentioned limitation related fact quantum service built fact implementing quan tum service current service technology potential benefit serviceoriented computing lost case study proposed sect prime number factorization service viable make traditional algorithm possible take advantage benefit offered quantum computing traditional serviceoriented computing replacing service another even deployed different hardware architecture mostly trivial least mostly trivial infrastructure place show however happens need replace classical service quantum service following similar approach described definition classical service attempt made replicate classical architecture transferring quantum world order maintain quality attribute provided serviceoriented computing aspect hybrid classicalquantum architecture analyzed taking account early stage quantum software engineering shown box empty regarding implementation layer quantum service service business logic must implemented classic service fragment amazon braket code run integer factorization algorithm dwave device http www postm com software quality journal support standardization mechanism definition apis quantum endpoint similarly tool code generation quantum service level layer following traditional implementation service must platform inde pendent achieve rest api based http wellknown inter net protocol used ensure service talk similarly json used way transfer data service regardless implementation language openapi specification also help achieve independence providing way define wellformed api easily consumed however quantum implementation communication protocol defined formatted way exist communicating classical service quantum service specification even exist defining api achieve service independence although already researcher begun consider issue cuomo give overview main challenge open problem arise design distrib uted quantum computing ecosystem perspective communication engineering rojo address challenge giving implementation form quantum microservice wellknown problem traveling salesman problem another important feature serviceoriented computing decoupling imple mentation layer decoupling must service programming lan guage written development classic service provided openapi specification code generation tool swagger able generate stub service different programming language however design ing quantum service specification code generation tool generate stub structure api project although work found dreher ramasami developed prototype containerbased system allows developer prototype test implement quantum algorithm greater agil ity flexibility situation improve deployment layer moment commercial platform execute quantum algorithm example amazon braket allow run quantum algorithm different simulator quantum processor however braket offer control platform quantum ser vice executed one quantum task placed queue quantum processor wait response similarly api gateway prepared deal quantum service hybrid classicalquantum architecture version implementation service software quality journal layer also important service independent location deployed classic service design perspective independence considered two level physical level location independence provided rest http dns allow url access service regardless deployed logical level location independence given service within complex project provided api gateway hide com plexity client point view quantum service con crete definition although already work address aspect kumara present vision quantum serviceoriented computing qsoc model build hybrid business application placing collabora tion developer classical service developer quantum service garcia alonso propose quantum api gateway following traditional api gateway pattern adapting quantum world moreover quantum api gateway recommends best quantum computer execute given quantum service runtime continuing deployment layer another important feature serviceoriented com puting decoupling classical service design perspective two different type decoupling considered first decoupling different service api provided api gateway communicate service without service aware second decoupling service hard ware operating system provided platform service deployed docker lambda etc point view quantum service concrete definition decoupling aspect work starting work path grossi describe architectural framework address problem integrating apiexposed quantum provider exist ing enterprise architecture provides minimum viable product mvp solution actually merges classical quantum computer basic scenario reusable code github repository finally monitoring layer situation even worse classical service moni toring countless tool example graphite cloudwatch however support current tool monitoring quantum service development type tool offer great benefit obtain detailed information state quantum service essence service resilient able scale address client demand common way provide scalability without incurring high economic cost part cloud provider elastic platform load balancer capable starting stopping new instance service needed technol ogy develop feature quantum world yet exist incipient work line sete describe functional architecture based planar lattice qubits allows experimental test quantum error correc tion scheme service also composable set simple service composed provide solution complex problem traditional service development compos ability provided api gateway decompose single invocation call different service without service knowing however mal definition composability quantum service although already dif ferent work line wild introduce two deployment software quality journal modeling style based topology orchestration specification cloud applica tions tosca standard automate deployment orchestration quantum appli cation barzen present collaborative platform problem solving quantum computer cohen define platform designing quantum control protocol wide range quantum hardware define optimize performance addition service must also reliable including security maintainability accounta bility many capability classical service complete set monitor ing analysis tool provide necessary information service however quantum service progress aspect nascent work researcher proposes framework based quantum computation reliability assessment complex system conclusion future work paper based already know classical serviceoriented comput ing presented analysis current quantum software point view serviceoriented computing used amazon braket deploy quantum service wrapping classical service used integer factorization problem show difference running service different quantum hardware even common umbrella braket presented possible implementation classical service following best practice design pattern existing standard taking implementation refer ence developed replica using quantum service allowed clearly present current limitation proposal emerging possibility development quantum service given existing limitation argued intensive research effort needed bring benefit serviceoriented computing quantum world due young nature quantum software engineering area discipline including serviceoriented computing still giving first step nevertheless paradigm change underlies quantum computing implies direct translation proposal technique running quantum algorithm traditional ser vice enough bring benefit serviceoriented computing quantum era need effort generate new technique methodology tool bring benefit already shown cloud service computing quantum software service acknowledgement work supported project iepluse interreg espaa portugal rtibi mciuaeifeder fpu grant department economy infrastructure government extremadura european regional development fund funding open access funding provided thanks cruecsic agreement springer nature declaration conflict interest author declare conflict interest software quality journal open access article creative common attribution international license permit sharing adaptation distribution reproduction medium format long give appropriate credit original author source provide link creative com mon licence indicate change made image third party material article included article creative common licence unless indicated otherwise credit line material material included article creative common licence intended permitted statutory regulation exceeds permitted need obtain permission directly copyright holder view copy licence visit http creat iveco mmons org licen s reference barzen leymann falkenthal vietz weder wild relevance near term quantum computing cloud humanity perspective ferguson pahl helfert ed cloud computing service science international conference closer prague czech republic revised selected paper communication computer information science springer http doi org barzen leymann falkenthal vietz weder wild relevance near term quantum computing cloud humanity perspective communication computer information science http doi org bergholm izaac schuld gogolin alam ahmed arrazola blank delgado jahangiri pennylane automatic differentiation hybrid quantum classical computation arxiv preprint arxiv boixo albash spedalieri chancellor lidar experimental signature programmable quantum annealing nature communication bouguettaya singh huhns sheng dong service comput ing manifesto next year communication acm cheng lim krikorian sklar kong survey encryption standard potential impact due quantum computing ieee aerospace conference proceed ings http doi org aero cohen sivan ofek ella drucker shani weber grinberg greenbaum quantum orchestration platform integrated hardware software design execu tion complex quantum control protocol bulletin american physical society cuomo caleffi cacciapuoti towards distributed quantum computing ecosys tem iet quantum communication http doi org iet qtc digital journal topological quantum computing market likely experience tremendous growth near future http www digit aljou rnal com topol ogical quant compu ting market likely exper iencea treme ndous growth near future micro soft ibm google wave syste dreher ramasami prototype containerbased platform extreme quantum comput ing algorithm development ieee high performance extreme computing conference hpec http doi org hpec endrei ang arsanjani chua comte krogdahl luo newling pattern serviceoriented architecture web service ibm corporation international techni cal support organization new york garciaalonso rojo valencia moguel berrocal murillo quantum software service quantum api gateway ieee internet computing grossi crippa aita bartoli sammarco picca said tramonto mattei serverless cloud integration quantum computing arxiv haring ohmacht fox gschwind satterfield sugavanam ibm blue geneq compute chip ieee micro haugeland nguyen song chauvel migrating monolith microservices based customizable multitenant cloudnative apps proceeding euromicro conference software engineering advanced application seaa http doi org seaa wang wang wang quantum machine learning dwave quantum computer quantum engineering hooton examining economic contribution cloud united state economy report internet association washington software quality journal jiang britt mccaskey humble kais quantum annealing prime factorization scientific report kielpinski monroe wineland architecture largescale iontrap quantum computer nature kumara heuvel tamburri qsoc quantum serviceoriented computing symposium summer school serviceoriented computing springer http doi org http link sprin ger com chapt macquarrie simon simmons maine emerging commercial landscape quantum computing nature review physic mazlami cito leitner extraction microservices monolithic software archi tectures proceeding ieee international conference web service icws http doi org icws mccaskey lyakh dumitrescu power humble xacc system level software infrastructure heterogeneous quantumclassical computing quantum science technology mccaskey dumitrescu liakh humble hybrid programming nearterm quan tum computing system ieee international conference rebooting computing icrc ieee moguel berrocal garcaalonso murillo roadmap quantum software engineering applying lesson learned classic prezcastillo piattini peterssen lhevia ed short paper proceeding international workshop software engineering technology qset colocated ieee international conference quantum computing engineering ieee quantum week online conference broomfield colorado usa ceur workshop proceeding ceurwsorg http ceur org short pdf motta sun tan orourke minnich determining eigen state thermal state quantum computer using quantum imaginary time evolution nature physic newman building microservices oreilly nielsen chuang quantum computation quantum information american associa tion physic teacher papazoglou serviceoriented computing concept characteristic direction pro ceedings fourth international conference web information system engineering wise ieee prezcastillo serrano piattini software modernization embrace quantum tech nology advance engineering software prezcastillo piattini quantum software engineering path prezcastillo piattini peterssen hevia ed short paper proceeding international workshop software engineering technology qset colocated ieee international conference quantum computing engineering ieee quantum week broom field colorado usa ceur workshop proceeding ceurwsorg http ceur org invit pdf piattini peterssen prezcastillo quantum computing new software engineering golden age acm sigsoft softw eng note http doi org piattini serrano perezcastillo petersen hevia toward quantum software engineering professional piattini peterssen prezcastillo hevia serrano hernndez guzmn paradela polo murina jimnez marqueo gallego tura phillipson murillo nio rodrguez talavera manifesto quantum software engineer ing programming short paper proceeding international workshop quantum software engineering programming talavera reina spain ceur work shop proceeding pistoia ahmad ajagekar buts chakrabarti herman jena minssen niroula rattew sun yalovetzky quantum machine learning finance arxiv http doi org iccad rahaman islam review progress problem quantum computing service gcaas perspective cloud computing global journal computer science technology ravichandran rai quality management system development organizational system per spective mi quarterly management information system http doi org software quality journal richardson microservices pattern manning publication rojo valencia berrocal moguel garciaalonso rodriguez trial tribulation developing hybrid quantumclassical microservices system arxiv sete zeng rigetti functional architecture scalable quantum computing ieee international conference rebooting computing icrc conference proceeding http doi org icrc sodhi quality attribute quantum computing platform arxiv preprint arxiv wang yao wang prime factorization algorithm based parameter optimiza tion ising model scientific report wang von laszewski younge kunze tao cloud computing perspective study new generation computing wild breitenbucher harzenetter leymann vietz zimmermann tos caqc two modeling style tosca automate deployment orchestration quan tum application proceeding ieee international enterprise distributed object com puting conference edoc http doi org edoc wille van meter naveh ibms qiskit tool chain working developing real quantum computer design automation test europe conference exhibition date ieee wolff microservices practical guide principle concept recipe lean publishing quantum computing framework complex system reliability assessment arxiv zhao quantum software engineering landscape horizon corr ab arxiv zinner dahlhausen boehme ehlers bieske fehring drug discovery today http doi org drudis publisher note springer nature remains neutral regard jurisdictional claim published map institutional affiliation enrique moguel assistant professor university extremum dura spain completed msc computer science uni versity carlos iii spain phd computer science university extremadura research interest include web engineering smart system quantum computing javier rojo phd student university extremadura predoctoral position university grant formation university professor spanish ministry sci ence innovation university completed msc com puter science university extremadura research interest include software engineering ehealth pervasive computing mobile computing software quality journal david valencia postdoctoral researcher university extremadura spain completed msc phd computer science university extremadura spain research interest include quantum computing parallel distrib uted computing software engineering javier berrocal associate professor department infor matics telematics system engineering university extremadura spain cofounder startup gloin com pleted phd degree european mention research interest include mobile computing context awareness pervasive sys tems internet thing fog computing jose garciaalonso associate professor department informatics telematics system engineering university extremadura spain cofounder startup gloin viable health ageing tech completed phd degree euro pean mention main research interest quantum software engineering ehealthcare eldercare mobile computing contextawareness pervasive system juan murillo full professor software engineering uni versity extremadura cofounder startup gloin via ble research interest include quantum software engineering software architecture mobile computing cloud computing software quality journal author affiliation enrique moguel javier rojo david valencia javier berrocal jose garciaalonso juan murillo javier rojo javirojounexes david valencia davalecounexes javier berrocal jberolmunexes jose garcia alonso jgaralounexes juan murillo juanmamuunexes quercus software engineering group extremadura avda cceres spain
perspective http doiorgsinformation science los alamo national laboratory los alamo usa center nonlinear study los alamo national laboratory los alamo usa quantum science center oak ridge usa mountain view usa institute quantum computing university waterloo waterloo ontario canada department applied mathematics university waterloo waterloo ontario canada institute quantum information matter california institute echnology pasadena usa department computing mathematical science california institute echnology pasadena usa theoretical division los alamo national laboratory los alamo usa email pcoleslanlgovthe recognition world quantum mechanical allowed researcher embed well established classi cal theory framework quantum hilbert space shannon information theory basis communica tion technology generalized quantum shannon theory quantum information theory opening possibility quantum effect could make information transmission effi cient field biology extended quantum biology allow deeper understanding biological process photosynthesis smell enzyme catalysis turing theory uni versal computation extended universal quantum com putation potentially leading exponentially faster simulation physical system one successful technology century machine learning aim classify cluster recognize pattern large datasets learning theory simultaneously developed alongside technology understand improve upon success concept support vector machine neural network generative adversarial network impacted sci ence technology profound way ingrained society degree fundamental improvement lead tremendous economic benefit similarly classical theory learning theory fact embedded quantummechanical formal ism formally speaking embedding lead field known quantum machine learning qml aim understand ultimate limit data analysis allowed law physic practically speaking advent quantum computer hope achieving socalled quantum advantage defined data analysis made qml exciting quantum com puting exploit entanglement superposition interference perform certain task substantial speedup classical com puting sometimes even exponentially faster indeed speedup already observed contrived problem reach ing data science still uncertain even theoretical level one main goal qmlin practice qml broad term encompasses task shown example applied quantum application discovering quantum algorithm optimiz ing quantum experiment quantum neural network qnn used process either classical quantum information even classical task viewed qml quan tum inspired note focus perspective qnns quantum deep learning quantum kernel even though field qml quite broad go beyond topic invention laser called solution search problem degree situation qml simi lar complete list application qml fully known nevertheless possible speculate area shown impacted qml example qml likely ben efit chemistry material science sensing metrology classical data analysis quantum error correction quantum algorithm design application produce data inherently quantum mechanical hence natural apply qml rather classical similarity classical quantum also difference qml employ quantum computer noise computer major issue includes hardware noise decoherence well statistical noise shot noise arises measurement quan tum state noise source complicate qml training process moreover nonlinear operation example neural activation function natural classical require careful design qml model due linearity quantum transformation field qml immediate goal near future demonstrating quantum advantage outperforming classi cal method data science application achieving goal require keeping open mind application benefit qml example may application inher ently quantum mechanical understanding qml method scale large problem size also required including analysis challenge opportunity quantum machine learning cerezo guillaume verdon hsinyuan huang lukasz cincio patrick cole intersection machine learning quantum computing quantum machine learning potential accelerating data analysis especially quantum data application quantum material biochemistry highenergy physic nevertheless challenge remain regarding trainability quantum machine learning model review current meth od application quantum machine learning highlight difference quantum classical machine learning focus quantum neural network quantum deep learning finally discus opportunity quantum advantage quantum machine learning nature computational cience september wwwnaturecomnatcomputsci perspective nature computational cienceof trainability gradient scaling prediction error availabil ity highquality quantum hardware also crucial finally note qml provides new way thinking established field quantum information theory quantum error correction quantum foundation viewing appli cation data science perspective likely lead new breakthrough framework data shown qml used learn either classical quantum data thus begin contrasting two type data classical data ultimately encoded bit state includes image text graph medical record stock price property molecule outcome biological experiment collision trace highenergy physic experiment quantum data encoded quantum bit called qubits higherdimensional analog qubit represented state normalized complex linear superposition two state contain information obtained physical process quan tum sensing quantum metrology quantum network quan tum control even quantum analogdigital transduction moreover quantum data also solution problem obtained quantum computer example preparation various hamiltonians ground state principle classical data efficiently encoded sys tems qubits classical bitstring length easily encoded onto qubits however said converse since one efficiently encode quantum data bit system state general nqubit system requires com plex number specified hence system qubits generally quantum hilbert space constitute ultimate data representation medium encode clas sical information also quantum information obtained physical processesin qml setting term quantum data refers data naturally already embedded hilbert space data quantum already form set quantum state set unitaries could prepare state quantum device via relation hand data classical first need encoded quantum system embedding mapping case hope qml model solve learning task accessing exponentially large dimen sion hilbert space one important reasonable conjecture make availability quantum data substantially increase near future mere fact people quantum computer available logically lead quantum problem solved quantum simulation performed computation produce quantum datasets hence reasonable expect rapid rise quantum data note near term quantum data stored classical device form efficient description quantum circuit prepare datasets finally level control quantum technology pro gresses coherent transduction quantum information physical world digital quantum computing platform may achieved would quantum mechanically mimic main information acquisition mechanism classical data physical world analogdigital conversion moreover expect eventual advent practical quantum error cor rection quantum memory allow store quantum data quantum computer model analyzing learning data requires parameter ized model many different model proposed qml application classical model neural network tensor network shown often useful analyzing data typealgorithm typeclassical quantumclassical quantumx dunixunia qml task qml usually considered four main task include task data either classical quantum algorithm either classical quantum left tensor network quantuminspired classical method analyze classical data right unitary timeevolution data quantum system classically compiled quantum circuit bottom left handwritten digit mapped quantum state classification quantum computer bottom right molecular groundstate data classified directly quantum computer figure show dependence groundstate energy distance atom drug design predict property new material speed simulation error mitigation design quantum code compile quantum circuit quantum sensing learn exotic quantum system dynamic speed optimization supervised unsupervised task quantum simulation qmlenhanced quantum computing quantum machine perceptionclassical data analysis key application qml qml envisioned bring computational advantage many application qml enhance quantum simulation chemistry example molecular ground state equilibrium state time evolution material science example quantum phase recognition generative design target property mind qml enhance quantum computing learning quantum error correction code syndrome decoder performing quantum control learning mitigate error compiling optimizing quantum circuit qml enhance sensing metrology extract hidden parameter quantum system finally qml may speed classical data analysis including clustering classification nature computational cience september wwwnaturecomnatcomputsci perspective nature computational ciencedata quantum experiment however due novelty focus discussion quantum model using quantum algo rithms one applies learning methodology directly quantum level similarly classical exist several different qml para digms supervised learning task based unsupervised learning data based reinforced learning reward based field exciting thriving supervised learning recently received considerable attention poten tial achieve quantum advantage resilience noise good generalization property make strong candidate nearterm application follows discus two popular qml model qnns quantum kernel shown particular emphasis qnns primary ingredient several supervised unsupervised reinforced learning scheme quantum neural network basic key ingredient qml model parameterized quantum circuit pqcs involve sequence unitary gate acting quantum data state free parameter trained solve problem hand pqcs conceptually analogous neural network indeed analogy made precise classical neural network formally embedded pqcs led researcher refer certain kind pqc qnns practice term qnn used whenever pqc employed data science application hence term qnn follows qnns employed three qml paradigm mentioned instance supervised classi fication task goal qnn map state different class distinguishable region hilbert space moreover unsupervised learning scenario ref clustering task mapped onto maxcut problem solved training qnn maximize distance class finally reinforced learn ing task ref qnn used qfunction approxima tor used determine best action learning agent given current state figure give example three distinct qnn architecture layer number qubits model increased preserved decreased show dissipative qnn generalizes classical feedforward network node corresponds qubit line connecting qubits uni tary operation term dissipative arises fact qubits layer discarded information forwardpropagates new qubits next layer figure show standard qnn quantum data state sent quantum cir cuit end qubits measured qubits discarded added deeper qnn finally depicts convolutional qnn layer qubits measured reduce dimension data preserving relevant feature many qnns proposed constructing qnn architecture currently active area research accommodate limitation nearterm quantum computer also employ hybrid approach model classical quantum neural network qnns act coherently quantum state deep classical neural network alleviate need highercomplexity quantum processing hybridization distributes representational capacity compu tational complexity across quantum classical computer moreover since quantum state generally mixture classi cal correlation quantum correlation hybrid quantumclassi cal model allow quantum computer additive resource increase ability classical model represent quantumcorrelated distribution application hybrid model include generating learning distilling information multipartiteentangled distribution quantum kernel alternative qnns researcher pro posed quantum version kernel method kernel method map input vector highdimensional vector space known reproducing kernel hilbert space kernel method learns linear function reproducing kernel hilbert space dimension reproducing kernel hilbert space could infinite enables kernel method powerful term expressiveness learn linear function potentially infinitedimensional space kernel trick employed requires efficient computation inner product highdimensional vector inner product also known kernel quantum kernel method consider computa tion kernel function using quantum computer many possible implementation example ref considered reproducing kernel hilbert space equal quantum state space finite dimensional another approach study infinitedimensional reproducing kernel hilbert space equivalent transforming classical vector using quantum com puter map transformed classical vector infinitedimensional vector inductive bias qnns quantum kernel important design criterion inductive bias bias refers fact model represents subset function naturally biased towards certain type function function relating input feature output prediction one aspect achieving quantum advantage qml aim qml model inductive bias inefficient simulate classical model classical dataset quantum dataset qnn encoding catdog metallicsuperconductor quantum kernel training model making predictionsuni xjuniauni iunia uni junia uni xiuniaxixjfig classification qml classical data image cat image dog encoded hilbert space via map ideally data different class represented dot star mapped different region hilbert space quantum data directly analyzed quantum device dataset composed state representing metallic superconducting system dataset used train qml model common paradigm qml qnns quantum kernel allow classification either classical quantum data kernel method fit decision hyperplane separate class model trained used make prediction nature computational cience september wwwnaturecomnatcomputsci perspective nature computational cienceindeed recently shown quantum kernel property constructed albeit subtlety regarding trainability generally speaking inductive bias encompasses assump tions made design model optimization method bias search potential model subset set possible model language bayesian probabilistic ory usually call assumption prior certain parameterization potential model qnns choosing particular embedding quantum kernel method search space hence prior adding regu larization term optimizer modulating learning rate keep search geometrically local also add inherently prior focus search thus provides inductive bias ultimately inductive bias design model combined choice training process make break model main advantage qml ability sample learn model least partially natively quantum mechanical inductive bias classical model discussion assumes dataset represented quantum mechanical nature one reason researcher typically believe qml greater promise quantum rather classical data training generalization ultimate goal classical quantum train model solve given task thus standing training process qml model fundamental success consider training process whereby aim find set parameter lead best performance latter accomplished instance minimizing loss function encoding task hand method training qml mod el leveraged classical stochastic gradient descent however shot noise hardware noise unique landscape feature often make offtheshelf classical optimization method perform poorly qml training due fact extracting information quantum state requires computing expectation value observable practice need estimated via measurement noisy quantum computer hence given finite number shot measurement repetition resolved additive error moreover expectation value subject corruption due hard ware noise realization led development quantumaware optimizers account quantum idiosyncrasy qml training process example shotfrugal optimizers employ stochastic gradient descent adapting number shot measurement needed iteration waste many shot optimization quantum natural gradi ent adjusts step size according local geometry landscape basis quantum fisher information metric quantumaware optimizers often outperform stan dard classical optimization method qml training task case supervised learning interested learning training dataset also making accurate prediction generalizing previously unseen data translates achieving small training prediction error second usually hinging first thus let con sider prediction error also known generalization error studied recently qml formally speaking error measure extent trained qml model performs well unseen data prediction error depends training error well complexity trained model training error large prediction error also typically large training error small complexity trained model large prediction error likely still large prediction error small training error small complexity trained model moderate sufficiently smaller training data size notion cnot gate qubits constantno qubits increase qubits decreasesujujuniuniauninouniuniauninh uni junia uni juniauni juniaa example qnn architecture classical feedforward neural network input hidden output layer generalized quantum setting dissipative qnn qubits discarded replaced new qubits algorithm show quantum circuit representation dissipative qnn circuit diagram horizontal line represents qubit logical operation quantum gate represented box connecting qubit line circuit read left right instance circuit initialized product state vextendsinglevextendsinglejangbracketrightbig nhno encodes input data number ancilla qubits hidden output layer initialized fiduciary state logical operation performed information forwardpropagates circuit ancillary qubits another possible qnn strategy keep qubits fixed without discarding replacing circuit represents consecutive application twoqubit gate controllednot denoted cnot gate qcnns measure discard qubits algorithm qcnn circuit considered built twoqubit quantum gate initialized nature computational cience september wwwnaturecomnatcomputsci perspective nature computational ciencecomplexity depends qml model good standing complexity quantum kernel method research needed qnn complexity recent theoreti cal analysis qnns show prediction performance closely linked number independent parameter qnn good generalization obtained number training data roughly equal number parameter give exciting prospect using small number train ing data obtain good generalization challenge qml heuristic field face period stagnation winter due unforeseen technical challenge indeed classical gap introducing single perceptron multilayer perceptron neural network also gap attempt train multiple layer introduction backpropagation method naturally would like avoid stagnation winter qml obvious strategy try determine chal lenges quickly possible focus research effort address ing fortunately qml researcher adopted strategy figure showcase different element qml mod el well challenge associated section detail various qml challenge could potentially avoided embedding scheme quantum datasets access high quality standardized datasets played key role advancing classical hence one could conjecture datasets crucial qml wellcurrently qml architecture benchmarked using clas sical datasets mnist dog cat iris using classical datasets natural due accessibility still unclear best encode classical information onto quantum state several embedding scheme proposed property must posse one property inner product output state embedding classically hard simulate otherwise quantum kernel would classically simulable addition embedding practically useful classification task state distinguish able region hilbert space unfortunately embeddings satisfy one property necessarily satisfy thus developing encoding scheme active area research especially equipped inductive bias containing information dataset furthermore recent result suggest achieving quan tum advantage classical data might straightforward hand qml model quantum data promising route towards quantum advantage despite fact still dearth truly quantum datasets qml recently proposed hence field need standardized quantum datasets easily preparable quantum state used benchmark qml model true quantum data quantum landscape training parameter qml model corresponds wide array case minimizing loss function navigating usually nonconvex loss function land scape search global minimum technically speaking loss function defines map model parameter space real value loss function value quantify instance low training error quantum aware classically hard simulate classical dataset encoding quantum datasettamed entanglementsufficient capacity expressibility qnn quantum kernel classical optimizerno barren plateau noise resilient prediction low generalization error local minimum barren plateau noise corruptionba dhighquality datasetefficiently preparablepractically usefulfig challenge qml several ingredient prior needed build qml model dataset encoding scheme classical data choice parameterized model loss function classical optimizer diagram show challenge different component model success qml model hinge accurate efficient training parameter however certain phenomenon hinder qml trainability include abundance lowquality local minimum solution well barren plateau phenomenon qml architecture exhibit barren plateau landscape becomes exponentially flat average number qubits increase seen transition dashed solid line presence hardware noise shown erase feature landscape well potentially shifting position minimum dashed solid line corresponds noiseless noisy landscape shown nature computational cience september wwwnaturecomnatcomputsci perspective nature computational ciencemodels error solving given task goal find set parameter minimizes error quantum landscape theory aim understand qml landscape property engineer local minimum barren plateau received substantial attention quantum landscape theory local minimum quantum landscape schematically shown similarly classical quantum loss landscape many local minimum ultimately lead overall nonconvex optimization nphard similar classical case method proposed address local minimum example variable structure qnns grow contract throughout optimization adaptively change model prior allow local minimum turned saddle point moreover evidence overparametrization phenomenon seen qml optimization undergoes computational phase transition due spurious local minimum disappearing whenever number parameter exceeds critical value overview barren plateau local minimum issue fac ing qml shown quantum landscape exhibit fascinating property known barren plateau depicted barren plateau loss landscape becomes aver age exponentially flat problem size occurs valley containing global minimum also shrink exponentially problem size leading socalled narrow gorge conse quence exponential resource example number shot required navigate landscape latter impact complexity qml algorithm even destroy quantum speedup since quantum algorithm typically aim avoid expo nential complexity normally associated classical algorithm barren plateau ignorance insufficient inductive bias barren plateau phenomenon studied deep hardware efficient qnns arise due high expressivity model making assumption underlying data deep hardwareefficient architecture aim solve problem able prepare wide range unitary evolution word prior hypothesis space relatively uninformed barren plateau unsharp prior caused ignorance lack sufficient inductive bias therefore mean avoid input knowledge construction qnnmaking design qnns good inductive bias problem hand key solution fortunately various strategy developed address barren plateau clever initialization pretrain ing parameter correlation example adding sharper prior search overexpressive param eterizations hardwareefficient qnns dis cuss qnn architecture designed introduce inductive bias barren plateau global observables mechanism linked barren plateau simply defining loss function based global observable observables measuring qubits lead barren plateau even shallow circuit sharp prior local observables comparing quantum state singlequbit level avoid issue latter due bad inductive bias rather fact comparing object exponentially large hilbert space requires exponential preci sion overlap usually exponentially small barren plateau entanglement entanglement one important quantum resource information processing task quantum computer also detrimental qml model qnns embedding scheme generate much entanglement also lead barren plateau issue arises visible qubits qnn measured qnns output entangled large number qubits hidden layer due entanglement information state stored nonlocal correlation across qubits hence reduced state visible qubits concentrate around maxi mally mixed state type barren plateau solved tam ing entanglement generated across qnn qnn architecture design one active area devel oping qnn architecture sharp prior since qnns fundamental ingredient supervised learning deep learning kernel method also unsupervised learning reinforced learning developing good qnn architecture crucial field instance shown qnns sharp prior avoid issue barren plateau altogether one example quantum convolutional neural network qcnns qcnns po sess inductive bias prior space archi tectures much sharper deep hardwareefficient architecture qcnns restricted hierarchically struc tured translationally invariant notable reduction expressivity parameter space dimension translational invariance assumption yield greater trainability idea embedding knowledge problem data set model achieve helpful inductive bias key improve trainability qml model recent proposal quan tum graph neural network scenario quantum subsys tems live graph potentially symmetry instance underlying graphpermutation symmetry quan tum communication dataset taken account quantum graph convolutional network similarly quantum recurrent neural network used scenario temporal recurrence parameter occursfor example quantum dynamic sta tionary timedependent quantum dynamical process better understand beyond aforementioned inductive bias temporal andor translational invariance grid graph take inspiration recent advance theory classical deep learning classical study group theory behind graph neural network namely concept invariance equivariance various group action input space led unifying theory deep learning architecture based group theory called geometric deep learning theory prescription create arbitrary architecture inductive bias suitable given set quantum physical data theory quantum geometric deep learning could key design architecture right prior transformation space inductive bias ensure trainability generalization study physic often identification inherent emergent symmetry particular system great potential future unifying theory quantum geometric deep learning provide consistent method create qml model architecture inductive bias encoding knowledge basic symmetry principle quantum physical system underlying given quantum datasets approach recently explored ref moreover work also shown lie algebra obtained generator qnn linked proper tie qml landscape presence barren plateau overparametrization phenomenon effect quantum noise presence hardware noise quantum computation one defining characteristic noisy intermediatescale quantum nisq computing despite fact qml research neglect noise analytical calculation numerical simulation still promising method nearterm compatible accounting effect hardware noise nature computational cience september wwwnaturecomnatcomputsci perspective nature computational cienceshould crucial aspect qml analysis wish pursue quantum advantage currently available hardware noise corrupts information forwardpropagates quantum circuit meaning deeper circuit longer runtimes particularly affected noise affect aspect model make quantum computer includes dataset preparation scheme well circuit used compute quantum kernel moreover using qnns noise hinder trainability lead noiseinduced barren plateau relevant feature landscape become exponentially suppressed noise depth circuit increase ultimately effect noise translate deformation inductive bias model original one effective reduction dimension quantum feature space despite critical impact quantum noise effect still largely unex plored particularly impact classical simulability qml model addressing noiseinduced issue likely require either reduction hardware error rate partial quantum error cor rection employing qnns relatively shallow whose depth grows sublinearly problem size qcnns error mitigation technique also improve perfor mance qml model presence noise although may solve noiseinduced trainability issue different approach dealing noise engineer qml model noiseresilient property position minimum changing due noise outlook potential quantum advantage first quantum advantage qml likely arise hidden parameter extraction quan tum data quantum sensing quantum state clas sificationregression fundamentally know theory optimal measurement nonlocal quantum measurement extract hidden parameter using fewer sample using qml one form search parameterization hypothesis measurement particularly useful optimal measurement known priorifor example identifying measurement extract order parameter identifies particular phase matter information classical parameter embed ded structure quantum correlation subsystem natural trained qml model good inductive bias exhibit advantage local measurement classical representation another area application classical parameter extraction may yield advantage quantum machine perception quantum sensing metrology beyond leveraging variational search multipartiteentangled state input exposure quantum signal along optimization optimal control andor postprocessing scheme find opti mal measurement estimation hidden parameter incoming signal particular variational approach may able find optimal entanglement exposure measurement scheme filter signal noise akin variationally learn ing quantum error correcting code filter signal noise instead applied quantum metrology beyond classical parameter extraction embedded quantum data may advantage discovery quantum error correcting code quantum error correcting code fundamentally encode data typically nonlocally subsystem subspace hilbert space deep learning fundamentally discovery submanifolds data space identifying decod ing subspacessubsystems hilbert space correspond quantum error correction subspacesubsystem natural area differentiable quantum computing may yield advantage barely explored mainly due difficulty gaining insight smallscale numerical simulation fundamentally akin quantum data version classical parameter embedding extraction advantage finally quantum advantage generative modeling may achieved ground state equilibrium state quantum dynamic generated using model incorporating qnns situation distribution sampled classically yield accurate prediction extensive generalization compared classical approach nearestterm possibil ity demonstrating advantage would likely varia tional optimization continuous time optimal control level analog quantum simulator quantum advantage look like data originate quantummechanical process experiment chemistry material science biology physic likely see exponential quantum advantage quantum advantage could sample complexity time complexity exponen tial advantage sample complexity always implies exponen tial advantage time complexity reverse generally true recently shown exponential quantum advantage sample complexity quan tum sensor quantum memory quantum computer retrieve store process quantum information experiment sample complexity advantage proven rigorously without possibility dequantized future impossible find improved classical algorithm exponential advantage substantial quantum advantage recently demonstrated sycamore processor raising hope achieving quantum advantage using nisq device situation advantage time complexity subtle classical simulation quantum process intractable many case hence exponential advantage time complexity would expected prevalent however cautious availability data task make classical algorithm computationally powerful instance ref show worst case exponential quan tum advantage predicting groundstate property geometri cally local gapped hamiltonians furthermore emergence effective classical theory quantummechanical process could enable classical machine provide accurate prediction example density functional theory allows accurate prediction molecular property accurate approximation exchangecorrelation functionals conducting realworld experiment still likely exponential advantage po sible physical system practical interest rigor ous proof yet data purely classical origin appli cation recommending product customer performing portfolio optimization processing human language everyday image known exponential advantage however still reasonable expect polynomial advantage furthermore quadratic advantage rigorously proven purely classical problem therefore likely potential impact long term faulttolerant quantum com puters albeit speedup notably dampened overhead quantum error correction currently known faulttolerant quantum computing scheme transition faulttolerant era beyond qml proposed candidate achieve quantum advantage near term using nisq device still pose question usability future researcher envision two different chronological era postnisq first refer partial error corrected quantum computer enough nature computational cience september wwwnaturecomnatcomputsci perspective nature computational ciencephysical qubits couple hundred sufficiently small error rate allow small number fully errorcorrected logical qubits since one logical qubit comprised multiple physical qubits era freedom trade split qubits device subset errorcorrected qubits along subset nonerrorcorrected qubits next era faulttolerant era arise quantum hardware large number errorcorrected qubits indeed easily envision qml useful postnisq era first partial errorcorrected era qml mod el able execute highfidelity circuit thus improved performance naturally enhance trainability model mitigating noiseinduced barren plateau also reduce noiseinduced classification error qml model importantly qml likely see widespread critical faulttolerant era quantum algorithm quantum simulation able accurately prepare quantum data faithfully store quantum memory therefore qml natural model learn infer make prediction quantum data quantum computer learn data directly furtherterm horizon anticipate possible capture quantum data nature directly via transduction natural analog form one quantum digital example via quantum analogdigital interconversion data able shuttled around quantum network dis tributed andor centralized processing qml model using faulttolerant quantum computation errorcorrected quantum communication point qml reached stage simi lar today edge sensor capture data data relayed central cloud model trained aggregated data modern advent widespread classical arose point abundant data one could anticipate ubiquitous access quantum data faulttolerant era could similarly propel qml even greater widespread received january accepted august published online september reference nielsen chuang quantum computation quantum information cambridge univ press brooke quantum effect biology golden rule enzyme olfaction photosynthesis magnetodetection proc soc deutsch quantum theory churchturing principle universal quantum computer proc soc wiebe kapoor svore quantum deep learning preprint httpsarxivorgabs schuld sinayskiy petruccione introduction quantum machine learning contemp phys biamonte quantum machine learning nature arute quantum supremacy using programmable superconducting processor nature cincio suba sornborger cole learning quantum algorithm state overlap new phys tranter multiparameter optimisation magnetooptical trap using deep learning nat commun kaubruegger vasilyev schulte hammerer zoller quantum variational optimization ramsey interferometry atomic clock phys rev cong choi lukin quantum convolutional neural network nat phys tang quantuminspired classical algorithm recommendation system proc annual acm sigact symposium theory computing association computing machinery huang power data quantum machine learning nat commun banchi pereira pirandola generalization quantum machine learning quantum information standpoint prx quantum degen reinhard cappellaro quantum sensing rev mod phys giovannetti lloyd maccone advance quantum metrology nat photon chiribella ariano perinotti theoretical framework quantum network phys rev alessandro introduction quantum control dynamic chapman hallcrc applied mathematics nonlinear science taylor francis verdonakzam quantum analogdigital interconversion encoding decoding quantum signal patent application rebentrost mohseni lloyd quantum support vector machine big data classification phys rev lett schuld killoran quantum machine learning feature hilbert space phys rev lett lloyd schuld ijaz izaac killoran quantum embeddings machine learning preprint httpsarxivorgabs schuld sweke meyer effect data encoding expressive power variational quantummachinelearning model phys rev roffe quantum error correction introductory guide contemp phys shor scheme reducing decoherence quantum computer memory phys rev havlek supervised learning quantumenhanced feature space nature liu arunachalam temme rigorous robust quantum speedup supervised machine learning nat phys schuld supervised quantum machine learning model kernel method preprint httpsarxivorgabs otterbach unsupervised machine learning hybrid quantum computer preprint httpsarxivorgabs kerenidis landman luongo prakash qmeans quantum algorithm unsupervised machine learning advance neural information processing system ed wallach curran saggio experimental quantum speedup reinforcement learning agent nature skolik jerbi dunjko quantum agent gym variational quantum algorithm deep qlearning quantum huang quantum advantage learning experiment science larose coyle robust data encoding quantum classifier phys rev caro generalization quantum machine learning training data nat commun caro outofdistribution generalization learning quantum dynamic preprint httpsarxivorgabs caro gilfuster meyer eisert sweke encoding dependent generalization bound parametrized quantum circuit quantum cerezo variational quantum algorithm nat rev phys wan dahlsten kristjnsson gardner kim quantum generalisation feedforward neural network npj quantum inf beer training deep quantum neural network nat commun schuld sinayskiy petruccione quest quantum neural network quantum inf process dallairedemers killoran quantum generative adversarial network phys rev farhi neven classification quantum neural network near term processor preprint httpsarxivorgabs killoran continuousvariable quantum neural network phys rev re bausch recurrent quantum neural network adv neural inf process syst broughton tensorflow quantum software framework quantum machine learning preprint httpsarxivorgabs verdon mark nanda leichenauer hidary quantum hamiltonianbased model variational quantum thermalizer algorithm preprint httpsarxivorgabs cortes vapnik supportvector network mach learn kbler buchholz schlkopf inductive bias quantum kernel adv neural inf process syst nature computational cience september wwwnaturecomnatcomputsci perspective nature computational cience kbler arrasmith cincio cole adaptive optimizer measurementfrugal variational algorithm quantum arrasmith cincio somma cole operator sampling shotfrugal optimization variational algorithm preprint httpsarxivorgabs lowe dub cole arrasmith adaptive shot allocation fast convergence variational quantum algorithm preprint httpsarxivorgabs sweke stochastic gradient descent hybrid quantumclassical optimization quantum stokes izaac killoran carleo quantum natural gradient quantum koczor benjamin quantum natural gradient generalised nonunitary circuit preprint httpsarxivorgabs sharma reformulation nofreelunch theorem entangled data set phys rev lett abbas power quantum neural network nat comput sci rosenblatt perceptron perceiving recognizing automaton project para report cornell aeronautical laboratory haykin neural network comprehensive foundation prentice hall rumelhart hinton williams learning representation backpropagating error nature hubregtsen training quantum embedding kernel nearterm quantum computer preprint httpsarxivorgabs thanasilp wang nghiem cole cerezo subtlety trainability quantum machine learning model preprint httpsarxivorgabs huang quantum advantage learning experiment science cotler huang mcclean revisiting dequantization quantum advantage learning task preprint httpsarxivorgabs chen cotler huang hierarchy replica quantum advantage preprint httpsarxivorgabs chen cotler huang exponential separation learning without quantum memory ieee annual symp foundation computer science focs ieee perrier oussry ferrie qdataset quantum datasets machine learning preprint httpsarxivorgabs schatzki arrasmith cole cerezo entangled datasets quantum machine learning preprint httpsarxivorgabs arrasmith holmes cerezo cole equivalence quantum barren plateau cost concentration narrow gorge quantum sci technol bittel kliesch training variational quantum algorithm nphard phys rev lett bilkis cerezo verdon cole cincio semiagnostic ansatz variable structure quantum machine learning preprint httpsarxivorgabs larose tikku oneeljudy cincio cole variational quantum state diagonalization npj quantum inf kiani lloyd maity learning unitaries gradient descent preprint httpsarxivorgabs larocca garcamartn cole cerezo theory overparametrization quantum neural network preprint httpsarxivorgabs mcclean boixo smelyanskiy babbush neven barren plateau quantum neural network training landscape nat commun cerezo sone volkoff cincio cole cost function dependent barren plateau shallow parametrized quantum circuit nat commun cerezo cole higher order derivative quantum neural network barren plateau quantum sci technol arrasmith cerezo czarnik cincio cole effect barren plateau gradientfree optimization quantum holmes sharma cerezo cole connecting ansatz expressibility gradient magnitude barren plateau prx quantum pesah absence barren plateau quantum convolutional neural network phys rev volkoff cole large gradient via correlation random parameterized quantum circuit quantum sci technol sharma cerezo cincio cole trainability dissipative perceptronbased quantum neural network phys rev lett holmes barren plateau preclude learning scrambler phys rev lett marrero kieferova wiebe entanglement induced barren plateau prx quantum uvarov biamonte barren plateau cost function locality variational quantum algorithm phys patti najafi gao elin entanglement devised barren plateau mitigation phys rev re wang noiseinduced barren plateau variational quantum algorithm nat commun verdon learning learn quantum neural network via classical neural network preprint httpsarxivorgabs verdon quantum graph neural network preprint httpsarxivorgabs bronstein bruna cohen velikovi geometric deep learning grid group graph geodesic gauge preprint httpsarxivorgabs larocca groupinvariant quantum machine learning preprint httpsarxivorgabs skolik cattelan arkoni bck dunjko equivariant quantum circuit learning weighted graph preprint httpsarxivorgabs meyer exploiting symmetry variational quantum machine learning preprint httpsarxivorgabs larocca diagnosing barren plateau tool quantum optimal control preprint httpsarxivorgabs wang error mitigation improve trainability noisy variational quantum algorithm preprint httpsarxivorgabs deshpande tight bound convergence noisy random circuit uniform distribution preprint httpsarxivorgabs hakkaku tashima mitarai mizukami fujii quantifying fermionic nonlinearity quantum circuit preprint httpsarxivorgabs bultrini battle clean dirty qubits era partial error correction preprint httpsarxivorgabs temme bravyi gambetta error mitigation shortdepth quantum circuit phys rev lett czarnik arrasmith cole cincio error mitigation clifford quantumcircuit data quantum endo cai benjamin yuan hybrid quantum classical algorithm quantum error mitigation phys soc jpn sharma khatri cerezo cole noise resilience variational quantum compiling new phys cincio rudinger sarovar cole machine learning noiseresilient quantum circuit prx quantum verdon mohseni quantum machine perception patent application meyer borregaard eisert variational toolbox quantum multiparameter estimation npj quantum inf beckey cerezo sone cole variational quantum algorithm estimating quantum fisher information phys rev re wang experimental quantum hamiltonian learning nat phys layden cappellaro spatial noise filtering error correction quantum sensing npj quantum inf johnson romero olson cao aspuruguzik qvector algorithm devicetailored quantum error correction preprint httpsarxivorgabs peruzzo variational eigenvalue solver photonic quantum processor nat commun mcardle variational ansatzbased quantum simulation imaginary time evolution npj quantum inf cirstoiu variational fast forwarding quantum simulation beyond coherence time npj quantum inf huang kueng preskill informationtheoretic bound quantum advantage machine learning phys rev lett aharonov cotler quantum algorithmic measurement nat commun chia samplingbased sublinear lowrank matrix arithmetic framework dequantizing quantum machine learning proc annual acm sigact symposium theory computing association computing machinery nature computational cience september wwwnaturecomnatcomputsci perspective nature computational cience preskill quantum computing nisq era beyond quantum huang kueng torlai albert preskill provably efficient machine learning quantum manybody problem preprint httpsarxivorgabs hohenberg kohn inhomogeneous electron gas phys rev kohn nobel lecture electronic structure matter wave function density functionals rev mod phys alcazar leytonortega perdomoortiz classical versus quantum model machine learning insight finance application mach learn sci technol bouland van dam joorati kerenidis prakash prospect challenge quantum finance preprint httpsarxivorgabs manning schutze foundation statistical natural language processing mit press rus image processing handbook crc press grover fast quantum mechanical algorithm database search proc annual acm symposium theory computing association computing machinery bernstein vazirani quantum complexity theory siam comput babbush focus beyond quadratic speedup errorcorrected quantum advantage prx quantum georgescu ashhab nori quantum simulation rev mod phys berry child cleve kothari somma simulating hamiltonian dynamic truncated taylor series phys rev lett lvovsky sander tittel optical quantum memory nat photon sanchezlengeling aspuruguzik aln inverse molecular design using machine learning generative model matter engineering science acknowledgement acknowledges support los alamo national laboratory lanl ldrd program project number also supported center nonlinear study lanl supported department energy office science office advanced scientific computing research accelerated research quantum computing program also acknowledges support department energy office science national quantum information science research center quantum science center also supported nnsa advanced simulation computing beyond moore law program lanl thanks sbahi martinez velickovic useful discussion formerly known googlex part alphabet family company includes google verily waymo others wwwxcompany supported google phd fellowship author contribution drafted manuscript structure manuscript written revised competing interest author declare competing interest additional information correspondence addressed patrick cole peer review information nature computational science thanks dan browne mile contribution peer review work primary handling editor jie pan collaboration nature computational science team reprint permission information available wwwnaturecomreprints publisher note springer nature remains neutral regard jurisdictional claim published map institutional affiliation springer nature licensor hold right article publishing agreement author rightsholders author selfarchiving accepted manuscript version article solely governed term publishing agreement applicable law springer nature america inc nature computational cience september wwwnaturecomnatcomputsci
exploratory study challenge engineering quantum application cloud daniel vietz johanna barzen frank leymann benjamin weder vladimir yussupov university stuttgart institute architecture application system universittsstr stuttgart germany abstract rapid evolution quantum computation cloud creates considerable opportunity mul tiple realworld application scenario including chemical simulation optimization machine learn ing typical quantum application hybrid consist classical quantum component latter require quantum computer execution often offered cloud service thus implement quantum application developer need expertise integration quantum classical component application well understanding relevant cloudspecific challenge limitation work explore challenge encountered designing implementing hybrid quantum application cloud identify limitation current quan tum cloud service make integration complex achieve implemented four quantum application highlighting different scenario using quantum software component cloud applica tions analyzed challenge limitation encountered implementation process documented key observation addition discus open research question way address improve process developing quantum application cloud keywords cloud computing quantum computing hybrid quantum application quantumclassic integration introduction quantum computing emerging field promise solve many problem different domain efficiently better precision compared classical computer optimization machine learning simulation chemical molecule quantum computer often provided cloud service making available broader audience allowing usage real application scenario however existing quantum computer available resource prone error due instability generated quantum state addition operation quantum computer often imprecise thus current quantum computer referred noisy intermediatescale quantum nisq computer due limitation given fact quantum computer superior certain case fully replace classical counterpart instead quantum computer ndquantum software engineering technology workshop colocated ieee international conference quantum computing engineering qce ieee quantum week october envelopeopenvietziaasunistuttgartde vietz barzeniaasunistuttgartde barzen leymanniaasunistuttgartde leymann wederiaasunistuttgartde weder yussupoviaasunistuttgartde yussupov orcid vietz barzen leymann weder yussupov copyright paper author permitted creative common license attribution international ceur workshop proceedingshttpceurwsorg issn ceur workshop proceeding ceurwsorg employed solving specific task best suited whereas remaining task performed using classical computer preparing input quantum algorithm storing data processing user interaction therefore hybrid quantum application hqapps short inherently combine world classical quantum computer consequently implement hqapps cloud software engineer need deal implementation integration quantum software component rely specialized service ibm quantum ibmq aws braket azure quantum classical software implemented using traditional cloud offering result development hqapps requires team combine quantumspecific expertise also expertise traditional domain cloud computing software integration serviceoriented architecture workflow technology therefore crucial understand challenge interdisciplinary team hqapps developer facing work explore common challenge different domain encoun tered designing implementing hqapps combine traditional quantum cloud offering commercial provider therefore main research question work formulated follows design implementation challenge commonly encountered engineering hqapps cloud address question design implement four quantum application scenario based existing literature focusing engineering hqapps result present scenario using different type interaction varying complexity simple application generating random bit string composite application involve integrating different quantum task hybrid algorithm rely optimization loop next analyze challenge encountered design implementation application scenario iii discus key observation open research question covered background fundamental section section present implemented scenario section present discus identified challenge section outline related work finally section give summary outlook future work background fundamental general different quantum computation model gatebased measurement based quantum annealing computation model computation model influence implementation quantum algorithm work focus gatebased quantum computation model using socalled quantum circuit formulate computation step executed quantum computer within quantum circuit multiple qubits form quantum register specific operation socalled quantum gate applied register quantum computer often provided service cloud hence used demand broader audience quantum cloud service typically offer application programming interface apis enabling execution quantum circuit real quantum processing unit qpus quantum simulator running classical hardware since qpus also simulator enable computing quantum circuit term quantum computer facilitate support implementation quantum circuit execution quantum computer provider usually offer software development kit sdks since today quantum computer algorithm already applicable nisq era hybrid combine computation quantum classical computer variational algorithm variational quantum eigensolver vqe determining eigenvalue quantum approximation optimization algorithm qaoa approx imating solution optimization problem common type hybrid algorithm parametrized quantum circuit called ansatz optimize measuring result classically varying input parameter ansatz iteration integration scenario section present four scenario highlight various quantumclassical integration aspect including different kind interaction composition multiple quantum task one application implementation hybrid algorithm control flow encompassing clas sical quantum task first two scenario show quantum classical component composed simple sequence action last two scenario show complex composition intended control flow span classical quantum component loop condition explain complex scenario model using business process model notation bpmn wellknown standard provides visual notation modeling business process implemented scenario using cloud offering two provider namely amazon ibm quantum component implemented using python based qiskit aws braket sdk respectively additional library boto pennylane also used implement individual scenario developed workflow model specified executed using camunda workflow system comprises graphical modeling tool stateoftheart bpmn workflow engine implemented scenario opensource available via github scenario random data point generation due inherent quantummechanical property quantum computer facilitate generating true random bit first scenario shown subfigure focus generating random bit string using quantum computer postprocessing generated random bit using classical computer quantum task generate random bit string need integrated classical task assemble point interprets random bit store desired format twodimensional data point finally another classical task need persist generated random data scenario minimum distance classification second scenario data point classified wrt given set class using distance centroid distance calculated quantum computer using quantum distance estimator subfigure figure show classical task load centroid getting invoked triggerevent data point storage insert event centroid loaded distance data point centroid computed using assemble point generate rand bit string user store point scenario random data point generation trigger data point storage quantum distance estimator label closest centroid find minimum distance load centroid scenario minimum distance classification quantum task classical task direct call event driven call figure example scenario sequential quantum classical task integration quantum task called quantum distance estimator quantum task normalizes data point encodes angle unit circle us swaptest check extent prepared quantum state differ result used two classical task first find minimum distance second label information data point scenario kmeans clustering scenario demonstrates composition component first two scenario implement quantum kmeans clustering algorithm subfigure figure depicts composition required component bpmn process first execution scheduled timer start event trigger execution scenario every hour first task called generate random data point depicted bpmn subprocess task generates random data point quantum computer executes random data point generator see scenario first activity random data point used initial value centroid recalculated later data point centroid loaded using classical service task data point assigned centroid using another sub process minimum distance classification scenario last task recalculates centroid using mean data point assigned bpmn gateway used model loop aforementioned three task repeated algorithm converges reaching maximum number iteration centroid longer need updated load point centroidsrecalculate centroidsgenerate random data point classify pointsconverged every scenario kmeans clustering create hamiltonian execute ansatzadapt parameter evaluate costconverged scenario variational quantum eigensolver seq flowmessage start eventtimer start eventend eventservicetaskquantumcircuit exec tasksub processexclusive gateway figure example scenario quantum classical task integration using workflow scenario variational quantum eigensolver scenario represents hybrid quantumclassical algorithm called variational quantum eigensolver vqe approximating smallest eigenvalue hermitian matrix sub figure show scenario modeled bpmn based input matrix first task creates hamiltonian combination several pauli string following structure variational quantum algorithm ansatz executed quantum computer afterwards cost function evaluated defined expectation value hamil tonian sum expectation value pauli string workflow minimizes cost function tweaking parameter ansatz due variational principle expectation value always greater equal smallest eigenvalue thus expectation value get minimized order approximate minimum eigenvalue algorithm stop change expectation value certain threshold engineering challenge hqapps cloud design implementation hqapps require expertise different domain quantum computing cloud computing workflow technology etc section discus various challenge different domain encountered designing implementing scenario introduced section challenge identify quantumclassical split one first encountered challenge task splitting problem classical quantum component challenge quantumclassical split twofold firstly necessary identify problem part suitable computation quantum comput er requires identifying suitable quantum algorithm assessing relevant functional nonfunctional characteristic performance context given problem one need also decide computation model used implement quantum part particular concern decision universal computation model gatebased measurementbased quantum computing restricted computation model quantum annealing since quantum circuit wrapped classical source code handling execution classical logic combined wrapper thus second aspect decide classical logic implemented tightly coupled quantum circuit example loading centroid scenario combined execution quantum distance estimator key observation open research turning requirement architecture design difficult classical application well quantum application one way facilitate process model hqapps using workflow language provide good overview intended control flow wrt involved activity serve basis identifying better component boundary based observed data locality interaction pattern although separation classical quantum problem part separate component make implementation concise maintainable strict separation always preferable due performance reason example variational algorithm described scenario comprise quantum classical computation splitting introduces additional communication overhead thus preferable case combine quantum classical part one component also used strategy implementation scenario good quantumclassic split via properlydefined component boundary improves maintainability reusablility application component time ensures efficient execution however finding suitable quantumclassical split highly problem dependent requires research challenge identify suitable quantum service type another challenge encountered designing hqapps choose cloud service type suiting defined application requirement instance one important factor consider whether selected quantum cloud service support required interaction type implementation direct api call key observation open research general available quantum service offering fall one following four category icircuit composer offer combination graphical textual quantum circuit editor example ibmq composer editor quantum inspire iijupyter notebook service enable development direct execution quantum com ponents documentstyle manner source code accompanied documentation console instruction ibm quantum lab aws braket notebook offering fall category iii quantum computation service qcaas offering receive computation request api thus require construct quantum circuit first sent interface ivhybrid cloud service allow transmitting hybrid component consisting classical quantum part managed executed service provider although circuit composer allow create quantum circuit stored cloud executed multiple time various quantum computer allow external input variable used establish connection service currently jupyter notebook service provide endpoint implementation triggered externally future however provider could add functionality making jupyter notebook service sufficient option hosting invocable quantum component structure current qcaas offering implies hosting classical cloud component connect qcaas apis perform quantum computation first classical component creates quantum circuit sent api qcaas get executed quantum computer response interpreted classical component defines external interface needed invocation hybrid cloud service enable create hybrid quantum component hosted cloud invoked http endpoint scenario also eventdriven interaction component however none currently available quantum cloud service aware allow type interaction thus suitable offering classical cloud must selected example quantum component implemented function hosted faa offering aws lambda ibm cloud function establishing connection qcaas offering function bound specific event get executed occur challenge decide quantum computer utilization strategy quantum computer often shared multiple user quantum circuit typically queued execution compared actual computation time quantum computer result rather long total execution duration therefore implementing hqapp important choose desired quantum computer utilization strategy key observation open research since execution hqapps depends selected quantum computer suitable utilization strategy must selected multicircuit scenario decided whether several quantum computer execute quantum circuit one furthermore must decided select quantum computer since quantum computer provide varying capability qubit count computation accuracy one strategy find suitable instance given problem instance fewest amount request waiting queue since utilization available quantum computer high many quantumspecific service offer book timeslots access certain quantum computer since incurs additional cost especially useful scenario perform many quantum computation scenario scenario booking time slot single circuit execution rise question collect multiple execution request fit time slot estimate execution time quantum component additionally must considered whether quantum circuit executed sequentially parallel example scenario distance estimation multiple data point independent computed parallel contrast scenario requires iterative execution quantum circuit parallel computing possible bulk processing feature used transmit multiple quantum circuit simultaneously rather sequentially avoid sending circuit individually interface hybrid cloud service used upcoming service combine execution quantum computation classical computation allow iterative execution multiple circuit behind queue thus especially useful iterative scenario scenario determine appropriate quantum computer utilization strategy important first analyze overall structure hqapp although analysis currently manual task could automated certain way example iterative nature application scenario scenario identified detecting loop workflow model additional action reserve timeslots access integrated extending workflow however availability quantum computer might assured anytime time slot might postponed another approach could merge existing implementation quantum classical task hybrid component using qiskit runtime however automated realization may pose challenge quantum classical component implemented different programming language challenge select component integration style individual component need integrated form application system raising question integrate quantum component classical component key observation open research general different approach used integrate different component example tightlycoupled component interact mean hardcoded endpoint call however tight coupling conflict separation concern principle hence hindering maintainability avoid looselycoupled approach used required component composed using workflow technology quantumspecific extension conventional workflow technology also proposed another option messagingbased integration decouple preparation quantum circuit processing result qcaas offering used external component integrated using service activator pattern show pattern quantum circuit longer sent directly qcaas arequest queue service activator listens service activator hosted paas offering communicates qcaas api submit quantum circuit poll computation result forward result response queue challenge implement specific hardware implementing hqapps one issue must taken account choice certain quantum hardware one quantum service offering might provide several quantum hardware option influence actual implementation key observation open research contrast classical cloud service offering quantum cloud service incorporate virtualization technique instead user must manu ally select quantum computer align implementation selecting instance least number job queue mentioned challenge one approach avoid manual selection since incorporate information number required qubits might pick unsuitable quantum computer execute certain quantum circuit thus approach useful circuit requiring qubits case small quantum computer also chosen another possible solution make hardware selection configurable within application implementing content enricher pattern figure show example implementation content enricher application still creates quantum circuit however without referencing concrete quantum computer qcaas api measure result quantum circuit service activator put trigger pull put request queueexecute respone response queue figure messagebased integration qcaas using service activator api quantum circuit content enricher knowledge base quantum circuitqcaasqpus figure configurable hardware selection using content enricher pattern information injected quantum circuit pas however multiple hardwarespecific criterion must considered enable configurable behavior connectivity qubits average error rate different operation additionally important check whether given quantum circuit executed successfully selected quantum computer using existing tool help automating selection nisqera however selection suitable quantum computer running existing implementation one aspect addition implementation must aware hardware limitation nisq era avoid creating large quantum circuit hardware continues improve question arises implement application flexible possible grow progress related work already various publication discus challenge developing hqapps haman present different problem qcaas offering general focus reliability security issue leymann barzen point several pitfall successful efficient implementation quantum algorithm nisq era algorithm often presented without considering crucial step state preparation oracle expansion connectivity etc rojo present empirical study describing tribulation quantumclassical microservice system however focus technical property thenumber qubits andresponse time current quantum cloud service hevia olivera present requirement quantum service provider discussing several challenge related technical limitation diversity current offering previous work present development lifecycle quantum application showing expertise different area required aforementioned work discus challenge related technical condition pure implementation quantum algorithm work explore engineering challenge faced interdisciplinary team hqapps developer summary future work work analyzed challenge engineering hqapps cloud conducting exploratory study comprising four different integration scenario shown important understand split problem classical quantum component one hand finegranular decomposition lead better maintainability reusability hand crucial minimize communication overhead quantum classical computation scenario hybrid algorithm one strategy thus start monolithfirst implementation decompose classical quantum component paying attention avoid unnecessary communication overhead another important step decide type quantum service utilize available quantum computer may involve booking access result quantum computer shared among multiple application also important decide individual component integrated integration style influence design implementation hqapp component several option messagebased integration orchestration based workflow technology contrast tightlycoupled hard coded integration aforementioned approach robust change offer better reusability also require additional expertise regarding quantumspecific cloud service quantumspecific cloud service unlike classical cloud service incorporate virtualization technique hence implementation hqapps hardwarespecific run arbitrary quantum computer future work aim improve tooling support design quantum application thereby plan extend previous work also incorporate decision support guide developer decision specific tool service furthermore also want evaluate feasibility different virtualization approach quantum hardware acknowledgment work partially funded bmwi project planqk mkn project sequoia funded badenwrttemberg ministry economy labour housing dfgs excellence initiative project simtech exc reference national academy science engineering medicine quantum computing progress prospect national academy press gabor holy grail quantum artificial intelligence major challenge accelerating machine learning pipeline arxiv barzen leymann falkenthal vietz weder wild relevance nearterm quantum computing cloud humanity perspective cloud computing service science acn quantum technology roadmap european community view new journal physic leymann barzen falkenthal vietz weder wild quantum cloud application potential research opportunity proceeding international conference cloud computing service science closer scitepress preskill quantum computing nisq era beyond quantum leymann barzen bitter truth gatebased quantum algorithm nisq era quantum science technology leymann barzen hybrid quantum application need two orchestration super position software architecture perspective arxiv ibm ibm quantum url httpsquantumcomputingibmcom amazoncom inc aws braket url httpsawsamazoncombraket microsoft azure quantum url httpsazuremicrosoftcomservicesquantum weder barzen leymann vietz quantum software development lifecycle arxiv zhao quantum software engineering landscape horizon arxiv prezdelgado perezgonzalez towards quantum software modeling language proceeding ieeeacm international conference soft ware engineering workshop icsew association computing machinery miszczak model quantum computation quantum programming language bulletin polish academy science technical science vietz barzen leymann wild decision support quantum application developer categorization comparison analysis existing technology computational science icc springer international publishing larose overview comparison gate level quantum software platform quan tum peruzzo variational eigenvalue solver photonic quantum processor nature communication farhi goldstone gutmann quantum approximate optimization algorithm arxiv weigold barzen leymann vietz pattern hybrid quantum algorithm proceeding thsymposium summer school serviceoriented computing summersoc springer international publishing omg business process model notation bpmn version object management group omg camunda camunda bpmn workflow system url httpscamundacom university stuttgart practical aspect quantum engineering challenge url httpsgithubcomvietzdqccloudchallenges herrerocollantes garciaescartin quantum random number generator review modern physic schuld fingerhuth petruccione implementing distancebased classifier quantum interference circuit epl europhysics letter khan awan vallllosera kmeans clustering noisy intermediate scale quantum computer arxiv weigold barzen salm leymann data encoding pattern quantum computing proceeding thconference pattern language program hillside group accepted publication kang heo choi moon han implementation swap test two unknown state photon via crosskerr nonlinearities decoherence effect scientific report prezcastillo serrano piattini software modernization embrace quantum technology advance engineering software salm barzen breitenbcher leymann weder wild nisq ana lyzer automating selection quantum computer quantum algorithm proceeding symposium summer school serviceoriented computing summersoc springer international publishing last quantum inspire qutechs platform codevelopment collaboration quantum computing novel patterning technology semiconductor memsnems moems volume international society optic photonics spie ibm qiskit runtime url httpsgithubcomqiskitpartnersqiskitruntime leymann roller production workflow concept technique prentice hall ptr weder breitenbcher leymann wild integrating quantum computing workflow modeling execution proc thieeeacm int conf utility cloud computing ucc ieee computer society hohpe woolf enterprise integration pattern designing building deploying messaging solution addisonwesley salm barzen leymann weder criterion successfully executing circuit nisq era effreally mean proceeding acm sigsoft international workshop architecture paradigm engineering quantum software apeqs acm rahaman islam review progress problem quantum computing service qcaas perspective cloud computing global journal computer science technology rojo valencia berrocal moguel garcaalonso rodriguez trial tribulation developing hybrid quantumclassical microservices system arxiv hevia olivera requirement quantum software platform stquantum software engineering technology workshop weder barzen leymann salm vietz quantum software lifecycle proceeding acm sigsoft international workshop architecture paradigm engineering quantum software apeqs acm
martin fernando brito abreualberto rodrigues silvaricardo prezcastillo ed international conference faro portugal september proceedingsquality information communication technologycommunications computer information science communication computer information science commenced publication founding former series editor simone diniz junqueira barbosa phoebe chen alfredo cuzzocrea xiaoyong orhun kara igor kotenko ting liu krishna sivalingamdominik lzak takashi washio xiaokang yang junsong yuan editorial board member joaquim filipe polytechnic institute set bal set bal portugal ashish ghosh indian statistical institute kolkata india raquel oliveira prate federal university mina gerais ufmg belo horizonte brazil lizhu zhou tsinghua university beijing chinamore information series httpwwwspringercomseriesmartin fernando brito abreu alberto rodrigues silva ricardo rezcastillo ed quality information communication technology international conference faro portugal september proceeding editor martin brunel university london ukfernando brito abreu lisbon university institute lisbon portugal alberto rodrigues silva university lisbon lisbon portugalricardo rezcastillo university castillala mancha talavera reina spain issn issn electronic communication computer information science isbn isbn ebook springer nature work subject copyright right reserved publisher whether whole part thematerial concerned speci cally right translation reprinting reuse illustration recitation broadcasting reproduction micro lm physical way transmission information storage retrieval electronic adaptation computer software similar dissimilar methodology nowknown hereafter developedthe general descriptive name registered name trademark service mark etc publication imply even absence speci statement name exempt relevant protective law regulation therefore free general usethe publisher author editor safe assume advice information book arebelieved true accurate date publication neither publisher author editorsgive warranty expressed implied respect material contained herein error oromissions may made publisher remains neutral regard jurisdictional claim published map institutional liations springer imprint published registered company springer nature registered company address gewerbestrasse cham switzerlandpreface international conference quality information communication technology serf forum disseminating advanced method tech niques tool support quality approach ict engineering management practitioner researcher encouraged exchange idea approach howto adopt quality culture ict process product improvement providepractical study varying context led martin brunel university london fernando brito abreu university institute lisbon portugal program chairsthe organizing chair edition alberto rodrigues silvauniversity lisbon portugal locally organized university algarve portugal paula ventura martin marielba zacarias planned held september faro algarve portugal unfortunately due effect covid pandemic wasconducted fully online conference volume collection highquality peerreviewed research paper received world attracted good number submission fromdifferent area spanning several thematic track proposed call paper invarious cuttingedge technology specialized focus organized chaired eminent expert eld following eight thematic track correspond onetoone basis session quality aspect machine learning data analytics leandro minku ubir evidencebased software quality engineering tracy hall human arti cial intelligence software evolution nicolas anquetil inria university lille france process modeling improvement assessment karol hauf infogem software quality education training claudia werner ufrj brazil quality aspect quantum computing manuel serrano uclm spain safety security privacy ana rosa cavalli ipps lcom sudparis france ict veri cation validation antonia bertolino isticnr italy three additional thematic track proposed call paper due lesser number submission exigent review process merged joint session named mdd agile original track ict requirement engineering luis olsina unlpam argentina agile method kai petersen fuas germany blekinge institute tech nology sweden modeldriven method manuel wimmer jku linz austriatechnical paper summary technical program committee made international academic industrial domain expert organization different country continent based rigorous peerreview process technical program committee member along external expert reviewer best quality paperswere identi presentation publication review carried doubleblind process minimum three review per submission submitted paper came country andaccepted paper originated organization spain italy france portugal brazil germany among others submission pool paper accepted full paper inclusion proceeding short paper invited talk fortunate three invited talk presented outstanding keynote speaker keynote tom men university mon belgium directed software engineering lab year edited two springer book software evolution andevolving software system published numerous highlycited software engineering article peerreviewedinternational software engineering conference journal talk titled software ecosystem healthy depends second keynote speaker letizia jaccheri department computer science norwegian university science technology norway shewas head department besides published numerous highlycited software engineering article peerreviewed international software engineering conference journal acm distinguished speaker talkwas titled software art social entrepreneurship third talk given cojointly paulo carvalho nunes quidgest active voice portuguese industry paulo carvalho founder senior partner quidgest nunes technology enthusiast business savvy problemsolver whitehat hacker quidgest global technologycompany headquartered lisbon portugal year experience quidgest pioneer leader modeling automatic generation software two main resource genio platform team exclusivelydedicated development new feature technology talk titledbuiltin quality software development automation model arti cial intelligence prefacesedes doctoral symposium addition colocated doctoral student symposium chaired vasco amaral universidade nova lisboa portugal proceeding published standalone volume ceur workshop proceeding series ceurwsorg free openaccess publication service operated aachen university germany areparticularly pleased support event doctoral student represent much thefuture community september martin fernando brito abreu alberto rodrigues silva ricardo rezcastillopreface viiacknowledgments proceeding editor wish thank people organization directly indirectly supported event thanks thematic track phd symposiumchairs member scienti committee many contribution review guarantee overall quality conference thanks colleague university algarve organizational detail required hosting conference despite fact constraint anddifculties associated pandemic obliged fully online thanks colleague participate different level organization conference thanks steering committee member guidance support throughout whole process also special thanks organization involved conference including promoter ipq supporter university algarve brunel universityiscteiul istul uclm fctunl feup university minho cnr anduniversity coimbra sponsor acm quidgest atos partner neeiualg apq finally least special thanks author participant con ference without effort would conference proceeding thank contributing critical mass researcher keep conference alive forwhat expect many year comeorganization program committee chair martin brunel university london fernando brito abreu instituto universit rio lisboa portugal thematic track chair ict veri cation validation antonia bertolino national research council cnr italy process modeling improvement assessment karol hauf nfogem human arti cial intelligence software evolution nicolas anquetil inria university lille france evidencebased software quality engineering tracy hall lancaster university safety security privacy ana cavalli institut polytechnique paris lcom sudparis france quality aspect quantum computing manuel serrano castillalamancha spain quality aspect machine learning data analytics leandro minku university birmingham software quality education training claudia werner universidade federal rio janeiro brazilrequirements engineering modeldriven agile development luis olsina pampa argentina manuel wimmer johannes kepler university linz austria kai petersen blekinge institute technology sweden phd symposium sedes vasco amaral universidade nova lisboa portugal program committee member abdelhakdjamel seriai university montpellier france agnieszka jak bik cracow university technology poland alberto silva universidade lisboa portugal alejandro mat university alicante spain alessandra bagnato softeam francealexandros chatzigeorgiou university macedonia greeceambrosio toval murcia spainana resp cio universidade lisboa portugal ana paiva university porto portugalana regina rocha coppeufrj brazil andrea janes free university bozenbolzano italy andreas ulrich siemens germanyandreas nehfort nehfort itconsulting austriaandreas wortmann rwth aachen university germanyandres diazpace unicen university argentinaantonino sabetta sap lab germanyantonio cicchetti lardalen university sweden antonio vallecillo laga spain apostolos ampatzoglou university macedonia greece aye tosun istanbul technical university itu turkey bartosz walter pozna university technology poland beatriz mar diego portales chile benoit combemale university toulouse inria francebreno miranda universit pisa brazil christelle urtado ecole de mine al france christopher fuhrman cole technologie sup rieure canada chun wai chiu university birmingham claudia raibulet university milanobicocca italydaniel str ber radboud university netherlands denis silveira universidade federal pernambunco brazildiego perezpalacin linnaeus university spain merge three proposed track cfp due number accepted submission sedes separate proceeding published ceur volumexii organizationedgardo monte oca montimage france eduardo figueiredo federal university mina gerais brazileduardo spinosa federal university paran brazil elenamar navarromart nezuniversidad castillalamancha spain emilia mendes blekinge institute technology sweden emilio insfran universitat polit cnica val ncia spain emily navarro university california irvine usaerkuden rio velasco tecnalia spaineugene syriani university montreal canadafabio calefato university bari mexicofabio palomba university salerno italyfatiha zaidi universit parissud france fayola peter west virginia university usa ferdinand gramsamer infogem switzerlandflavio oquendo universit bretagnesud ubs france francesca lonetti cnristi italyfrancisco gort zar rey juan carlos spain frank phillipson tno netherlandsfrdric cuppens polytechnique montreal canada gabriel garc amireles sonora mexico gerhard fessler fessler sprenger und partner gmbh geylani kardas ege university turkeygordana rakic university novi sad serbiagregory kapfhammer allegheny college usagrischa liebel reykjavik university icelandguido peterssen nodarse alhambraeidos spainguillermo hernandez aquantum spaingul calikli open university gustavo rossi lifia unlp argentina hector menendez middlesex university london ukhonghui university leicester ukignacio rodr guez guzm nuniversidad castillalamancha spain ioannis parissis universit grenoble alpes france ioannis stamelos aristotle university thessaloniki greeceisabel sousa brito instituto polit cnico beja portugal ivano malavolta vrije universiteit amsterdam netherlands jaejoon lee university east anglia ukjavier troya university seville spainjean petric lancaster university ukjefferson seide moll simula metropolitan center digital engineering norway jess mor university oviedo spain joo gama university porto portugal joo ara universidade nova lisboa portugalorganization xiiijoo pascoal faria university porto inesc tec portugal joaquin garciaalfaro institut polytechnique paris lcom sudparis france johnny marque instituto tecnol gico aeron utica ita brazil jordi tura maxplanckinstitut quantenoptik germany jorge casillas university granada spain jose luis vara castillalamancha spainjosluis hevia alhambraeidos spain jose manuel molina lopez carlos iii madrid spainjuan lara autonoma madrid spainjuan manuel murillo extremadura spainjuan manuel vara rey juan carlos spainjuan pablo carvallo del azuay ecuador kathia marcal oliveira lamih cnrs umr france ken power independent consultant irelandlavazza luigi universit degli studi dell insubria italy lech madeyski wroclaw university science technology poland lerina aversano universit degli studi del sannio italy lidia lopez universitat polit cnica catalunya spain loli burgue open university catalonia spain luiz marcio cysneiros york university canada escalona university seville spainmacario polo castillalamancha spainman zhang kristiania university college norwaymarcello thiry univali brazilmarcos didonet del fabro universidade federal paran brazil maria lencastre universidade pernambuco brazilmario piattini castillalamancha spain michael felderer university innsbruck austria miguel goul universidade nova lisboa portugal miguel catl morale trujillouniversity canterbury new zealand moises rodr guez aqclab spain nathan baddoo university hertfordshire uknelly condorifern ndez universidade coru spain nemitari ajienka nottingham trent university nora cuppens polytechnique montreal canada oscar pastor lopez universitat polit cnica val ncia spain patricia mcquaid california polytechnic state university usapatrizio pelliccione chalmers university technology swedenpedro guerreiro universidade algarve portugalrachel harrison oxford brooke university ukrafael capillasevilla rey juan carlos spainralf kneuper iubh internationale hochschule germany ricardo perezcastillo castillalamancha spainxiv organizationrobert claris open university catalonia spain roberto pietrantuono university naples federico italysandro morasca universit degli studi dell insubria italy shuo wang university birmingham uksigrid eldh ericsson sweden stefan klikovits national institute informatics japan stephen macdonell university otago new zealandsteve counsell brunel university uksven casteleyn universitat jaume spainsylvia ilieva university bulgaria timo kehrer humboldtuniversit berlin germany toacy oliveira coppeufrj brazilvahid garousi queen university belfast valentina casola university napoli federico italy valter camargo federal university carlos brazil vnia neve universidade federal fluminense brazil wissam mallouli montimage francexiaofeng wang free university bozenbolzano italyyania crespo university valladolid spain organizing committee general chair alberto silva universidade lisboa portugal local cochairs paula ventura martin universidade algarve portugal marielba zacarias universidade algarve portugal proceeding chair ricardo perez del castillo castillalamancha spain publicity chair amrico rio iscteiul unl portugal web chair jospereira do real iscteiul portugal sponsor chair margarida madeira universidade algarve portugal industrial day cochairs hugo barros cria universidade algarve portugal miguel fernandes dengun algarve tech hub portugalorganization xvadditional reviewer huu nghia nguyen snia teixeira rita nogueiravinh hoa contributing organization promoter supporter xvi organizationsponsors partner organization xviicontents quality aspect machine learning data analytics perceived quality artificial intelligence smart service system structured approach jens neuh ttler rudolf fischer walter ganz florian urmetzer towards guideline assessing quality machine learning system julien siebert lisa joeckel jens heidrich koji nakamichikyoko ohashi isao namba rieko yamamoto mikio aoyama data cleaning case study openrefine trifacta wrangler dessislava petrovaantonova rumyana tancheva nsp dataset offline signature verification dmitry bakhteev roman sudarikov evidencebased software quality engineering applying machine learning technical debt management future opportunity challenge angelikiagathi tsintzira elviramaria arvanitouapostolos ampatzoglou alexander chatzigeorgiou temporality introducing code technical debt georgios digkas apostolos ampatzoglou alexander chatzigeorgiou paris avgeriou complexity retest reason refactorings buggy empirical perspective steve counsell steve swift mahir arzoky giuseppe destefanis human artificial intelligence software evolution suggesting descriptive method name exploratory study two machine learning approach oleksandr zaitsev stephane ducasse alexandre bergel mathieu eveillard challenge layout validation lesson learned santiago bragagnolo beno verhaeghe abderrahmane seriai mustapha derras anne etientowards automated taxonomy generation grouping app review preliminary empirical study saurabh malgaonkar sherlock licorishand bastin tony roy savarimuthu zone pain visualising relationship software architecture defect jean petri tracy hall david bowes empirical study persistence spotbugs issue opensource software evolution luigi lavazza davide tosi sandro morasca process modeling improvement assessment applying continual service improvement practice study quality healthcare information system service case study sanna heikkinen marko ntti kaija saranto personal opinion survey process compliance checking safety context julieth patricia castellanos ardila barbara gallina systematic literature review devops model monika gasparaite kristina naudziunaite saulius ragaisis measuring maturity bizdevops eduardo sanjurjo oscar pedreira felix garc mario piattini process compliance recertification efficiency enabled epfc cbvrt case study barbara gallina aleksand pulla antonela bregu julieth patricia castellanos ardila software quality education training design secure coding challenge cybersecurity education industry tiago gasiba ulrike lechner maria pintoalbuquerqueand ala zouitni qscrum framework quality safetycritical development johnny cardoso marque adilson marque cunhaand luiz alberto vieira diasxx contentsquality aspect quantum computing reverse engineering quantum program toward kdm model luis jim neznavajas ricardo rezcastillo mario piattini math physic tool quality quantum programming ezequiel murina adapting cobit quantum computing governance miguel ngel blanco mario piattini quantum agile development framework guillermo jos hern ndez gonz lez claudio andr paradela source code structure quantum code insight qdk miguelangel sicilia salvador nchezalonso maral moracantallops elena garc abarriocanal safety security privacy towards framework improving experiment do attack marta catillo antonio pecchia umberto villano cloud secdevops methodology design testing valentina casola alessandra benedictis massimiliano rak giovanni salzillo accountability access control requirement mechanism farah dernaika nora cuppensboulahia dric cuppens olivier raynaud secure agile software development policy practice agile team carlos magnum bezerra suzana sampaio marcelo marinho privacybydesign architecture indoor localization system paolo barsocchi antonello calabr antonino crivello said daoudagh francesco furfari michele girolamiand eda marchetti ict verification validation reverse engineering android application reimpact marco gon alves ana paivacontents xxian approach prototype tool generating executable iot system test case dario olianas maurizio leotta filippo ricca applied statistical model checking sensor behavior analysis salim chehida abdelhakim baouya saddek bensalemand marius bozga preliminary experience requirementsbased security testing joo miranda ana paiva alberto rodrigues silva testing chatbots harm sergio bravosantos esther guerra juan lara dataset regression web application detected endtoend test scar sotos nchez michel maesbermejo micael gallego francisco gort zar towards failure prediction scientific workflow using stochastic petri net dynamic logic bruno lope daniel oliveira mdd agile rigorous requirement user interface specification software business application ivo gamito alberto rodrigues silva human factor agile software tester lucas paruch viktoria stray raluca florea experience application three nlp tool analysis natural language requirement monica arrabito alessandro fantechi stefania gnesi laura semini author index xxii contentsquality aspect machine learning data analyticsperceived quality articial intelligence smart service system structured approach jens neuhttlerb rudolf fischer walter ganz florian urmetzer fraunhofer iao nobelstr stuttgart germany jensneuhuettlerwalterganziaofraunhoferde university cambridge charles babbage road cambridge ftucamac abstract smart service system becoming increasingly important almost industry area life order make data internet thing individualizing automatizing service offering articial intelli gence key technology however little known usersand potential customer perceive quality aibased smart service company develop accordingly end paper present framework concept addressing quality smart service systematically theframework integrates known novel quality aspect thus support system atic qualityfocused development addition paper present exemplary airelevant quality aspect detail first aibased smart servicesystems characterized detail existing quality concept presented order enable holistic quality assessment keywords smart service articial intelligence quality introduction progressive development digitalization particular increasing inte gration physical object sensor technology communication capability changing existing service system nearly industry area life data collected internet thing permit comprehensive conclusion thecondition physical object utilization applicationspecic context information provides basis offering individualized sometimes auto mated smart service constitute individually congurable bundle bundle ofproducts digital service physically delivered service development provision service package require orchestration physical object technolo gy data person organization thus smart service understood complexservice system method articial intelligence play key role tapping potential individualization automation within system example used autonomous extraction information required individualization springer nature ed neuhttler large pool data structured automated even autonomous provision smart service example physical ordigital robot notwithstanding undeniable opportunity many enterprise face number challenge development smart service among issue question arises smart service system designed way added value perceived potential customer outweighs risk involved poor protection sensitive data loss control design element play signicant role regard well one hand selflearning algorithm autonomous system add value way individualized provision service hand loss personal relationship complex therefore nontransparentalgorithms negative impact risk perceived research smart service sys tems articial intelligence still early stage regard provides hardly knowledge expectation potential customer also lack suitable concept method tool develop smart service system atically context one key issue better understand perception quality potential customer smart service thereby support business development successful accepted solution even though established con cepts exist already regarding quality perception individual element smart serviceseg digital service knowledge perception databased bundling method tool scarce date aibased smart service system characterization smart service system view providing systematic view quality aibased smart service system characterized despite increasing signicance distinct denition smart service yet evolved scientic literature nevertheless possible identify existing conceptual publication common characteristic relevant article smart service based physical object equipped sensor technology networking capability referred intelligent product collect status utilization environment data provision smart service based intensive utilization data sensor data usergenerated data well data external source used data available collected digital platform analysed interpreted algorithm transformed applicationspecic information based information acquired smart service represent service package customized specic context individual need customer depending type smart service comprise digital physically delivered service element varying proportion characteristic smart service system highly signicant devel opment integrative framework quality assessment relationship smart service system described detail next sectionperceived quality articial intelligence smart service system articial intelligence smart service system concept articial intelligence refers solution method completing task autonomously underlying rule processing explicitly predened byhumans umbrella term combine different concept model forming various learning method algorithm superiority comparison conventional analytical method stem capability process structure largeamounts data autonomously main reason growing signicance one hand existence large amount data produced increase physical product networking constitute essential basis theapplication hand decreasing cost processing power required data processing machine learning method technological core algorithm extract information autonomously recognize regular pattern dataadaptively respond changing environment predict future event typical domain wherever highly complex large volume data exist unmanageable human mastering complexity generates value example inform new customer insight individual adaption possibility gathering information pattern recognition prediction future event high impact smart service system since theuse method offer numerous opportunity development new service raising degree individualization automatic performance activity service employee time also change nature encounter interaction provider user potential individualization automation based service depends extent algorithm support personnel orshould intervene activity way transparent customer may perform completely autonomously customer application smart service system illustrated using wellknown layer model sample application smart service system source model comprises three layer networked physical layer used basis data acquisition next higher layer softwaredened layer data neuhttler processing occurs ndings gathered layer utilized service layer develop deliver individualized extent automated solution taskscan efciently supported even performed autonomously application layer sensing technology used acquiring transmitting data may susceptible error example produce spike fail completely certainperiods loss data quality thereby incurred compensated detecting implausible missing value replacing estimated value frequently often involves individual sensor entire infrastructure wide network ofdevices collective data need arranged intelligent way moreover usually data outside source used contextualization also require curation softwaredened layer information ndings extracted data andthe advantage machinebased learning method unfold model calculation revealed regular pattern characteristic interrelated certain event occur personnel service layer supported work system even possible develop selflearning autonomously acting smart service chatbots way knowledge used extractknowledge situation personal habit preference customer produce individual adaptation improves resulting quality solution however involves challenge one hand technology must capable reading different format unstructured data process analyse large amount real time solve problem autonomously improve contin uously hand design aibased smart service system accepted byusers involves number question basis decision made user want interact machine want know contact chatbot person interaction designed empatheticway much decisionmaking power automated deep intervene personal action personnel customer following chapter aim pro viding initial reference point design smart service system perceivedas highquality service system thus accepted customer quality aspect smart service system relevance requirement safeguarding high quality one core issue development smart service system challenge one hand include different service element quality view intelligent technology data digital service physical servicesas well interrelation hand systematic collection analysis possibly sensitive personal operational data involves new risk insecurity perceived example regard data security ethic algorithm perceivedsurveillance sensor factor inuence perception quality smart service part user reason conceptualization perception quality core subject research identication useful quality category criterion used evaluation may support solution provider endeavour meet customer need better create added value thus establish service successfully market quality category criterion used thisperceived quality articial intelligence smart service system context kind development guideline reduce uncertainty applied different phase smart service development example quality category canbe used identify analyse requirement potential customer structured way specically early phase development complex service system user often difcult express expectation need precisely comprehensivelywithout predened category hand furthermore category criterion may already used early stage iterative test cycle evaluate concept prototype user thereby prevent undesirable development however offer added value service provider quality view meet requirement resulting characteristic outlined characterization smart service system include smart service element perceived customer concept permit assessment different design variant smart service ranging entirely digital one databased interaction people compatible model method smart service engineering specic characteristic aibased smart service considered following section give brief overview existing concept perceived quality individual area smart service system existing quality concept context smart service system simple product objective criterion example durability consumption resource suitable quality assessment perspective provider user however since smart service system complex solution user particularlack technical knowledge make objective assessment moreover many service element smart service system high degree intangibility digital process activity algorithm data make objective assessment even difcultobjective quality criterion therefore substituted subjective construct service quality describes ability provider produce quality primarily intangible service requires participation user accordance theusers expectation certain level requirement hence quality smart service system attain specic performance level turn dened perspective user view making perceived quality measurable numerous construct evolved science permit assessment part user mean quality category criterion probably widely used quality model service provided person servqual model model comprises different quality dimension tangibles reliability responsiveness assurance empathy used customersto evaluate service quality also model approach scientic literature make service quality measurable either industry specic focus research numerous different quality model also exist digitalservices offered internet example transferred servqual neuhttler model digital service highlighted category efciency system availability fulllment privacy generally applicable quality criterion esqual model addition monolithic quality model also approach consider quality assessment combined smart service element address hybrid service package combination quality dimension servqual andesqual combine dimension servqual technologyacceptance model tam quality assessment productservice system however model known author address element smart service furthermore distinct specic model perceived quality ass ment aibased service date nevertheless indeed related publication addressing design application therefore objective mentioned inprevious section example regard acceptance one question design interaction user machine meaningful way compatible human need implies major ethical social issue articial intelligence get focus addition technological development however regard discussion noted social compatibility isnot determined directly technology rather used instance necessary dene appropriate framework quality assurance aibased decision already principle available usedin designing framework place important establish trans parency traceability true calculation decision taken basis consequence complexity process traceability ensuredonly extent however effort made achieve far possible moreover decision formation documented way information given parameter used decision inturn generates transparency addition consequence revisable certain decision obviously wrong human intervention correction becomes necessary one criterion associated address userswish remain nal decisionmaking instance case doubt true least outcome quality reach level generally accepted stake holder involved framework explaining acceptance customer contact situation proposed key contribution identication quality aspect aibased smart service system context selfservice technologymodel according serf basis involving various inuence factor regard ing openmindedness towards longterm adoption new technology basis supplement another three factor acceptance application security concern trust perceived discomfort two factor appear intuitively plausible prerequisite acceptance application customer recognize added value aibased service example speed convenience andwant benet however requires sharing personal information basically worth protected loss privacy requires advance trust ser vice provider otherwise advantage aibased application utilized theaspect perceived discomfort requires detailed explanation relates suggestion algorithm ignore social norm may therefore cause dis comfort summary enables customer utilize individually tailoredperceived quality articial intelligence smart service system service save time generate comfort however advantage involve risk severe failure service delivery loss control curtailment privacy assessment existing approach approach identied literature provide suitable basis concept quality perception smart service system initial reference point relevant qualitycategories criterion however none approach identied includes service element smart service system allows comparative view different design variant approach address one service element usually com bine existing quality model however conceived specic characteristic aibased smart service system address partial aspect perceived qualitymoreover quality model geared systematic development inte grated service package therefore structure mutually compatible reason next chapter present article proposes integrative conceptualframework incorporates existing quality category criterion also sup plements additional aspect hence accommodates specic character aibased smart service system integrative conceptual framework quality assessment aibased smart service system structure integrative conceptual framework integrative conceptual framework introduced structured matrix comprises design eld smart service system evaluated using predened quality category criterion structuring horizontal axis done using design dimension resource process outcome achieve compatibility existing tool model smart service engineering structuring along dimension also frequently applied current service research example smart service system structuring assessing effect digitaliza tion resource dimension comprises resource required smart service system technical infrastructure product algorithm technology competen cies individual process dimension describes delivery smart service sequence activity stakeholder ecosystem characterized interaction people customer provider information system digital service physical object intelligent technology sensor outcomedimension address perception usefulness various service element well overall solution customer perspective evaluating various dimen sion enables developer obtain precise information potential cause ofnegative perception quality address specically subsequent devel opment cycle negative overall perception may attributable either delivery process resource employed related measure improvement derivedtherefrom differ accordingly vertical axis integrative conceptual framework comprises perceivable element aibased smart service system technology data digital service neuhttler conceptual framework quality assessment smart service system source service delivered physically derived layer model smart ser vice system adjusted perspective user element perceivable technology data service element comprises basis data acquisition transmission physical object networking capability collect status usage context data eld conceptual frame work considers fundamental equipment well aesthetic aspect intelligenttechnologies eld address perceived quality technology delivery process among item also involves technique make possible integrate precondition various sensor data field hold quality categorieswhich make possible evaluate data basis acquired mean intelligent technology user perspective data basis produced used structure factor digital service service element together readymade content andalgorithms created provider eld translated different form added value digital process utilizing also information user activity net worked object eld new insight current condition usage processemerge physical object one body public infrastructure already constitute per added value digital service within smart service system evaluated eld furthermore however also possible createdigital valueadded service data basis generated automated forward looking route planning personalized recommendation system aspect like design standardized interface realtime data availability well development transparent algorithm key success factor aibased service system addi tion working privacy security concept data part highlysensitive play key role design digital service frequently conict necessary anonymization data creation appropriate added value individualization data moreover technique lead new automated form interaction digital process addition toperceived quality articial intelligence smart service system digital service service delivered physically continue play key role based service system also future context two different form distinguished one hand personal service resource capacity competency personnel well physical infrastructure provider eld hand service delivered physically may also provided automated autonomously acting system made available provider structure form characterized interactive process providing requesting unit requires physical activity eld parcel delivery service example two form parcel delivery may performed person using suitable equipment vehicle digital assistant etc autonomously acting service robot vehicle drone perceived benet solution thephysical intervention addressed eld conceptual framework short medium term process service provided person particularly com prise activity solving complex task require creative intuitive empathetic ability personnel physical intervention person close personal environment hand repetitive knowledgebased routine task increasingly provided aid aibased digital service therefore addressed eld distinguishing perception quality digital personal service make possible enterprise apply conceptual framework within smart service system development various type service offering take specic characteristic account digital information service datavisualization digital valueadded service digital parking lot booking digitally supported physically delivered service demanddriven waste col lection integration service element added conceptual framework asanother core element synchronization described service element safeguarding constant quality level across service type activity various party involved regarded essential driver developmentof highquality smart service system addition integration structure factor eld particularly integration digital physical process element eld perception overall benet smart service system eld key item assessed quality aspect aibased smart service system preceding section presented structure integrative conceptual framework used structuring category criterion quality assessment smart service system addition numerous wellknown criterion also dataspecicand aispecic quality criterion identied included conceptual framework expert interview followup search literature table show selection criterion along eld integrative conceptual framework beutilized together category criterion assessment perceived quality aibased smart service system neuhttler table summary sample quality criterion relevance description quality eld exemplary quality aspect regard data perception intelligent technology used data acquisition well external data source appropriateness sensor measurement interval case perceived relation required data promised value selection external data source application perceived surveillance discomfort using smart technology transparency understandability privacy concept perceived quality intelligent technologieseg wearable data curation convenience smart technology customer journey intuitive lowerror operation technology perceived control data acquisition process trustworthiness technology intrusiveness personal space domain perception data basis generated contribution technology data overall benet reliability connectivity data transfer troublefree data transmission backend uptodateness precision completeness data perceived credibility result relevance data case realization innovation potential due data perception predened content digitalapplications algorithm used uptodateness transparency analysis method used perceived barrier integrating usergenerated data compatibility interface application environment protection system unauthorized access perception interactive usage process digital service adapted individual requirement intuitive digital tool data analysis naturalness aibased interaction form chatbots voice control quick adaptive system interaction adaptability digital process realtime data expost documentation automated activity perception data visualization benetcreated valueadded service perceived support digital assistant constant degree fulllment service added value information clarity data visualization reduction complexity user perceived increase process efciency perception personnel required delivery equipment used physical environment credibility relevance personnel competency handling application uptodateness capability personnel equipment safety precaution using physical service robot functional scope physical service robot perception interactive process person orphysical object brought provider user unobstructed access realtime data user personnel transparent plausible course action personnel shortterm quick adaptation customer wish realtime data contentment despite aibased extension personnel skill knowledge continued perceived quality articial intelligence smart service system table continued description quality eld exemplary quality aspect regard data perception service result contribution overall benet personal relationship efcient delivery support digital assistant physical service robot deterioration social interaction digital support familiarity personal interaction perception integrative quality resource used stakeholder ecosystem balanced involvement physical digital personal component function trustworthiness stakeholder involved ecosystem absence dependence individual partner technology perception integrative quality allocation oftasks among stakeholder coordinated process logic digital personal service reasonable assignment activity among user provider technical system clear role task description user activity perceived overall benet smart service system improved match solution individual customer issue higher emotional social added value enabling serviceoriented business model variant subscription sample list quality criterion relevance show already numer ous different aspect need considered assessment smart service system depending design smart service system criterion con ceptual framework interest either service element play roleor prototype dened development level yet evaluated respect criterion useful application development smart service occurs example testing phase assessment specic smart service prototype specic phase development quality category criterion included integrative conceptual framework need selected individually specic testgroups addressed summary outlook article present integrative framework quality assessment smart servicesystems includes quality aspect existing approach method moreover specic quality criterion supplemented address articial intelligence smart service system arranged design eld conceptual framework isstructured way either service element perceived customer part relevant development explored way research contributes current discussion increasingly collaborative andinterdisciplinary development smart service system distributed value creation smart service platform integrative conceptual framework used example enterprise extend quality assessment service element neuhttler provided third party tool structure qualityrelated requirement ass integration activity key element smart service system structuring along theservice dimension structure process outcome additionally permit technical logical compatibility existing method tool service engineering large number quality category criterion identied assessment smart service system suggests conceptual framework suitable measuring instrument customer survey like servqual rather conceptual framework addressed organization want consider relevant quality aspect systematic development aibased smart service system test fulllment category criterion conceptual framework actually relevant depends service element integrated development phase maturity prototype service element created deliberate focusing quality perception smart service system considering various form interaction humantohuman human tomachine machinetomachine make possible integrative conceptual framework give impression new method approach attempt merge humanistic technologycentric service paradigm even though inuence intelligent technology data service delivery continuously increasing subjective perception potential user personnel development highquality smart service system continue play key role however apart potential outlined necessary highlight limi tations integrative conceptual framework extent quality category criterion adopted empirically validated quality model supplemented based expert interview workshop even though assessment smart service system using conceptual framework already proven highly useful several project practice largescale validation interaction among thecriteria andor category yet exist true generally applicable valida tion hardly realized applicationspecic selection design eld category criterion taken account utilizing conceptual framework practice furthermore particularly aispecic quality criterion regularly reviewed adapted rapidly progressing technolog ical option regard signicance weighting individual assessment category also necessary consider potential difference application industry addressed relevant culture area evaluating signicance different element criterion decision technique analytical hierarchy process ahp could applied reference bruhn hadwich dienstleistungen erscheinungsformen transformation sprozesse und managementimplikationen bruhn hadwich ed forum dien stleistungsmanagement dienstleistungen springer wiesbaden bullinger ganz neuhttler smart service chancen und herausforderun gen digitalisierter dienstleistungssysteme unternehmen bruhn hadwich ed forum dienstleistungsmanagement dienstleistungen springer wiesbaden httpsdoiorgperceived quality articial intelligence smart service system lim maglio clarifying concept smart service system maglio kieliszewski spohrer lyon patrcio sawatani ed handbook service science ssrise springer cham wahlster knstliche intelligenz al treiber der zweiten digitalisierungswelle wirtz brave new world service robot frontline serv manag anke meyer alt holze kahlert lernen au anwendung transfer orientierte entwicklung von methoden da smart service engineering meyer klingner zinke ed service engineering springer wiesbaden wnderlich futurizing smart service implication service researcher manager serv manag ostrom fotheringham bitner customer acceptance service encoun ters understanding antecedent consequence maglio kieliszewski spohrer lyon patrcio sawatani ed handbook service science ssrise springer cham meiren neuhttler smart service maschinenbau systematische entwicklung digital untersttzter dienstleistungen wtonline maglio lim innovation big data smart service system innov manag beverungen mller matzner mendling vom brocke conceptualizing smart service system electron mark httpsdoiorgs allmendinger lombreglia four strategy age smart service harvard bus rev porter heppelmann smart connected product transforming competition harvard bus rev lim kim kim kim maglio using data advance service managerial issue theoretical implication action research serv theory pract stich hoffmann heimes softwaredenierte plattformen eigenschaften inte grationsanforderungen und praxiserfahrungen produzierenden unternehmen hmd prax wiinf wnderlich von wangenheim bitner high tech high touch framework understanding user attitude behavior related smart interactive service serv re tombeil kremer neuhttler dukino ganz potenziale von stlicher intelligenz der dienstleistungsarbeit bruhn hadwich ed forum dienstleistungsmanagement automatisierung und personalisierung von dienstleistungen springer wiesbaden kreutzer sirrenberg knstliche intelligenz verstehen grundlagen usecases unternehmenseigene kijourney springer wiesbaden mccollkennedy zaki lemon urmetzer neely gaining customer experience insight matter serv re spath ganz meiren dienstleistungen der digitalen gesellschaft chan cen und herausforderungen der digitalisierung lsungsanbieter boes dienstleistungen der digitalen gesellschaft campus frankfurt main neuhttler neuhttler woyke ganz spath approach qualitybased test industrial smart service concept ahram ahfe aisc springer cham bruhn qualittsmanagement dienstleistungen grundlagen konzepte methoden springer gabler berlin parasuraman zeithaml berry servqual multipleitem scale measuring consumer perception service quality retail parasuraman zeithaml malhotra esqual multipleitem scale assessing electronic service quality serv re neuhuettler ganz liu integrated approach measuring managing quality smart senior care service ahram karwowski ed advance human side service engineering aisc springer cham http doiorg wang yeh yen nugroho electronic inperson service quality hybrid service serv ind bhm sczudlek knebel leimeister krcmar qualittsmanagement bei hybriden produkten ein ansatz zur messung der leistungsqualitt hybrider produkte inleimeister krcmar halle mslein ed hybride wertschpfung der gesundheitsfrderung innovation dienstleistung eul verlag lohmar weber burchardt knstliche intelligenz httpswwwdfkide accessed aug meuter bitner ostrom brown choosing among alternative service delivery mode investigation customer trial selfservice technology market neuhttler ganz spath integrative quality framework developing industrial smart service serv sci bullinger fhnrich meiren service engineering methodical development new service product int prod econ falter brkin hadwich ausprgungen der digitalisierung arbeitsumfeld und deren auswirkungen auf da mitarbeiterwohlbenden arnold kndler ed die informatisierte servicekonomie vernderungen privaten und ffentlichen sektor springer wiesbaden moser jussen rsner smartserviceplattformen gestaltungsempfehlungen beispiel der digitalisierten landwirtschaft stich schumann beverungen gudergan jussen ed digitale dienstleistungsinnovationen smart service agilund kundenorientiert entwickeln springer berlin huang rust articial intelligence service serv re geigenmller leischnig zur relevanz von allianzmanagementfhigkeit bei koopera tiven dienstleistungen bruhn hadwich ed forum dienstleistungsmanagement kooperative dienstleistungen spannungsfelder zwischen service cooperation und servicecoopetition springer wiesbaden keating mccollkennedy solnet theorizing beyond horizon service research serv man zhang neuhttler chen ganz smart service condition preference analysis chinese german manufacturing market ahram ahfe aisc springer cham towards guideline assessing quality machine learning system julien siebertb lisa joeckel jens heidrich koji nakamichi kyoko ohashi isao namba rieko yamamoto mikio aoyama fraunhofer iese kaiserslautern germany juliensiebertlisajoeckeljensheidrichiesefraunhoferde fujitsu laboratory ltd kawasaki japan nakamichiohashikyokonambaryamamotofujitsucom nanzan university nagoya japan mikioaoyamaniftycom abstract nowadays system containing component based machine learning method becoming widespread order ensure intended behavior software system standard dene necessary quality aspect system component isoiec due thedifferent nature adjust quality aspect add additional one trustworthiness precise aspect really relevant object interest completeness training data toobjectively ass adherence quality requirement article present construction quality model evaluation object quality aspect metric system based industrial case quality modelenables practitioner specify ass quality requirement kind system objectively future want learn term quality differs different type system come general guideline forspecifying assessing quality system keywords machine learning software quality quality evaluation introduction digital transformation enables digital product service based data model derived data construction model algorithmic decision making increasingly based articial intelligence method enable innovative solution automated driving predictive maintenance research focus system softwareintensive system containing one compo nents model built method functionality component isnot dened programmer classical way learned data developing operating system raise new challenge comparison classical software engineering first behavior fundamentally different traditional soft ware relationship input outcome model dened springer nature ed qua tic siebert subset data lead uncertainty model outcome previously unseen data second common development principle software engineering suchas encapsulation modularity rethought neural network simply cut smaller subnets reused module third development integration component multidisciplinary approach requires knowledgeabout application domain knowledge construct model nally knowledge software engineering fourth quality assurance specically test ing work differently traditional software target problemswhere expected solution inherently difcult formalize order ensure intended quality software system standard dene necessary quality aspect system component instanceisoiec denes quality model software system hierarchy quality aspect interest quantify ass due different nature quality model applied directly adjusted denition reusability system need added trustworthiness also precise qualityaspect relevant part overall system instance system algorithm executing model play far le signicant role data used training testing developing meaningful quality model necessary tounderstand application context case kind method used article present construction concrete quality model system based industrial case paper discus related workand summarize gap would like close contribution second dene different view one take system relevant measurement object evaluated specic case application context third describe general methodological approach quality modeling system based industrial case includes specically quality model containing relevant quality aspect concrete metric measurementobject interest quality model enables practitioner specify ass quality requirement kind system fourth discus usefulness identied quality aspect based evaluation together expert industry last present major lesson learned give outlook future research want term quality differs different type systemseg based method used way component integrated overall system help come general guideline specifying assessing quality system related work build quality model necessary dene quality attribute literaturesome quite generic quality model software system isoiec isoiec found standard propose different quality attribute denitions grouped several category decomposition structure product quality decomposed eight attribute functional suitability decomposed subattributes functional correctness advancetowards guideline assessing quality machine learning system widespread adoption method new specic quality proposal emerged ethic guideline trustworthy german din spec japanese qaai consortium well certication guideline new quality attribute rather generic cover also discipline include transparency accountability reproducibility interpretability explain ability auditability minimization reporting negative impact diversity nondiscrimination fairness societal environmental well avoidance unfair bias accessibility universal design stakeholder participation sustainability environmental friendliness security safety data protection respect privacy quality integrity data access data ability cope erroneous noisy unknown andadversarial input data technical robustness reliability dependability correctness output estima tion model uncertainty robustness harmful input error unexpectedsituations human agency oversight legal ethical aspect possibility human agency human oversight respect fundamental right quality attribute specic interactive embodied like assis tants robot intelligent behavior personality quality attribute applied measurement object object represent process product impacted user external object uncommon describe system study term different view measurement object group different quality attribute viewsobjects example author dene set quality attribute correctness goodness robustness efciency etc also relate thesequality attribute different viewsobjects data learning program framework weka tensorflow author distinguish three main quality aspect namely service quality product quality platform quality also describe different viewsobjects system training dataset neural network hyper parameter inference vivo corresponding decision outputted component runtime machine learning platform dinspec also provides description term viewsobjects data model platform environ ment last example author provide main quality aspect related viewsobjects namely data integrity model robustness system quality process agility customer expectation including total quality subattributes literature see consensus exists around quality aspect need measured however naming quality attribute naming measurement object view yet stabilized conclusion reached quality attribute related process process model related data analysis method knowledge engineering data mining etc around decade last year case study literature review conducted ass challenge perceived siebert developer component well process best practice see consensus denition task role process organized developing operating component however le clear process impact quality implementing quality improvement action requires good understanding process step performed whichpeopleroles involved measurement object affected etc also see eld large importance certain quality attribute metric quantifying depend concrete context caseand addressed different task process model used instance availability ground truth one important factor see full ground truth exists case reinforcement learning example test oracle existconsequently quality mainly depends test oracle quality safely measured using available ground truth partial ground truth exists case semisupervised supervised learning data quality representativeness analyzed carefully ground truth exists case unsupervised learning assumption made learning algorithm andthose made model evaluation play signicant role respect quality type task performed regression classication clustering outlier detection dimensionality reduction etc also impact quality assessmenteach type task accompanied corresponding quality metric example classication task goodness measured accuracy precision recall fscore etc clustering measure needed metric chosen depend case example case binary classication task cost falsepositive may cost falsenegative metric might compatible one another case example fairnessmeasures impact qualitydata generation process simulation environmentdata quality data representativityanalysis evaluation hypothesesnot availablecompletely available game simulationpartially available proxy labeled data ground truth availability unsupervised learningsemisupervised learningreinforcement learningsupervised learning training method availability ground truth data label direct impact analysis training method used well denition quality metric assessment literature provides solid basis relevant quality attribute measurement object process model etc however see different gap addressed far lack unique clear denitions view system egwhat denition platform view hyperparameters included separate view existing quality model often abstract valuetowards guideline assessing quality machine learning system practitioner term proposed metric require guideline tailor ing applicable combination relationship quality attribute related metric sufciently investigated yet clear whether satised altogether comprehensive development guideline qualityaware system would bring together different quality modelsprocesses view largely missing made explicit remainder article contribute mainly closing two gap however overall research goal aimed coming comprehensivedevelopment guideline qualityaware system view system many factor inuence quality software system code hardware development process usage scenario etc approach tried systematically identify group factor belonging together propose different view would help ful categorizing quality attribute corresponding quality metric together theobjects measured view model view data view system view infras tructure view environment view see illustrative overview note given quality model may may view relevant one selectedaccording case environment user society scope system infrastructure output scope supervision infrastructure training execution algorithm component data development runtime datamodel model type trained model system component supervision component overview different view software system measurement object inuence system quality model view model view concerned quality aspect belonging called model machine learning model part trained data order perform given task classication regression dimensionality reduction etcnote component normally contain single model may composed several model usually organized directed acyclic graph also called pipeline specicity component way built distinguish development phase training evaluation pipeline done operation phase artifact created previous phase deployed used production runtime two phase siebert may implemented different technology rpython learning webjava application side different quality demand using large quantityof data operating short latency etc model view made distinction call model type decision tree neural network etc trained model specic instance neural network trained specic dataset using specic training algorithm goal distinction separate quality aspect related specic object instance related object type example appropriateness given model applies model type like family decision tree whereas goodness applies specic trained instance note also separate model training algorithm algorithm take training data model type input output trained model execution algorithm algorithm take runtime data trained model input output decision instance classication inputted runtime data argumentation training execution algorithm piece classical software whose quality aspect described measured using existing standard data view data view concerned quality aspect related data term data describes data used input model distinguish development data data used development phase train component runtime data dataset used operation phase distinction made different physical object stored different database potentially preprocessed accessed differently development andoperation phase therefore different quality aspect apply either dataset sepa rately example comparing representativeness development data regard runtime data pushed distinction even concern ing development data indeed process training component requires splitting development data different subset socalled training validation test subset training subset used determine model parameter training validation subset used hyperparameter tuning maximum depth decision tree finally provide unbiased evaluation trained model atest subset used note test subset supposed independent training validation subset way training validation test subset chosen impact quality evaluation trained model system view first component usually organized pipeline task devel oping pipeline nature experimental given pipeline may trained several time different model type training algorithm datasets way sub component connected impact quality see example problem data leakage second component part larger system consumes data one several source interacts nonml componentssince decision outputted component always subject uncertainty since wrong decision might impact system overall quality considering information system input component system output isimportant order understand impact component quality system behavior typical quality aspect related system view include amongtowards guideline assessing quality machine learning system others data dependency feedback loop case output component monitored order detect correct wrong decision monitoring also quality aspect may relevant case stake monitoring effectiveness efciency infrastructure view call infrastructure view closely related system view however view focused quality aspect related system concretely implemented hardware training library decided separate view order highlight specicities component forexample efciency training andexecution algorithm quality attribute belongs view applies suitability infrastructure either training executing component example current trained deep learningmodels used natural language processing several gigabyte size require several day week training dedicated hardware machine gpu cluster trained model executed embedded device due computational andstorage limitation environment view environment consists element external system consideration interact either directly indirectly systemthis includes user system several environmental aspect may direct inuence quality example aspect causing quality decits data strongly related notion concept drift since component built tested given context target application scope quality decrease context change selfadapting component depen dent environment also raise qualityrelated challenge see example problem faced microsoft chatbot tay viceversa component also impact environment term resource usage societaldiscrimination quality modeling system many aspect inuence quality software component using deriving quality model specic case may trivial section illustrate approach used derive quality model case resulting qualitymodel presented well approach summarized follows started dening relevant case usually done interview appropriate stakeholdersduring interview made clear type problem component supposed solve classication intended application scope context component used could change howoften whether ground truth available used view dened previous section select pertinent measurement object case point selected quality attribute interest derived corresponding metricssee siebert measurement objectsquality attributesquality metric mobject qattribute qmetric qattribute qmetric mobject qattribute qmetric identify view software system measurement object mobject influence system quality define quality attribute qattribute metric qmetric measurement object view mobject view mobject view mobject view mobject view mobject view mobject understand case problem type intended application scope ground truth availability etc overview approach used derive specic quality model industrial case follows fujitsus accounting center receives purchase order request por digital form need categorized treatment task traditionally done human operator performed mlcomponent component trained labeled example por used categorized past human operator goal system reduce operating cost acceptable level classication accuracy comparable human interview quality issue mentioned first development operation component complex associated high cost risksseveral area expertise come play developing operating system may lead potential communication coordination problem furthermore wrong classications occur nding root cause failure trivialin order deal monitoring system implemented conjunction correction engine based expert rule component retrained many categorization failure detected case illustrates thequality issue encountered developing operating software system using component table present quality model derived case described view system dened set relevant quality attribute corresponding measurement object attribute either give example concrete metric objectively evaluating quality possible deneexamples item one would check order address respective quality quality model designed specic enough address described case appropriately including supervision classicationrelated quality attribute also contains generic element allow applied similar case attribute related data model measure could aggregated order get overall evaluation system dene quality improvement strategy case issue beyond scope article discussion article proposed categorization quality attribute well measurement object form different viewsobjects classication resulttowards guideline assessing quality machine learning system table overview derived quality model view measurement objectquality attribute example quality metric andchecklists model model type appropriateness degree model type appropriate current task classication etc candeal current data type numerical categoricalprerequisites model type trained model development correctness goodness fit ability model perform current taskmeasured development datasetprecision recallfscore etc training runtime correctness goodnessof fit measured runtime datasetprecision recall fscore etc runtime relevance biasvariance tradeoff degree model achieves good biasvariance tradeoff neitherundertting overtting datav ariance crossvalidation goodness robustness ability model handle noise data missing value still makecorrect predictionsequalized loss accuracy ela stability degree trained model generates repeatableresults trained different subset training datasetleaveoneoutcrossvalidationstability fairness ability model output fair decisionsequalized odds interpretability degree trained model interpreted humanscomplexity metric parameter depth resource utilization resource used model already trainedrequired storage space continued siebert table continued view measurement objectquality attribute example quality metric andchecklists data development data representativeness degree data representative statistical populationstatistical test twosample ttest etc correctness degree data free errorsoutlier detectionmetrics zscore completeness degree data free missing valuesno missing value currentness degree data date wrt current taskage data intraconsistency consistency data within dataset egthe data contradict formatting consistentv alue range word count traintest independencedegree training test subset independent one anotherstatistical test egtwosample ttest etc balancedness degree class label equally represented datasetratio class absence bias degree data free bias agiven groupratios group development andruntime data interconsistency consistency different datasets egformatting sampling method usedv alue range crosswise outlierdetection metric environment training process environmental impact degree training process impact environmentenergy consumption society social impact degree component impact societyimpact employee continued towards guideline assessing quality machine learning system table continued view measurement objectquality attribute example quality metric andchecklists scope scope compliance degree application component respect intended scope usev alue rangesnovelty detection metric system output supervisioneffectiveness degree output supervision algorithmdetects false outcome componentfalse positivenegativedetection rate supervisionoverheadefciency resource used monitoring given componenttime memory usedetc scope supervision effectiveness degree scope supervision algorithm detects context changesno outofscope case supervision overheadefciency resource used monitoring application scopetime memory used etc nonmlcomponents refer relevantsubset quality attribute standard isoiec listed spacereasons infrastructure infrastructure infrastructure suitability degree infrastructurematches component need term hardware type computation capabilitybandwidth memory etccomputational andstorage capability training algorithm training efciency resource used training given modeltime memory usedetc executionalgorithm execution efciency resource used executing given trainedmodeltime memory usedetc literaturebased review discussion industrial partner experi ence component development scientically ass consolidate useful systematic grouping quality attribute system well measurement siebert object several iteration necessary case study systematic literature review mapping study also derived quality model specically tailored given case deni tion relevance quality attribute discussed internally workshop expert later three case study focus requirement engineering mlsystems conducted fujitsu laboratory paper author present overall requirement engineering process detail qual ity model presented performed case study conrmed quality attributesidentied valid meaningful developer especially context requirement specication term limitation see three main aspect address processrelated aspect yet quality assured activity handled role believe proposed viewsobjects help establish mapping role data scientist data engineer etc quality attribute metric example data scientist usually charge building model direct line come measuring impact data quality model outcome however data engineer one usually implement new data quality improvementactions architect good understanding needed order solve problem system level identied view may incomplete currently focus later stage crispdm missing stage business understanding requirement data understanding related measurement object example data understanding nature rather experimental artifact produced thisstage usually consist set decision data preparation algorithm choose may accompanied code snippet visualization notebook report open question whether view augmented newmeasurement object specic requirement document experiment report notebook etc whether another classication direction based upon process needed finally viewpoint dening quality model data science perspective integration classical softwaresystem engineering quality suchas dened isoiec missing yet consensus naming mlrelated quality attribute furthermore whereas pro posed attribute easily classied existing isoiec one egthe model goodness fit could potentially belong functional correctness others may difcult classify scope compliance whether isoiec right framework component still open issue lesson learned conclusion article presented constructed concrete quality model systembased industrial case completely aware model developed quite specic case case may require different quality aspectstowards guideline assessing quality machine learning system consequence different metric however would like share excerpt lesson learned following described methodological approach eventhough known eld nonetheless think worth mentioning context developing system context case must clear pointed many application eld potential mlbased solution available important clear possible general application context model never everbe used sake fancy always profound assumption add concrete value application context quality aspect important mainly depend iterative approach model application context case adjusted time initial assumption turn false therefore important follow iterative approach developing system able quickly identify dead end take different path clear picture quality aspect important quantify crucial asit allows immediately see whether fulll solution path multidisciplinary work stated beginning article different kind knowledge must come together developing qualityaware system forinstance data scientist know measure fairness stability trained model softwaresystem engineer know assure quality overall system domain expert know whether system really solves problembetter traditional software system devil detail learned easy talk abstract generic quality aspect dened isoiec high level denemeaningful quality aspect break concrete quality measurement object dene operationalize aspect metric qualityaware processguidelines even though dened process model building crispdm software engineering rich agile process elaborate practice improvement devops approach integrated process missing guideline exist bring everything together clear focus quality system regarding future work plan perform case study empirically validate different quality aspect detail specically relevance prac titioners deal different process stage second want applythis method problem like regression unsupervised problem learn impact quality model third intend package insight development guideline qualityaware system reference wan xia murphy machine learning change software development practice ieee trans softw eng siebert sculley hidden technical debt machine learning system proceeding international conference neural information processing system zhang harman liu machine learning testing survey landscape horizon ieee trans softw eng isoiec system software engineeringsystems software quality requirement evaluation squaresystem software quality model isots data quality highlevel expert group articial intelligence ethic guideline trustworthy european commission din spec knstliche intelligenz life cycle prozesse und qualittsanforderun gen teil qualittsmetamodell beuth erlag gmbh berlin hamada ishikawa masuda matsuya ujita guideline quality assur ance machine learningbased articial intelligence seke international conference software engineering knowledge engineering trustworthy articial intelligence priority philosophical ethical legal technological viewpoint basis certication articial intelligence fraunhofer institute intelligent analysis information system iais schloss birlinghoven principle practice interdisciplinary framework operationalise ethic vde bertelsmann stiftung marselis shaukat gansel testing articial intelligence sogeti paris marselis shaukat machine intelligence quality characteristic measure quality articial intelligence robotics sogeti paris nakajima quality assurance machine learning software ieee global conference consumer electronics gcce october ieee piscataway mariscal marbn fernndez survey data mining knowledge discovery process model methodology knowl eng rev martinezplumed crispdm twenty year later data mining process data science trajectory ieee trans knowl data eng lwakatare raj bosch olsson crnkovic taxonomy software engi neering challenge machine learning system empirical investigation kruchten fraser coallier ed lnbip springer cham amershi software engineering machine learning case study ieeeacm international conference software engineering software engineering practice icseseip hossin sulaiman review evaluation metric data classication evaluation ijdkp emmons kobourov gallant brner analysis network clustering algorithm cluster quality metric scale plo one barocas boyd engaging ethic data science practice commun acm kleinberg mullainathan raghavan inherent tradeoff fair determination risk score arxivorg wagner operationalised product quality model assessment quamoco approach inf softw technol kaufman rosset perlich leakage data mining apte ghosh smyth ed proceeding acm sigkdd international conference knowledge discovery data mining san diego usa august acm new ork towards guideline assessing quality machine learning system kls ollmer uncertainty machine learning application practicedriven classication uncertainty gallina skavhaug schoitsch bitsch ed safecomp lncs springer cham nakamichi requirementsdriven method determine quality characteristic measurement machine learning software evaluation ieee internationalrequirements engineering conference redata cleaning case study openrene trifacta wrangler dessislava petrovaantonovaband rumyana tancheva institute soa university ohridski soa bulgaria dpetrovafmiunisofiabg rumytanchevagmailcom abstract data cleaning timeconsuming activity data science project aimed delivery highquality datasets provide accuracy corre sponding trained model due variability data type format dataorigin acquisition different data quality problem arise leading develop ment variety cleaning technique tool paper provides mapping nature scope dimension data quality problem comparative analysis widely used tool dealing problem existing data cleaning technique serve basis comparing cleaning capability tool furthermore case study addressing presented data quality problem cleaning technique presented utilizing one commonly used software product openrene trifacta wrangler although application similar data cleaning technique dataset result show theperformance tool different keywords data cleaning data quality data cleaning technique tool introduction according idc collective sum world data grow management analysis unprecedented amount data key success factor exploit benet estimated effort data scientist spent preparing data analytics data cleaning constitutes often neglected since data acquisition method often cause problem outofrange value missing value impossible data combination analyzing datawithout cleaning produce inaccurate undesirable result data cleaning one critical step project removing data violation providing data quality paper provides insight data anomaly current software tool platform data cleaning analyzed based supported data preparation meth od including data cleaning main research question effective currently available tool preparation data analytics order answer two softwaretools selected analyzed one complete particular scenario rest paper structured follows section outline data quality problem present comparison analysis commonly used data cleaning toolssection describes case study using software tool openrene trifacta springer nature ed qua tic data cleaning case study openrene trifacta wrangler wrangler show practical application data cleaning technique section discus obtained result finally sect summarizes paper data quality cleaning producing high quality datasets require data problem identied cleaned using different data cleaning technique although different taxonomy method ology data anomaly best knowledge command accepted def inition exists due diversity data quality violation data typesformats domain thus lot method detection data quality problem proposed neither situation dimension data quality feature data used ass quality data stateoftheart literature includes various denitions data quality dimension consistency completeness uniqueness accuracy alidity timeless regarding scope data quality problem occur cell value column header row cell value andcolumn header time order speedup process data preparation table data preparation cleaning tool data cleaning techniquesclean match rapid minertibcoclarity dataladder openrene trifacta datacleaner data proling missing value fuzzymatching outlier spellingvariations email addressvalidation datastandardization phone numbervalidation data aggregation clustering cell data enrichment deduplication language groovygrel grel wrangler javascript petrovaantonova tancheva cleaning automation needed one commonly used tool win pure clean match rapidminer tibco clarity data ladder openrene trifactaand data cleaner comparison shown table tool differ supported data format technique data ltering enrichment clustering etc example winpure clean match data ladder adopt fuzzymatching technique match keying error transposition reading error visually score match assign weight group nonexact match fuzzy logic also used data cleaner customize cleansing rule compose several scenario tibco clarity openene support general rene expression language grel data manipulation including transformation normalization rapidminer trifacta based groovy wrangler language respectively data ladder trifacta implement advanced functionality data enrichment ensuring new data also cleaned case study section present case study showing application existing data cleaning technique sample dataset using openrene trifacta tool sample dataset including information scientic journal dataset contains row information scholarship journal journal described column issn journalname pubname ishybrid category url data cleaning openrene section present implementation data cleaning openrenecleaning structural error cleaning structural error started issn column removing leading trailing whitespaces well consecutive whitespaces next data format value issn column checked rowis found value issn journalname column switched addition ascii table used check issns invalid character cleaning journalname column cluster similar string value identiedand one right journal title selected based title corresponding issn web fast simple clustering method fingerprint shown ngram fingerprint alternative method fingerprint difference us ngrams instead token ngram fingerprint method doesnt advantage fingerprint method big value ngrams used whengrams gram used method nd cluster previous method discover phonetic fingerprint method transforms token way pronounced appliable error caused people misunderstandingor bad spelling cell journalname column store multiple value namely journal title additional information related open access journal journalurl new column comment created store additional information part journal title data pubname category url column processed similar way result presented table data cleaning case study openrene trifacta wrangler application fingerprint method openrene table processed eld openrene clustering method journalname pubname category url ngram ngerprint ngerprint phonetic ngerprint total number processed eld duplicate row removal searching duplicate row performed issn column dataset using duplicate facet command openrene duplicate issns found row issn issns identical row pair removed information secondpair row issn match issn indicates data inconsistency issn value corrected manual checking web outlier removal allowed value column ishybrid either value interpreted outlier order identify whether journal open closed access manual search web performed identication missing value order identify missing value cell contain ing nan null whitespaces found see table pubname column contains missing value total number record thus recommended delete lot ofdata lost missing value lled string value missing indicate corresponding cell contain valuable information petrovaantonova tancheva table identication missing value openrene missing value issn journalname pubname ishybrid category url whitespaces nan null total data cleaning trifacta wrangler section present data cleaning trifacta one advantage option record applied data processing step recipe procedure allows forapplication procedure different datasets similar problem cleaning structural error since trifacta enables operation applied multiple column leading trailing whitespaces quote quickly removedfrom column except ishybrid column next value issn column processed record issn exceeds maximum allowed length character value issn journalname column switched thatrecord order check exact format value issn column regular expression dened using wrangler language additional column called issn created valued match regular expression copied rest represented whitespaces record last character issn written lowercase found corrected value journalname columnare unied using ngram fingerprint method addition fingerprint pronunciation method applied achieve precise result pronuncia tion method identies cluster based language pronunciation using doublemetaphonealgorithm result summarized table table processed eld trifacta wragler clustering method journalname pubname category url ngram ngerprint ngerprint phonetic ngerprint total number processed eld journalname column cell additional journal title information moved separate column value length character kept initial state remain value manually processed redundant information moved new comment columndata cleaning case study openrene trifacta wrangler duplicate row removal trifacta give quick overview current status given column figure show summary issn column duplicated record issn deleted record issn different value journalname column checking found issn journal arquivos neuropsiquiatria wrong unfortunately trifactadoes provide easy way modication single value functionality oriented towards modication multiple eld meet given criterion issn summary report trifacta wrangler outlier removal trifacta wrangler found one outlier ishybrid column value based experiment openrene value changed identication missing value missing value represented nan null whitespaces unfortunately trifacta identies whitespaces andmarks null therefore additional operation applied order identied missing value including represented nan null summary identied missing value presented table missing value lled string value missing purpose analysis table identication missing value trifacta wrangler missing value issn journalname pubname ishybrid category url whitespaces nan null total petrovaantonova tancheva result analysis although data cleaning technique applied performance tool different see table one different advantage disadvantage see table trifacta catch duplicate row since allow editing single eld several eld suitable processing result obtained trifacta number eld removed whitespaces based assumption tool provide information number changed recordsafter execution particular command due limitation corrected record counted manually since result obtained column openrene assumption made result identical column table summary result technique result number openrene trifacta duplicate row removal existing duplicate row removed duplicate row cleaning structural error field removed whitespaces field incorrectformat field corrected format clustering text facet unied eld outlier existing outlier removed outlier missing value existing missingvalues identied missingvalues also difference result number unied eld due difference implementation fingerprint ngram fingerprint meth od tool different technique split string token openrene clearsthe punctuation control character string split section using blank space trifacta us empty space punctuation control character delimiters removed advance lead difference proposedgroups unication although tool method example group including parkinson disease parkinson disease treated way openrene detects based fingerprint method trifacta detectsit pronunciation method applied difference result alsodata cleaning case study openrene trifacta wrangler table tool advantage disadvantage advantage disadvantage openrene easy modication single eld eld necessary satisfy given criterion bechanged multiple record processing statistic number record processed agiven operation doesnt support processing large datasets trifacta record applied data processing step recipe procedure nonblocking processing largedatasets support easier function different method lling missing value single eld modied allows modication multiple eld meet givencriterion missing information number record processed given operation due third method clustering trifacta us double metaphone method openrene us phonetic fingerprint method metaphone longe phonetic application metaphone method thought increasethe accuracy result comparison double metaphone method common english word number removed outlier missing value tool conclusion data preparation especially data cleaning time effort consumingtask data science project lead development broad range data cleaning technique tool handle variety data quality problem paper outline data quality problem providing mapping nature scope anddimension commonly used tool platform data cleaning studied compared according supported data cleaning technique order provide deep understanding data quality issue sample case study performed using two different data cleaning tool namely openrene trifacta wrangler result show performance tool different although application similardata cleaning technique dataset acknowledgement research work supported project funded horizon widespread teaming phase programme grant agreementno bigsmart itdgate project funded bulgarian national science fund agreement agreement petrovaantonova tancheva reference reinsel gantz rydning digitization world idc white paper crowdflower data science report httpsvisitgureeightcomrszbe imagescrowdflowerdatasciencereportpdf accessed mar sebestyen hangan czako kovacs taxonomy platform anomaly detection international conference automation quality testing robotics batini barone mastrella maurino rufni framework methodol ogy data quality assessment monitoring international conference information quality kim choi kim lee taxonomy dirty data data min knowl disc josko jmb oikawa ferreira formal taxonomy improve data defect description gao kim sakurai ed dasfaa lncs springer cham sidi panahy affendey jabar ibrahim mustapha data quality survey data quality dimension international conference information retrieval knowledge management ieee laranjeiro soydemir bernardino survey data quality classifying poor data pacic rim international symposium dependable computing prdc ieee sukhobok nikolov roman tabular data anomaly pattern international conference big data innovation application innovatedata ieee httpsgithubcomflourishoadata accessed feb chan asardani winter getting lost city spatial pattern phonetically confusing street name trans gi nsp dataset oine signature verication dmitry bakhteevband roman sudarikov department criminalistics ural state law university yekaterinburg russian federation aecrimlibinfo institute formal applied linguistics charles university prague czech republic sudarikovufalmffcunicz abstract oine signature verication challenging task computer science forensics skilled forgery often recog nized human lead need develop automated forged signature recognition method turn requires creation ofdierent datasets training model include nsp dataset cyrillic oine signature including genuine signature skilled simple forgery process collecting data thisdataset described detail process collecting sample reformulated forensic classication signature criterion structure forgery vulnerability gathered database evaluatedusing siamese neural network model result compared model trained cedar dataset keywords oine signature verication signature forensics siamese neural network introduction history mankind dozen dierent method remote identication person created introduced lost handwritten signature turned stable suitable prop document used ineconomic law enforcement activity mainly due comparative ease execution noninvasive method receipt forensics signature carry identication diagnostic value identication allows establish specicperformer signature determine whether genuine forged two object always involved identication process authenticity one always precisely known diagnostics signature allows establish thecharacteristics performer identity personality trait forgery point view method performing divided three type autoforgery simple skilled forgery case autoforgery performer owner signature purpose ccirclecopyrtspringer nature ed bakhteev sudarikov action alleged future refusal recognize document properly signed case simple forgery within framework study weunderstand forgery creation forger knowledge signer name example handwritten signature recognize signature made without image signer signature course case law enforcement case occur resolving big problem due low similarity existing genuine document forged one skilled forgery performed presence examplesof genuine signature also help special skill forger whole signature verication eld divided two main category acquisition type online oine verication online signature vericationdeals analysis signature captured using digitizing device take account sequence stroke time pen position pen pressure etc oine verication hand acquires signature process nished commonly form digital image practical scope combining forensic method possibility oine signature recognition expands possibility identication process civil commercial law enforcement activity expands communication academic discipline practice outline paper following sect devoted review related work eld signature verication sect describes process collecting nsp dataset processing done around section discus forensic discovery made dataset collection sect detail assessment experiment carried using collected dataset finally sectconcludes paper future work related work recent advancement eld oine signature verication including research deep learning method described work reviewed commonly used datasets cedar mcyt gpds dierent approach oine signature verication starting classic machine learning algorithm support vector machine svm hidden markov model followed deep neural network classiers ensemble also appropriate mention two dierent type verica tion model writerindependent writerdependent name former model applied signature verication task independently whether saw subject signature training set latter model though need exposed subject signature training also dierent approach feature extraction convolutional neural network cnn composition presented former introduced signet convolutional siamese neural network learns writerindependent feature show good performance cross domain datasets latter showed performance improvement combining cnn feature extraction svm writerindependent classiernsp dataset oine signature verication mentioned previously currently several benchmark datasets eld signature verication cedar mcyt gpds bhsig characteristic nsp dataset comparison existing datasets presented table table comparison oine signature datasets handwriting system signer signature genuineforged nsp cyrillic cedar latin mcyt latin gpds latin bhsig bangla hindi nsp dataset collection nsp handwritten signature dataset contains genuine signature corresponding forgery one signer genuine signature taken signer twosheets form including box signaturesand eld information signer name age dominant hand quantity explained fact order obtain reliable knowledge degree variational change signature one person necessary toconsistently receive least signature according method production handwriting examination end process signer lose focus hand get tired control accuracy movement decreasesand signature becomes automatic receive almost full space possible signature variation smaller amount signature may give reliable result table distribution nsp signature dataset signer avg agerightlefthandedness genuine forgeriesskilledsimple male female total noted signature resident russian fed eration usually cyrillic rare exception distinguishes nsp dataset described earlier sect bakhteev sudarikov left signature genuine vertical stroke marked left one unskilled forgery lack example signature crossing signature line vertical line box forgery made skilled unskilled simple form skilled forg erie done group people experience either artistry forensic examination handwritten document hypothesis skill allow forger make almost exact copy given signature either basis graphical appearance case artist orby understanding forensic feature signature forensic expert unskilled simple forgery done people experience handwriting exam ination andor signature forgery forger often lost sight one anothercharacteristic forged signature see example every forger skilled unskilled situation provided two sheet genuine signature knew name signer age havean ability transcript questioned symbol signature correctly signature lefthanded signer forged lefthanded forger lefthanded righthanded forger involved making forgery righthanded signature forger independently chose exact signature would copy decision made simulation situation real document forgery known exactly signature used sample forforgery forgery also done form box resulting set signature one person contains sheet genuine signature sheet forgery forgery prepared without special technical mean plotter transfer paper wet copying source ofbackground lighting etc resulting sheet genuine signature forgery scanned resolution dpi digital image divided separate image one signature per image individual image signature obtained automatically cutting image sheet along line form manually trimming signature border rectangleat extreme point signature signature stroke cross line box signature left dataset additionally form later sample used imitation signature line bottom four rowsof form accordingly horizontal vertical line found obtained image see example case oine signature veri cation technology practiceoriented signature practice usuallynsp dataset oine signature verication example signature type containing several letter example signature type containing let ters last name signer possible initial combined detail document like seal imprint line form document statistical data composition nsp dataset summarized table signer provide information explains inconsistency table whole process gathering genuine signature accomplished supervision project team member forger category giveninstructions result work carefully checked participant experiment instructed rule working personal data corresponding conrmation taken type signature according design composition signature resident russianfederation signature conditionally dierentiated four type signature based performance several letter usually low readability low resistance forgery method signature containing initial letter surname character readable archetype dominant russia becauseit combine speed execution overall complexity sucient counter simple forgery method expressed signicant number private feature displayed signature usually signature stretched horizontally signature spelling last name often together name patronymic without complicating simplifying element theusual handwriting performer signature usually well defended forgery due slower pace performance type signature performed increased pace compared regular writing signer signaturesdrawings complex design consisting conditional element form letter mainly superscriptsubscript elegant bakhteev sudarikov example signature type containing full last name signer example letterless signa tures type table experiment datasets signer genuine per signer forgery per genuine total pair cedar train validation test nsp train validation test elaborate stroke complex structure complex system mul tidirectional movement overlapping movement complicated structure usually continuous connectivity resistance forging method varies experiment demonstrate relative complexity dataset decided take one best performing model namely convolutional siamese neural network model show performance nsp dataset well cedar dataset experiment separated nsp dataset described part training validation test distribution following signer used training validation test signer assignedrandomly beginning experiment run provide consistent reliable result signer used genuine signature genuine signature picked forgery random balancednumber genuinegenuine genuineforged sample experiment carried using cedar dataset serve ref erence point used model cedar dataset used signersnsp dataset oine signature verication training validation test signer used available genuine signature available forgery final setup experiment nsp cedar datasets shown table experiment signature sample resized pixel normalize signature size keep input vector space reasonablysmall model setup followed approach similar layer conguration implementation done using kera framework tensorow backend toshow trained model comparable result evaluated cedar dataset nsp dataset experiment following evaluation step best epoch selected based contrastive loss function value validation set output model distance metric doesnt directly predicts class image rather distance thus threshold needed determined decide input image belong class signature genuine one forged experiment samevalidation set used estimate best threshold map output distance value binary class estimated threshold used translate output model test set sample binary class table experiment result dataset far frr accuracy cedar nsp run mean experiment result result nsp cedar datasets presented table following metric false rejection rate frr false acceptance rate far accuracy frr computed ratio false negative sample divided bythe total number positive sample far computed ratio false positive sample divided total number negative sample accuracy computed ratio sum true positive true negative predicted pairsand sum number pair examined cedar experiment frr result far accuracy dier attributed way loss function thresholdis estimated current experiment since validation set specically used estimate threshold value output separation table show resulting con fusion matrix exact number result show model performs comparable level similar work bakhteev sudarikov table cedar confusion matrix true genuine forged predicted genuine forged table nsp confusion matrix true genuine forged predicted genuine forged nsp experiment run nine time mean result con dence interval reported table nsp experiment result lower cedar one could attributed higher complexityand diversity signature nsp dataset confusion matrix presented table show result one experiment run give idea prediction distribution conclusiondiscussion siamese neural network model showed promising result well left roomfor potential improvement future work model planning evaluate dierent model architecture nsp dataset well work crossdataset experimentswhere model would trained nsp dataset tested gpds mcyt datasets see well model generalize feature could transferred dierent script collection signature sample dataset completed hopefully several hundred new signature included weekly allows increasing size variety data acknowledgement reported study funded rfbr according research project reference dey dutta toledo ghosh llad pal signet convolu tional siamese network writer independent oine signature verication arxiv preprint arxiv hadsell chopra lecun dimensionality reduction learning invari ant mapping ieee computer society conference computer vision pattern recognition cvpr ieee hafemann sabourin oliveira oine handwritten signature vericationliterature review seventh international conference image processing theory tool application ipta ieee kalera srihari oine signature verication identication using distance statistic int pattern recogn artif intell nsp dataset oine signature verication ortegagarcia mcyt baseline corpus bimodal biometric database iee procvision image signal process pal alaei pal blumenstein performance oline signature ver ication method based texture feature large indicscript signature dataset iapr workshop document analysis system da souza oliveira sabourin writerindependent approach oine signature verication using deep convolutional neural network feature brazilian conference intelligent system bracis ieee vargas ferrer travieso alonso oline handwritten signature gpds corpus ninth international conference document analysis andrecognition icdar ieee evidencebased software quality engineeringapplying machine learning echnical debt management future opportunity challenge angelikiagathi tsintzira elviramaria arvanitoub apostolos ampatzoglou alexander chatzigeorgiou department applied informatics university macedonia thessaloniki greece angelikiagathitsintziragmailcom earvanitouaampatzoglouuomedugr achatuomgr abstract technical debt management tdm fastgrowing eld last year attracted attention academia industry tdm complex process sense relies multiple heterogeneous data source source code feature request bug developer activity etc straightforwardly synthesized leading community using mostly qualitative empirical method however empirical study involve expert judgement inherently biased compared automated semiautomated approach overcome limitation broader tdm software engineering communityhas started employ machine learning technology goal investi gate opportunity applying technology tdm systematic literature review slr application software engineering problem since application tdm thus performed broader scope study machine learning software engineering synthesize result achieve highlevel goal possible applicationof tdm therefore conducted literature review browsing research corpus published highquality journal goal cataloging software engineering practice used themachine learning technology used solving inter section two developing problemsolution mapping result useful academic industry since former identify possible gap andinteresting future research direction whereas latter obtain benet adopting technology keywords machine learning software quality literature review technical debt technical debt management introduction software quality multidisciplinary topic sense quality well software meet user need well software conforms specications developer point view well inherent structural characteristic springer nature ed qua tic tsintzira software achieved product point view much enduser willing pay value point view recent year structural view software quality discussed metaphor termed technical debt valuates poor software quality incurred maintainability problem technical debt management tdm refers activity performed forguaranteeing efcient handling identifying measuring prioritizing repaying etc signicant portion tdm research nowadays performed qualitative empirical study however inherently qualitative study subject biasin sense heavily rely expert judgement alleviate subjectivity traditional software quality research researcher nowadays exploiting large amount data available softwarerepositories data enable researcher perform largescale quantitative study adopt modern technique machine learning effectively carry specic task without relying explicit instruction rule example supervised machine learning technique used build model predict number defect software system based aforementioned applicability technologieswe believe opportunity apply technical debt management nevertheless best knowledge current tdm stateoftheart study propose explicitly tdm despite fact constituent code smell detection change proneness assessment unsupervised supervised approach applied study focus nancial perspective economics code smell refactorings change technical view phenomenon goal study investigate applied tdm studying existing literature since stateoftheart lack substantial amount study weconducted broader secondary study machine learning approach used software engineering practice conducting systematic literature review slr next interpret ndings context tdm note thenature study exploratory sense aim providing panorama intersection two eld without going detail instance aim provide trend analysis explore benet obtained would require explanatory research setting reason decision fact quite broad single study would able coverboth goal therefore believe exploratory study required setup research scene thus main outcome study provision cthe current status research combining software engineering particular investigate software engineering practice approached technology cthe opportunity applying tdm achieve goal map software engineering practice already applied tdm activity concept cthe challenge adoption tdm research section present related work secondary study back ground concept tdm next sect provides literature review protocol whereasapplying machine learning technical debt management sect present result study section discus status opportunity challenge applying tdm research whereas sect display threat validity finally sect concludes paper provides implication researcher software development industry related work background information related work literature able identify one secondary study summarizes machine learning software engineering particularzhang surveyed literature identify commonly used technology applied software engineering provide guideline perform software engineering main difference studycompared systematic approach obtaining analyzing studiesie survey instead slr study mapping obtained result context tdm addition identied secondary studiesthat focus specic software engineering practice underline importance using technology specically sharma spinellis azeem performed secondary study code smell detection technology acknowledged many modern approach employ machine learning algorithm similar context heckman performed slr approach providing bad design alert static analysis finally various study delivered overview costeffort estimation approach emphasize popularity technology providing accurate estimate background information metaphor relies two concept borrowed economics namely principal interest principal refers effort required eliminate inefciencies identied current version software whereas interest refers extra maintenance effort required modify soft ware due presence debt example artifact need maintained introduction new feature additional effort need spent resolving itdue inferior design quality another concept related tdm interest probability literature instability susceptibility artifact change considered proxy interest probability particular artifact high instability moreprobable accumulate interest since manifest maintenance activity according tdm decomposed eight activity synthesized follows four category visualizing tdtd representation communicationthat reect way presented among stakeholder monitoring follows evolution quantifying tdtd identication nding artifact suffer measurement mapping extent problemto numerical value prioritizing tdthe process prioritization rank identied item according certain predened rule support deciding item repaid item tolerated later release reducing tdto reduce two activity performed namely prevention repayment tsintzira study design section present design systematic literature review protocol pre determined plan describes research question study conducted next subsection present decision taken study design phase research objective research question goal study described follows analyze existing software engineering literature purpose ofunderstanding application machine learning technology solving software engineering practice respect targeted software engineering practice proposed machine learning solution mapping systematically explore aforementioned goal study built around three rqs rqwhich problem solved machine learning technology rqwhich practice targeted approach rqwhich quality attribute beneted technology rqwhich machine learning technology used approaching software engineering problem rqwhich common learning style unsupervised supervised semisupervised used rqwhich common algorithm used rqwhat mapping problem solution software engineering mature science eld however strives new solu tions wellknown problem rise articial intelligence increment volume data produced software development many researcher havetried investigate articial intelligence specically machine learning aid improving analysis prediction problem one hand try cata logue software engineering practice approached machine learningplacing special emphasis practice attempted improved tar geted quality attribute interest hand investigates machine learning technology aim satisfactorily solving software engineering problemscompared traditional approach special emphasis placed machine learn ing algorithm learning style challenge success indicator finally attempt synthesize ndings previous research question goal mapping solution practice machine learning used search process search procedure aim identication candidate primary study search plan involved automated search topquality publication venue narrowing search space primary study specic topquality venue acknowledged wellknown practice broad study sense guarantee quality relevance primary study enue selection basedapplying machine learning technical debt management process applied karanatsiou wellknown series bibliometric study topscholars institute software engineering published morethan two decade j venue selection process based four criterion venue classied computer software australian research council evaluation higher equal level schema average citation per month per published article general scope journal restricted phase activity next based retained top journal excluding mag azines particular searched article identied information software technology ieee transaction software engineering acm transaction soft ware engineering methodology journal system software empirical software engineering particular present overview process along number study step finally retrieved primary study oldest publication newsiest publication overview search process since publication venue strictly software engineering eld search string needed focused technology keywords search stringwe chosen simple generic term may yield many meaningful result possible without bias preference certain machine learning method technique thus apart term machine learning per used common learning style supervised unsupervised semisupervised learn ing search string applied abstract title manuscript selected venue without time constraint search conductedautomatically dl venue nal search string tsintzira machine learning supervised learning unsupervised learning semisupervised learning article filtering phase paper selected candidate primary study review relevant application machine learning software engineeringin line dyb dingsyr important element systematic mapping planning dene inclusion criterion exclusion criterion primary study included satises one ic excluded satises one ormore ec inclusion criterion systematic mapping study applies one technology practice study denes one way evaluate quality exclusion criterion systematic mapping areec study editorial keynote opinion tutorial workshop summary report poster panel study full text available study mention introduction related work section identied article went inclusionexclusion criterion taking account full text article article inclusion exclusion performed independently second author conicts resolved throughdiscussion among three author process conicts identied resolved either unanimous inclusion exclusion article consideration quality assessment omitted step quality assessment two reason since paper obtained topquality venue software engineering quality extent ensured rigorous review process selected venue set research question quality research domain study data collection data collection phase collected data set vari ables describe primary study similarly article inclusionexclusion data collection process also handled independently author second author reviewer assigned value one variable value would assigned variable without discussion conicts resolved two level two author discussed internally consensus reached thenthe discussion extended third author first level conicts found study whereas second level conicts resolved study every study extracted following data year title publication enue practice cost estimation refactoring targeted business product quality learning style semi supervised algorithm challenge challenge applying data evaluation metric data analysis aforementioned variable used documentation purpose analysis strategy research question asfollows answer provide frequency variable andapplying machine learning technical debt management respectively answer perform crosstabulation vari ables note due lack quantitative data hypothesis testing statisticalanalysis conducted result section present result data analysis organized note synthesized view result transfer obtained result tdm context provided sect software engineering problem approached practice problem defect management fault proneness prediction prioritization defect prediction fault localization costeffort estimation development costeffort estimation software maintenance effort prediction maintenance type classication designtime qas change proneness prediction user interface design software product process quality assessment code smell pattern tactic detection api instability detection refactoring test suite refactoring recommendation project management bug report change request assignment recommendation prioritization classication software bug commit log recommendation code reviewprioritization conguration management recommendation development activity detection software upgrade recommendation security malware malicious code intrusion classicationdetection fault injection detection software vulnerability detection requirement engineering functional requirement recommendation nonfunctional requirement detection requirement prioritization requirement assessment software spl congurations detection application domain classication runtime qas performance prediction energy efciency recommendation reuse api usage recommendation code example prioritizationfor reuse program comprehension trace recovery reverse engineering tsintzira software engineering application table present frequency software engineering practice approached analysis identied highlevel software engineering practice practice present frequency problem solved acknowledging inherent relationship tdm maintainability table provide overview qas targeted application obtained result observe maintainability subcharacteristics namely testability reusabil ity modiability analyzability common target technologiesie mltechnologies relevant tdm business quality attribute also targeted mlrendering relevant tdm sense optimizing business qas main root accumulation targeted quality attribute freq low level maintainability testability reusability modiability analyzability functional suitability functional correctness security business goal improve market position reduce cost development performance efciency resource utilization usability reliability machine learning echnologies solve aforementioned problem variety algorithm learning style used dominant learning style super vised learning algorithm followed unsupervised semisupervised learning table present frequently used algorithm used study apart algorithm name frequency appear ance also provide generic category classied note caseswhen author specied concrete algorithm neural network term generic used algorithm evaluate solution many performance measure performance measure typically specialized class ofthe problem classication regression clustering etc problem discrete output classicationclustering researcher metric compare actual predicted value precision recall etc problem continuousoutput regression prefer metric capture error rate predictionseg mmre pred etc mapping practice approach next step presented result originating discipline independently present classication schema map common software engineering practice algorithm used solving see investigate aapplying machine learning technical debt management machine learning algorithm algorithm freq generic category bayesian network probabilistic analysis cart decision tree svm kernel method neural network biologicallyinspired computation random forest ensemble learner ripper rule system regression statistical analysis kmeans clustering knn nearest neighbor relation specic algorithm software engineering practice exists performed chisquare test result suggested two variable associ ated alpha therefore according ndings slr specic algorithm appear appropriate specic practice viceversa mapping software engineering practice tsintzira tdm machine learning section discus main ndings work current status research using problem identied opportunity community challenge might exist applying tdm research current status observed machine learning technology applied resolve multiple quite diverse research problem however appear prevalent particular observed defect management costeffort estimation management design time quality attribute recommendation efcient project management detection security threat common prac tices investigated note management refer case predict future state ass classify detect phenomenon interest term ofquality attribute relevant one appeared improvement maintain ability functional suitability correctness followed security business quality attribute term algorithm suggest bayesian network various decision tree svm frequently used one finally identied neural network analysis appears tting costeffort estimation practice bayesian network fordefect andproject management practice random forrest algorithm appear appropriate managing design time qas hand clustering anddecision tree appear equally tting various practice tdm opportunity based result evident many studied practice qas interest related tdm therefore drive interesting future research implication one hand regarding result table frequently studied practice observe vast majority mapped tdm activity presented exception security management runtime quality attribute whose inefciencies denition notcategorized particular following practice mapped activity tdm activity present practice map next practice used context tdm research practice identication deal recognizing software artifact suffer particular problem contain therefore study focus code smell pattern actics detection approach improv ing design time quality attribute considered tting elaborate identi cation based researcher try improve detection accuracyof approach whereas practitioner accompanying tool identify design hotspot part system yield quality improvement quantication monetization key concept metaphor perform tdm principal interest need quantied currency form end costeffort estimation method highly relevant however study author discus ndings context quantication one hand researcher encouraged introduce cost effort estimation approach based past data predict cost applying refactoring ierelated principal quantication predict cost future maintenanceapplying machine learning technical debt management effort related interest quantication hand practitioner existing novel approach getting monetary estimation tdto improve communication poor software quality cost higher nontechnical management prioritization literature three way prioritization pro posed based principal interest interest probability sense study focus change ault proneness assessment relevant prioritization since concept closely related interest probability change fault lead maintenance activity accumulate interest based researcher introduce algorithm predict software module prone change fault providing practitioner tool support identifyingmodules need special attention tdm finally regarding case monetization interest primary importance prioritization ranking term maintainability proxy interest satisfactory compromise accuracy ease therefore method used assessing charac terizing level qas maintainability useful prioritization based interest repaymentprevention regarding repayment currently various approach propose identication refactoring opportunity order ing refactorings shall performed additionally adoption reuse strategy creation oftraces along artifact expected benecial preventing accumulation new principal based aboveon one hand researcher expected propose mlbased refactoring iden tication strategy optimizing principal interest minimization allowing practitioner perform informed repayment hand researchersare encouraged explore relation specic practice traceabil ity reuse prevention relation positive provide mechanism practitioner applying system hand considering targeted quality attribute see table also identify connection tdm first since frequently targeted quality attribute maintainability easily assume technology used improve maintainability relevant see sect additionally many study approach used apply practice aid term improvement market position product reduce development cost shrinking product timetomarket general satisfaction business goal root accumulating principal bring product market faster additionally improvement market position product considered byproduct tdm especially case combined prioritization challenge applying tdm part analysis identied spe cic challenge applying tdm practice among important one acknowledge following first need substantial preprocessing theused datasets eliminate case imbalanced datasets handling duplicate val ues multicollinearity predictor variable etc additionally specically tdm tsintzira expected face many difculties creating solid dataset since method quan tifying highly diverse stateofpractice technique exist furthermore forsupervised learning algorithm labelling training data software module challenging universal approach measuring exists contrast eld cost estimation lack benchmark used training andtesting algorithm cocomo isbsg furthermore common challenge applying software engineering curse dimensionality researcher shall limit variable shall fed model challenge isalso highly relevant tdm sense multidimensional concept whose assessment requires consideration multiple aspect code smell improper architectural decision etc also people habit employed process therefore since application approach requires small subset input variable obtain timeefcient accurate noiseless model paramount importance effectively perform data reduction threat alidity section present threat validity identied mitigated aspart study design threat organized based guideline identifying mitigating reporting threat validity secondary study software engineering proposed ampatzoglou study selection alidity guarantee study relevant topic identied systematically developed search string based type existing machine learning approach however possible missed study mention title specic method deep learning neutral network etcto guarantee relevance software engineering selected journal publish article fulltexts article available used digital library written english since goal target high quality research excluded grey literature adequately lter article predened list inclusionexclusion criterion discussed among others andpiloted random screening author voting data alidity although search publication venue retrieved paper inclusion study data collection constitutes oursample size large enough analysis selection variable based set research question therefore adequate answering although result come venue believe publication biassince article top journal come various community quality primary study guaranteed quality selected venue avoid data extraction bias one author involved process one doublechecked theresults agreement rate captured case disagreement open discussion performedapplying machine learning technical debt management research alidity increase reliability replicability study involved one researcher step process data made availablefinally ensured correct research method used slr since synthesis required achieve highlevel goal however acknowledge lack direct related work allowed comparison result however theexperience author tdm research allowed interpretation result increasing generalisability discussionconclusions study investigates machine learning technology applied technical debt management tdm best knowledge systematicliterature review study focus applied tdm achieve goal performed broad literature review technology applied solve practice general result analysis suggest thata common practice approached technology defect management costeffort estimation target technology improve product maintainability business reduce developmenttime quality technology better map specic practice however others widespread applicable various case result study provide multiple implication researcher soft ware development industry regarding software development industry relevance resolving software engineering practice highlight potential benet hiring personnel data scientist dedicated data analysis interpretation output provided analysis proved useful many aspect development presented table additionally software practitioner encouraged incorporate daily process tool research prototype thatare based make provided recommendation assessment prediction detection etc hand suggest tdm researcher start exploring possibility applying machine learning technology research endeavour specically prompt migrate solution traditional practice cost estimation smell detection etc context technical debtmanagement since considered relevant additionally existence various nontrivial challenge adoption tdm research strength en aforementioned argumentation sense highquality research outcomesshall produced resolve acknowledgement work reported paper received funding european union horizon research innovation programme grant agreement projectsmartclide reference ampatzoglou bibi avgeriou erbeek chatzigeorgiou identifying cat egorizing mitigating threat validity software engineering secondary study inf softw technol tsintzira ampatzoglou ampatzoglou chatzigeorgiou avgeriou nancial aspect managing technical debt systematic literature review inf soft technol aroussi mellouk survey machine learningbased qoeqos correlation mod el international conference computing management telecommunication commantel nang vietnam arvanitou ampatzoglou chatzigeorgiou avgeriou introducing rip ple effect measure theoretical empirical validation international symposium empirical software engineering measurement esem ieee china october azeem palomba shi wang machine learning technique code smell detection systematic literature review metaanalysis inf softw technol codabux williams technical debt prioritization using predictive analytics international conference software engineering companion icse acm chatzigeorgiou ampatzoglou ampatzoglou amanatidis estimating breaking point technical debt international workshop managing technical debt mtd october ieee germany dyb dingsyr empirical study agile software development systematic review inf softw technol arcelli fontana mntyl zanoni marino comparing experimenting machine learning technique code smell detection empir softw eng httpsdoiorgs hamill gosevapopstojanova analyzing predicting effort associated nding xing software fault inf softw technol heckman williams systematic literature review actionable alert identication technique automated static code analysis inf softw technol herbold grabowski waack calculation optimisation threshold set software metric empir softw eng httpsdoiorgs idri hosni abran systematic literature review ensemble effort estimation syst softw isoiec system software engineeringsystems software quality requirement evaluation squaresystem software quality model geneva karanatsiou arvanitou misirlis wong bibliometric assessment software engineering scholar institution syst softw kaur mishra cognitive complexity quantier version version javabased source code change empirical probe inf softw technol kazman bass categorizing business goal software architecture cmusei kazman case study locating architectural root technical debt international conference software engineering may ieee florence kitchenham brereton budgen turner bailey linkman systematic literature review software engineering systematic literature review inf softw technol kitchenham peeger software quality elusive target ieee softw kruchten nord ozkaya technical debt metaphor theory practice ieee softw applying machine learning technical debt management avgeriou liang systematic mapping study technical debt management syst softw mair investigation machine learning based prediction system syst softw myrtveit stensrud reliability validity comparative study software prediction model ieee trans softw eng sharma spinellis survey software smell syst softw skourletopoulos mavromoustakis bahsoon masotrakis pallis predict ing quantifying technical debt cloud software engineering international workshop computeraided modeling design communication link network camad ieee computer society wen lin huang systematic literature review machine learning based software development effort estimation model inf softw technol zhang tsai jjp machine learning software engineering ieee international conference tool articial intelligence ictai november zhou leung empirical analysis objectoriented design metric predicting high low severity fault trans softw eng temporality introducing code technical debt georgios digkasb apostolos ampatzoglou alexander chatzigeorgiou paris avgeriou institute mathematics computer science university groningen groningen netherlands gdigkasrugnl pariscsrugnl department applied informatics university macedonia thessaloniki greece aampatzoglouachat uomedugr abstract code technical debt intentionally unintentionally created developer introduce ineciencies codebase attributed various reason heavy workload tight delivery schedule unawareness good practice etc shed light context lead technical debt accumulation paper inves tigate temporality code technical debt introduction new method whether introduction technical debt stable acrossthe lifespan project evolution present spike relation technical debt introduction development team workload given period answer question perform case study twentyseven apache project inspect number tech nical debt item introduced month sliding temporal window theresults study suggest overall number technical debt item introduced new code stable metric although present spike number commits performed notstrongly correlated number introduced technical debt item keywords technical debt temporality case study new code debt metric uctuation introduction technical debt code level refers ineciencies introduced source code application implementation maintenance phase ineciencies manifest violation coding stan dard complex hard understand code code duplicate etc according alves code studied type technical debt based ampatzoglou one important industry signicant work code evolves accu mulates time however existing study looked evolution whole without distinguishing technical debt added new code ccirclecopyrtspringer nature ed temporality introducing code technical debt technical debt added modied existing code paper focus introduction new code inserted system inthe form new technical debt item tdis specically study new method scope objectoriented system contain look introduction type new temporal phenomenon focusing introduced new code opposed introduced modifying existing code provide unique insight specically new tdis introduced new method commit either new methodsin existing class new method entirely new class reect accurately type problem timepoint introduced word new method representative developer practice andknowledge level compared method modications whose type timeliness often dictated need bug extend already existing functionality thus study temporality clearer source particular explore number introduced tdis uniformly spread across evolution whether time window tdisare inserted number tdis introduced along evolution related activity intensity commits developer dierent time win dows project could exhibit either stability introduction code tdisacross evolution experience uctuations isolated repeating spike introduced code tdis former case one could assume accumulation probably due factor constantly present entirelifetime project employee skill used methodology tool man agement practice etc latter case one could postulate insertion new code tdis highly temporal phenomenon depending volatile factorssuch feature request changing schedule pressure bug etc achieve goal explore evolution twentyseven project apache software foundation asf track number new tdisinserted commit next create month sliding window calculate cumulative number inserted tdis window well number commits time period answer question metric property termed smfsee sect able ass metric uctuation along time characterize either stable sensitive toanswer second question correlate number commits window number inserted tdis reporting interpretation result performed project level rest paper organized follows sect present related work sect background information important understanding study sect present design case study sect elaborates result section interprets result provides implication researcher practitioner finally sect present threat validity sect conclude paper digkas related work many study explored evolution code quality reason degradation since paper focus introduction time organize subsection cause introduction evolution cause technical debt introduction tufano studied evolution code smell goal understanding code smell introduced observed life cycle code smell result indicate majority case code smell introduced creation corresponding class le project evolve smelly codeartifacts tend become problematic new code smell introduced software engineer implement new feature extend func tionality existing one developer introduce new code smellsare one work pressure necessarily newcomer majority smell removed project evolution removed direct consequence refactoring operation according kazman conducted case study root architecture debt architectural technical debt atd extremely common probably important type consumes largestpercentage maintenance eort ndings suggest architectural debt extremely easy introduce programmer typically want introduce new feature bug however changing code often undermine architectural structure leading accumulation atd martini conducted case study software company stand cause introduce atd large software company try deliver fast possible order satisfy customer need usually taking short cut thereby introducing atd debt paido start accumulateand make feature development dicult evolution technical debt although multifaceted concept one key constituent code presence code smell one study investigate evolution code smell conducted olbrich investigated evolution two code smell god class shotgunsurgery two os project result show along software development phase number code smell either increase decrease phase aected size system chatzigeorgiou andmanakos investigated evolution long method feature envy state checking god class smell two opensource software project result suggested project evolve number smell tends increaseanother interesting nding signicant percentage smell due software ageing since smell present right version code reside peter zaidman studied lifespan god class feature envy data class message chain class long parameter list smell analysis eight opensource software project conrmed number smell increase project evolveon temporality introducing code technical debt digkas tracked evolution sixtysix opensource java project asf period year order detect issue incurtd relied sonarqube result show one hand signicant increasing trend size complexity number tdis total time seems conrm software aging phenomenonbut hand normalized noncommented line code evident decreasing trend time present many project could possibly attributed developer perform refactoringactivities open tdis developer introduce better quality code commit compared project existing code base despite fact code introduction widely explored lack evidence way introduced whether stable increase large uctuations exist uctuations coincide withlargescale change codebase background information section present information necessary understanding paper identifying new item along evolution analyze software system measure throughout evolution used sonarqube lts relies set rule checked static source code analysis every time piece code break one thosecoding design rule technical debt issue raised estimate eort minute required eliminate identied tdis eort obtained assigning time estimate xing type problem multiplying thenumber tdis type estimate considering software system evolve number revision revision several type change may occur simultaneously welook three major type code change introduction new code deletion modication existing code paper work method level aggregate tdis reported individual line method belong reason decision monitoring change instruction level would complex lessaccurate considering several type change simultaneously occur statement modication introduction new code furthermore tracking change instruction level challenging one would mapeach instruction particular revision corresponding instruction previous revision process complicated insertion new statement comment blank line etc therefore certain classication ofchanges monitor change method level revision class added deleted modied renamed remain unchanged applies method explained digkas focus introduced tdis newly inserted method new method added either existing class upon creation new classto distinguish newly inserted method commit deleted modied renamed unchanged one rely gumtree spoon ast tool revision detect change occurred corresponding commit lelevel identify added modied renamed deleted le exclude deleted le exist anymore examined commit added lesclasses considerall method new code word consider newly inserted method new class modied renamed le compare ast ast previous revision using gumtree spoon tool bythis comparison identify newly inserted method existing class identifying method inserted project commit study span startingending line identify tdis step analyze project using retrieve tdis via sqs api keep one mappedto newly inserted method performed matching line tdi reported method containing line fluctuation software metric software metric fluctuation smf property metric dened degree metric score change one version system theother using smf metric characterized sensitive change induce high variation metric score stable change induce low varia tion capture smf property metric property take account order measurement metric time series main characteristic uctuation property hold sense quantify extent score change two subsequent time point yield value intuitively interpreted especially border case therefore score change uctuation evalu ated zero change pattern result nonzero uctuation value finally highest value obtained time series constantly change uctuate two end range every pair successive version software ass smf paper measure proposed arvanitou namely measure dened average deviation zero dierence ratio every pair successive version shown mfradicaltpradicalvertexradicalvertexradicalbt summationtextn iparenleftbig score iscore score iparenrightbig study introduced smf author also explored various alternative coecient variance autocorrelationoflagone however able capture aforementioned property smfon temporality introducing code technical debt case study design section present design case study based linearanalytic structure described runeson research question already mentioned introduction section ask two research question rqdoes number introduced technical debt item new code uctuate along evolution answer research question unveil dierent time period dierent amount introduced answer reects main goal thisstudy investigate temporality phenomenon specically answer enable characterize tdis introduction either stable sensitive temporal inuence addition study possible spike inthe evolution new code might indicator extraordinary event along evolution frequency timing early middle late project spike also explored reported amount introduced technical debt item new code correlate activity developer increase condence result previous research question study potentially important confounding factor empirical setup developer activity considering analyzing individualcommit level period time nonnegligible chance period developer activity number commits stable therefore spike new code tdis could due intense programmingactivity corresponding period case unit analysis study characterized multiple embedded case study case opensource software os project unit analysis source code commits per project dierent time period specicallyfor project analyse amount code tdis added month time period across project history see sect detail reason selecting perform study os system vast amount data isavailable term revision class long history available project enables researcher observe overall trend evolution quality retrieve data highquality project evolve periodof time looked asf project investigated project presented table selection project based following criterion software actively maintained ensure sorted project based date last commit digkas table selected project project class ncloc analyzed revisionsproject class ncloc analyzed revision atlas knox beam kylin calcite metron cayenne myfaces common nifi cxf oozie deltaspike openwebbeans drill pdfbox dubbo pulsar flink si flume storm giraph tinkerpop jackrabbit zeppelin jclouds software written java us maven build tool ensures project built allows retrieval project languageversion corresponding pomxml software contains class ensure inclusion system substantial size functionality complexity software commits included criterion similar reason previous criterion able observe trend evolution quality moreover number revision provides adequate set repeated measure input statistical analysis data collection build dataset analysis relied process described section particular project able build dataset containing commit sha commit timestamp numberof introduced tdis new code commit next starting commit timestamp created month timewindow slide monthly along evolution project based timewindows createdour unit analysis shown example considering project span across month able create unit analysis period captured timewindow summed number tdis introduced commits included timeframe therefore nal dataset consists three variable timewindow monthsyear number commits timewindow number tdis introduced new code timewindow replication package available online httpsdrivegooglecomdrivefoldersofzplxsiilmmwkhsviijnp temporality introducing code technical debt demarcating unit analysis sliding temporal window data analysis data analysis performed aforementioned raw dataset answer project ass uctuation calculating smf basic descriptive statistic dependent variable next visualize extreme project stable sensitive line chart representingthe evolution tdis introduced new code inspecting line chart highlight spike introduction tdis discus seemed concentrated beginning middle end project answer performed pearson correlation analysis extreme case visualize relation scatterplots present coevolution number commits number tdis single line chart result fluctuation analysis table observe result uctuation analysis number tdis introduced new code case study based value smf metric observe project number tdis introduced new code considered stable whereas therest project sensitive dark light grey cell shading column smf respectively provide visual insight discussed uctuations evolution one extremely stable project namely metron sensitive one namely si note even stable project spike still exist however spike small height visual analysis uctua tions project gures available online material revealed digkas table fluctuation per project project smf corr coefsig level spk project smf corr coefsig level spk atlas knox beam kylin calcite metron cayenne myfaces common nifi cxf oozie deltaspike jclouds drill pdfbox dubbo pulsar flink si flume storm giraph tinkerpop jackrabbit zeppelin openwebbeans spk spike uctuations distributed across entire project lifetime obser vation indication spike might irrelevant time period appeared questioning relation introduction project maturity nevertheless nding need investigation correlation analysis fluctuation activity investigate uctuation number tdis inserted new code due temporal phenomenon occurs given time period need exclude obvious confounding factor developer activity ametron stable si sensitive indicative project evolutionon temporality introducing code technical debt one tentative interpretation existence high spike presented would corresponding time window lot code committed explore existence confounding factor table highlight lightgray cell shading column corr coef case correlation strong time statistically signicant ndings suggest project correlation strong case commit activity could explain uctuations number tdis added new code visualize thisresult present scatter plot evolution variable single line chart fig dubbo project highest correlation fig pdfbox project lowest correlation scatter plot dot represents month period mapping value two variable seek correlation strong correlation dot expected concentrate around central diagonal scatter plot line chart coevolution correlation analysis dubbo uctuation related developer activity scatter plot line chart coevolution correlation analysis pdfbox uctuation related developer activity digkas discussion interpretation result highlevel goal study investigate introduction tdis adding new code temporal phenomenon diverges time based ndings temporality claimed number projectsin particular based uctuation tdis due introduction new code see sect classify project three category visual inspection evolution graph stable project without temporalityie negligible uctuations spike project stable project sensitive extraordinary spike occur spike project sensitive project many spike project number spike ofeach project reported table column spk note provide number spike stable project since sensitive project multiple one based ndings table claim introduction tdis due insertion new code majority project independent time interpreted indication project maturity sensethat consistent quality achieved throughout evolution however even project absence uctuations necessarily imply absence trend example see evolution project metron exhibit spike however trend clearly decreasing one hand subset analyzed project introduction newcode tdis temporal phenomenon since many spike exist evolution project number introduced tdis period stable reasonable assume inuenced external parametersthis observation render important study potential external factor drive accumulation tdis along evolution software project second research question explored led rather unex pected nding number commits made time period majority case correlated number introduced tdis system intuitively one would expect variable would related inthe sense code added tdis expected intro duced however might case several reason might strongly related maturity project developershabits specic type task performed time period therefore issue need investigation discussed sect implication researcher practitioner based result able provide implication researcher practitioner regarding researcher claim accumulation new code tdis reects least extent character istics development process stable case introductionon temporality introducing code technical debt new code probably le related external factor primarily depen dent capability team however nonnegligible number ofprojects timing seems important factor studying accumulation technical debt tdis seem uniformly introduced along evolution rather behave temporal phenomenon multiple caseslarge uctuations therefore propose researcher stable project investigate relation constant rate introduction new code tdis practice followed developer would also valuable compare stable project dierent trend increasing decreasing respect key property sensitive project perform explanatory study unveil reason spike occur evolution introduced stud y could identify possible reason change programming team change used library framework impact business goal leadteamsprojects rather stable accumulation perform worse certain circumstance based output researcher work accurate prevention methodology attack heart problem based particular condition project example project thatis expected undergo sta turnover face tight deadline calibrate quality gate ensure grow beyond threshold regarding practitioner suggest following implication encourage perform uctuation analysis investigate rea son existence high frequent peak evolution introduced tdis understanding consequence way working certain peri od might lead excessive accumulation prove benecialfor process improvement purpose quality control advise classify project category mentioned sect project sensitive observed trend steadily increasing one need perform root cause analysis regarding parameter aect accumulation new code may mitigated example moving certain developer dierent team orreprioritizing backlog include refactoring threat validity section discus threat validity study including threat construct external validity reliability study aim establishing causeandeect relation thus concerned internal validity construct validity reects far examined phenomenon connected intended objective main threat related accuracy captured static analysis tool rule violation reported digkas tdis one manifestation actual code design ineciencies fur thermore known tool capable identifying architecturalproblems type requirement test build debt addi tion consider mapped method thus ignoring change might occur level le however far perfectin identifying static analysis tool suer similar limitation another construct validity threat related number com mit surrogate workload carried projectparticipants since opensource project voluntary contribution interleaved rest developer activity acknowledge busy relaxed period term commits necessarily reect actualwork condition developer moreover commits dier amount work carry commits might accompanied many change several le related change research required derive actual workload developer committing os project reliability reects whether study conducted reported way others replicate reach result mitigate threat study protocol explicitly described listing data collection andanalysis step subjective data interpretation concern identica tion spike however secondary importance therefore large extent researcher bias avoided replication package see footnote available available data allow independent replication investigation external validity examines applicability ndings setting software project programming language possibly tool focused java apache project maven build tool limit ability generalize ndings project thefact study focus project asf highly active popular among software developer partially mitigates threat generalization nevertheless replication study eect new code evolution needed strengthen validity derived conclusion conclusion studying phenomenon introducing code tdis research direction important building tool aimed preventing accumulation inthis study focus code technical debt particular explore temporality introduction phenomenon end explore introduction tdis change dierent time period change canbe attribute developer activity corresponding period explore two question performed case study complete evolution twentyseven project asf result study suggested majority project evolution introduction stable many max imum high uctuations tdis introduction due new code however aon temporality introducing code technical debt nonnegligible part project approx present high frequent uctu ations result suggest introduction partially temporalphenomenon introduced time period addi tional exploration phenomenon led conclusion spike evolution introduction correlated spike developmentactivity suggesting number commits examined period main factor aecting existence excessive introduction acknowledgement work reported paper received funding euro pean union horizon research innovation programme grant agree ment project sdked grant agreement projectexapro reference avgeriou liang systematic mapping study technical debt management syst soft letouzey sqale method evaluating technical debt third international workshop managing technical debt mtd ieee alves niu alves valen requirement engineering software product line systematic literature review inf soft technol ampatzoglou perception technical debt embedded system domain industrial case study ieee international workshop onmanaging technical debt mtd ieee tufano code start smell bad whether smell away ieee trans softw eng kazman case study locating architectural root technical debt ieeeacm ieee international conference software engineering ieee martini bosch chaudron investigating architectural technical debt accumulation refactoring time multiplecase study inf softw technol olbrich cruzes basili zazworka evolution impact code smell case study two open source system internationalsymposium empirical software engineering measurement ieee chatzigeorgiou manakos investigating evolution code smell objectoriented system innov syst softw eng httpsdoi orgsz peter zaidman evaluating lifespan code smell using software repository mining european conference software maintenance reengineering ieee digkas lungu chatzigeorgiou avgeriou evolution technical debt apache ecosystem lope lemos ed ecsa lncs springer cham digkas falleri morandat blanc martinez monperrus finegrained accurate source code dierencing proceeding acmieee international conference automated software engineering acm arvanitou ampatzoglou chatzigeorgiou avgeriou software metric uctuation property assisting metric selection process inf softwtechnol runeson host rainer regnell case study research software engineering guideline example wiley hoboken field discovering statistic using ibm spss statistic sage publication ltd complexity retest reason refactorings buggy empirical perspective steve counsellb steve swift mahir arzoky giuseppe destefanis department computer science brunel university london stevecounsellbrunelacuk abstract short paper explore one simple yet unexplored question relationship refactoring bug complexity retesting code immediately refactoring reason refactorings buggy facilitate analysis set ofover four thousand refactorings mined three opensource system decomposed four test category van deursen moo nen preliminary result showed compared nonbuggy classesbuggy class subjected refactorings large retest commitment required extent retest may therefore signicant factor determining whether refactoring creates bug ournding support bavota better testing certain refactoring practice could reduce harm refactor ings cause introduction since seminal text refactoring published opdyke fowler refactoring subject hundred empiri cal study become vital tool daily work developer refactoring dened process changing software system way alter external behavior code yet improves inter nal structure despite multitude prior study still range unanswered research question one link refactoring bug refactoring cause bug type refac torings cause bug often every refactoring requires developer toretest aected code ensure program behaviour preserved equally relevant research question ask whether extent retest required postrefactoring inuences level bug system ass thelevel posttest necessary taxonomy developed van deursen moonen taxonomy categorizes refactorings according dicult unit posttest thus indicates level eort requiredto ensure refactoring successfully applied result analysis showed tendency buggy class higher number refac torings extensive retest compared nonbuggy class implies ccirclecopyrtspringer nature ed counsell complex lengthy refactorings take every step ensure program behaviour preserved remainder paperis organized follows sect describe information system studied taxonomiesdata present result analysis three system sect discussing result sect finally conclude point work sect preliminary taxonomy van deursen moonen ass extent unit postrefactoring testing required every refactor ing taxonomy developed van deursen moonen purpose taxonomy allocate fowler refactorings category depending complexity extent posttest requiredafter refactoring taken place taxonomy motivated follows one danger refactoring programmer unintentionally change system behavior ideally veried happenby checking test pas refactoring practice however refactorings invalidate test method moved another class test still expects original class short category represent increasingly complex postrefactoring test eort commitment part developer taxonomy reects fact refactor ings restructure code way unit test pas therefactoring test modied four category identied follows compatible refactorings change original interface compatible refactoring category existing test check refac toring one example extract method refactoring take section code method form new method method withthat code however since refactoring creates least one new method need add test document verify new method actually preserved behaviour backwards compatible refactorings change original interface inherently backwards compatible since extend interface case set refactorings according test keep running via original interface pas refactoring preserve tested behav ior depending refactoring might need add test covering extension one example refactoring type consolidate condi tional expression rearranges conditional statement simpler le complex format condition statement change itmight possible test changed code make backwards compatible applies refactorings change original interface made backwards compatible adapting old interface example move method refactoring physicallyis complexity retest reason refactorings buggy move method one class another class made backwards compatible adding wrapper method retain old interface incompatible applies refactorings change original interface backwards compatible may example change type class involved make dicult wrap changesthe refactoring destroys original interface test rely old interface need adjusted theory compatible refactorings require le post refactoring test eort backwards compatible category turn require le eort thanrefactoring make backwards compatible category etc line adopt stance compatible refactorings straightforward retest incompatible refactorings complex essentially themessage convey work system analysed analysis paper facilitated earlier work bavota analysis describe refactorings likely induce bug others using set fowler refactoring activity thevehicle result indicated kind refactorings likely harmful others tended induce bug frequently harmful study used refactoring bug data extracted three opensource system made data available data paper explore refactorings purely retest perspective system studied xerces apacheant argouml xerces java xml parserapacheant build tool library primarily designed java application argouml uml modelling tool table show summary statistic three system including period time system studiedthe release analysed number release nally number class summary statistic table reproduced paper bavota table three system studied summary data system period analyzed rel class xerces nov nov apacheant jan dec argouml oct dec httpantapacheorg httpargoumltigrisorg httpxercesapacheorgxerce counsell decomposition table show number refactorings across system number refactorings vms category comp comp denotes compatible bcomp denotes backwards compatible incomp represents incompat ible refactorings collected original study bavota reffinder tool exactly set refactorings xerces system example refactorings total total compatible backwards compatible make backwards compatible incompatible table category across three system system comp backwards comp make bcomp incomp total xer apac argo total table also see compatible category form largest number argouml highest number overall refactorings across four category signicant number make backwards compatible refactorings also seen incompatible refactorings rela tively small number number tablethereby give mixed picture term developer propensity choose refac torings le complex required postrefactoring test seems likely undertake complex refactorings long retest requirement asthey simpler one number incompatible refactorings comparable number backwards compatible refactoring even though former represents lengthiest post refactoring test required based evidencefrom table appears developer necessarily choose refactorings low postrefactoring test burden according taxonomy data analysis buggy class analysis looked type refactorings system class least one bug recorded due refactoring category refactorings table list name refactorings three system abbreviated xer apa arg number refactorings total category refactoring inthe xerces system add parameter refactorings made classesis complexity retest reason refactorings buggy least one bug across three system add parameter refactorings total add parameter fall make backwards compatiblecategory refactoring note space paper excess type refactoring left refactoring across three system le ten refactorings type doinclude reported analysis however also abbreviated refactorings table space purpose full order table consolidate conditional expression consolidate duplicate conditionalfragments introduce explaining variable remove assignment parameter replace method method object replace nested conditional guard clause replace magic number symbolic constant table category buggy class refactoring xer apa arg total category add parameter make bcomp con cond expression backwards comp con dup cond frag comp extract method backwards comp inline method incomp intr explaining variable comp intr null object comp inline method comp move eld incomp move method make bcomp remove as parameter comp remove control comp remove parameter make bcomp rename method make bcomp rep meth meth comp rep nest cond comp rep mag sym comp term total including refactorings left table compatible category refactorings backwards compatible category including refactorings left table refactorings category make backwards compatiblecategory including refactorings table refactorings category finally incompatible category including table refactorings overall mean refactorings least one bug drawn compatible counsell backwards compatible category notable data however refactorings class least one bug makebackwards compatible incompatible category requiring posttest eort nonbuggy class table show corresponding data class bug recorded xerces system refactorings applied class recorded bug compatible category similarly refactorings incompatible category applied class yet recorded bug also show total category percent total reect ofthe total number refactorings comparison also include percent buggy refactorings table example compatible refactorings across three system represents total forthe buggy total table reftbl corresponding percent table category nonbuggy class system comp backwards comp make bcomp incomp xerces apacheant argouml total nonbuggy buggy notable feature table contrast number make backwards compatible incompatible refactorings compared set data table set nonbuggy class totalling refactorings see compatible category accounted theback compatible category accounted make backwards compatible category incompatible category total therefore drawn compatible backwards compatible category make backwards compatible incompatible category data percentage similar across buggy nonbuggy class three four category relatively larger number incompatible refactorings buggy class compared nonbuggy class corresponding value nonbuggy almost half posit thatthe cause bug buggy class due directly extra number incompatible buggy refactorings particular single move eld refactoring argouml system individual instance refactoring name suggests refactoring applied method isi complexity retest reason refactorings buggy used another class class solution move method class used move method refactoringwhose key purpose reduce coupling feature system widely acknowledged excess contributing code buggyness move method may well solve one problem may cause others due tothe retest required bug potential result carried chisquare test determine statistical signicance buggy ness inuence dierent category used contingency table buggy nonbuggy representing two row table four column representing category refactoring total contin gency table therefore amalgamation result found table representing buggy nonbuggy set refactorings number refac torings respectively chisquare analysis gave pvalue degree freedom value le therefore fail accept null hypothesis independence buggyness refactoring category buggyness class isdependent category refactoring discussion short paper precludes full treatment literature area however analysis heavily informed work bavota explored buggyness fowler set refactorings conclusion accurate code inspection testing activity needed place preventrefactorings causing harm code seeding bug analysis shown rule applies may extent postrefactoring test may contributory factor bug would qualify saying youundertake refactorings incompatible category according extra care attention invested testing process make sure done properly refactoring literature trend trait refactoringsand closely linked topic code smell welldocumented however issue damage postrefactoring still largely undocumented paper take step research direction also need consider threat validity study firstly examined three system small sample guarantee study system result would foundsecondly taxonomy studied paper theoretical unlike study bavota empiricallybased could criticised since untried taxonomy eld thirdly studied opensource code industrial code may show altogether dierent feature fourthly message work conveyed refactorings withhigh posttest may cause bugrelated problem may multiple factor consider development process example experience developer age system refactoring strategy adopted bythe organization finally sure proportion automated refactorings used study visavis carried manually assume counsell manual approach refactoring however empirical evidence suggesting high proportion developer prefer manual refactoring anyway conclusion future work paper explored single research question related refactoring question asked whether harm refactoring related amount retest necessary applying refactoring taxonomy van deursen moonen used support analysis placed everyrefactoring one four category ascending diculty testing pre liminary result showed compared nonbuggy class buggy class subjected refactorings large retest commitment wasrequired implies refactorings causing bug may simply test load human error may arise larger complex refactorings room human error smaller le complexones future work focus experiment industrial developer see refactorings low post requirement experimentally likely induce bug take form replication bavotas study finallyit would interesting extend study opensource system multiple application domain reference basili briand melo validation objectoriented design metric quality indicator ieee trans soft eng bavota carluccio lucia penta oliveto strollo refactoring induce bug empirical study ieee conferenceon source code analysis manipulation scam italy briand devanbu melo investigation coupling measure international conference software engineering field discovering statistic using ibm spss statistic edn sage publica tions ltd thousand oak fowler refactoring improving design existing code addisonwesley longman publishing inc boston kim gee loh rachatasumrit refnder refactoring reconstruc tion tool based logic query template january negara chen vakilian johnson dig comparative study manual automated refactorings castagna ecoop lncsvol springer heidelberg opdyke refactoring program restructuring aid designing objectoriented application framework phd thesis univ illinois van deursen moonen video store revisited thought refactoring testing proceeding sardinia italy human articial intelligence software evolutionsuggesting descriptive method name exploratory study two machine learning approach oleksandr zaitsevb stephane ducasse alexandre bergel mathieu eveillard inria univ lille cnrs centrale lille umr cristal lille france oleksandrzaitsevstephaneducasse inriafr arolla paris france mathieueveillardarollafr isclab department computer science dcc university chile santiago chile abergeldccuchilecl abstract programming form communication per son writing code one reading nevertheless often developer neglect readability even wellwritten code becomes lessunderstandable software evolves together growing complex ity software system creates increasing need automated tool improving readability source code work focuson method name study descriptive name automatically generated method body experiment two approach eld text summarization one based tfidf deep recurrent neural network collect dataset method real world project evaluate approach comparingthe generated name actual one report result using pre cision recall metric tfidf get result good precision recall deep neural network precision recall keywords software evolution machine learning method name introduction approach programming signicantly changed past decade instruction written programmer solely meant computer exe cute source code must read human many critical situation bug xing maintenance developer spend time reading source code according kent beck robert martin ratio time spent reading versus writing well making source code easier read decrease cost software development maintenance practice ccirclecopyrtspringer nature ed zaitsev readability source code often overlooked despite understanding impor tance clean code developer choose poor name entity create longfunctions god class well known code smell fail write documentation comment even good development ethic ensure sys tem remains clean comprehensive time software evolves code get refactored modied often change purpose variable function class well relation good identier name degrade time bad one become even misleading improving andupdating identier name one key aspect maintaining evolving software system complicated task requires profound understand ing entire system time context large software systemsthat continue growing size complexity understanding virtu ally impossible without assistance automated tool need tool support developer maintaining consistency understandability codebase paper focus quality method name study descriptive name generated method body approachthis problem problem text summarization explore two approach one based tfidf one using deep recurrent neural net work method chosen one widely used extractive approach meaning generates summary extracting word text given second one state art abstractive approach meaning produce word present original text case summary generate method name original text method body collected dataset method real world project cleaned tokenized code andused train two model suggest descriptive name method evaluate approach comparing method name proposed model actual name method actual name given theprogrammers considered ground truth training model method evaluating suggestion method achieved precision recall tfidf model precision recall deep learning model contribution paper argue programming language syntax convention inuencethe preprocessing source code name propose methodology pharo programming language give compare result two text summarization approach one abstractive one extractive rest paper structured follow sect present two machine learning model considered sect describe col lection tokenization ltering source code method name insectwe present experiment setup used test two approach present discus result sect close paper discussion related work sect conclusion suggesting descriptive method name two approach text summarization source code written programmer statistical property similar natural language english chinese fact code even repetitiveand predictable natural language mean natural language processing approach applicable context method name seen summary method body way title isa summary article therefore problem generating method name seen problem summarizing source code method body couple english word extract identiers method body split word either camelcase underscore way method body becomes document want summarizethis preparation step described sect text summarization divided extractive approach abstractive one selected one approach experiment extractive done tfidf combined ngramlanguage model abstractive done attention based sequence sequence neural network extractive model tfidf ngrams approach based two step extract important word tfidf order ngram language model tfidf stand term frequencyinverse document frequency measure word importance work determining relative frequency word specic doc ument compared inverse proportion word entire corpus document intuitively mean high tfidf score assigned word frequent given document rare one allows one representative word keywords docu ment therefore used summarize given document tfidf scoreis low word frequently occur languagesuch etc englishand high word frequent given document word score also used decide many word thesummary naive solution threshold score word make summary however get human readable summary document keywords also need ordered natural way ngram language model probabilistic model learns probability distribution ngrams sequence word used computethe joint probability given sequence word summarization sim ple solution consists generating possible permutation keywords extracted tfidf likely one tfidf used ininformation retrieval trained applied data pre viously unseen data summarizing new document must slightly adapted idf computed initial dataset called training dataset thisallows compute measure surpriseness word within domain training dataset computed possibly new document summarized raise problem new document contains word zaitsev never appearing training dataset case idf would division simple solution remove new word avoid similar problemwith ngram model word appear document summary removed appeared document summary could extracted tfidf ordered ngram model abstractive model sequence sequence neural networkencoded vector cat black encoded vector chatest chat estnoir decoderencoder noirs using sequence sequence recurrent neural network translate english sentence cat black french sentence chat est noir encoder take sequence english word input encodes xed sized vector number decoder take vector input produce sequence french word color gure online recently argued abstractive summarization could seen transla tion problem text summary automated text translation prolic research domain among numerous approach wanted one made little assumption possible problem solve chose neural network approach map input sequence document output sequence summary commonly used neural machine translation canalso applied summarization problem additional knowledge nature sequence list word made specif ically sequence sequence recurrent neural network gru cell attentionbased decoder fact neural network recur rentallows one input sequence length cell green yellow box actually network thatlinks gure show hypothetical unrolled network word processed one cell sequence sequence neural network aka encoder decoder neural network mean join two recurrent neuralsuggesting descriptive method name network learns encode input sequence xed sized vector see figure second learns decode vector outputsequence notice encoded vector actually hidden state cell end input sequence encoder output cell vertical arrow ignored thus represented figure decoderthe output plugged back input next step decoder gener ate output sequence word word including special end sequence word sin figure way decoder decides length output sequence fact recurrent neural network mean size input output sequence decorrelated important purpose summarization finally network tend givemore importance latest word possibly forget one issue average english sentence around word experiment average size method exceeds word common approach ght problem attention mechanism illustrated figure ensures position word inputsequence aect output take form additional layer decides independently attention give input word give two example process top translation english french bottom translation tokenized source code sentence tokenized method name applying learning model source code section give specicities pharo language inu ence applied model describe prepare methodsto train apply model described previous section method translates two sequence word word extracted splitting identiers method body form document model must summarize word extracted splitting method name used train model body summarization pharo language specicities stated introduction language syntax convention impact apply model pharo number specicities illustrate point variable statically typed model could learn information type variable available pharo pharoorg zaitsev pharo inplace argument method name unlike like language argument grouped parenthesis end function call pharoarguments inserted part method name way example java statement bobsendemail emma translates bob send email emma pharo consequence method name longer vocabulary larger must split right place introduce parameter longer name problem per part model training process learn right length namesplitting name correct place introduce parameter scope paper generate method name list word without colon inplace argument method name pharo contain many stop word onwithandto etc method name language like java python contain mostly noun verb adjective highly representative method purpose example print string stream addelement array method name pharo stop word sepa rate describe argument example print string stream add element array harder extractive model generate stop word necessarily appear source code mostlikely discarded generic explore issue stop word sect programming convention dictate method short pharo experiment median length three line code mean around six mean document short word may inuence model meta information method specied calling certain method body given method example abstract method method call self subclassresponsibility obviously aects model body abstract method relation name data preparation extracting word source code extract word method body keep identiers method body split identiers alphabetic word convert word lowercase keeping identiers mean remove commentssymbols number string character note pharo truefalsea nilare reserved word variable containing predened object keep identiers local variable declaration see block argument see also ignored type associated normally appear elsewhere source code bring little information splitting identiers may end upwith number part identier discarded alphabetical word also ignore underscore andor colon weresuggesting descriptive method name part identiers example following hypothetical method body computes length string computes length astring self char result document self perfect example issue short method raise impossible abstract correct name method sequence word extract fortunately many method informative method name decomposed way examplethe name printon delimiter last becomes print delimiter last data preparation filtering dataset furthermore apply model method need discarded method name word could extracted overloaded operator strangely named method would produce word tokenization step described sect method empty body preparation similarly short meth od example returning constant empty hook would empty body preparation fully duplicated method name implementation reduced one instance bias model note duplicated method name dierent body tostring java kept long method word body rejected practical reason training model method becomes long prac tical problem come attention mechanism see sect requires know maximum input length becomes slow even shorter method getters setter easy generate ides actually yet probabilistic model could fail therefore seems better leave scope method name generation model test method name also easily generated done completely dierent source information usually name method class tested body test method naming also follows dierent convention would require specic model learn said abstract method pharo implemented call subclassresponsibility make sense remove training set impossible learn anything body would introduce noise model go method consisting actual meaning code important double quote delimit com ments pipe delimit local variable declaration square bracket delimit lambda func tions caret return zaitsev sole call shouldnotimplement call allows remove unwanted inherited method method whose body would consist word superselftruefalse nilare also ltered body add noise akin empty body finetuning model training probabilistic model involves hyperparameter tuning done training large subset dataset validating disjoint smaller subset tuning parameter one try achieve best possible result assuming dataset used large representativeenough need done given programming language training set used whole dataset validating used another remaining required study comparison ofthe two model discussed next section extractive model tfidf unlike abstractive one automatically decide many word generate therefore used following heuristic keeponly word tfidf score certain threshold lower upper boundary number word kept word pas threshold keep one highest tfidf score manywords pas threshold keep highest tfidf score tfidf threshold xed one gave best score see sect validation dataset value pharo upper bound value setto word ngram model would take much time meaningful order word abstractive model sequence sequence neural network one need tune parameter size ofthe hidden state vector learning rate teacher forcing ratio parameter selected give highest score validation dataset quality measure discussed sect pharo recommend set hidden state vector learning rate teacher forcing ratio experiment setup compare two model set experiment real world pharo project shued split data three nonintersecting subset therst two already presented previous section training set validation set comparing model also need third independent settest set used evaluate nal trained model data notseen training training parameter tunning biased towards test probability training word generated model substituted word real name used make training smoothersuggesting descriptive method name quality metric given method name considered good one developer bad another study adopt simplied approach automatic evaluation assumes method dataset well named therefore used ground truth evaluate model actual name calledreference name one generated model candidate name report four dierent metric similarity candidate reference name exact match average precision average recall average score exact match score simplest strictest metric percentage candidate name match exactly reference name metric take account order word exact match score easy interpretbut restrictive candidate name similar reference match exactly receive score completely dierent used precision recall derived metric three metric considerevery name set word precision count percentage word candidate name also appear reference name recall count percentage word reference name also appear candidate name score harmonic mean precision recall compute three metric method report average value random baseline vocabulary fact source code highly repetitive get good result selecting word randomly therefore also compare model random model baselinethe random extractive model generates name given method selecting random word source code random abstractive model selecting random word method name training set would make little sense would close chance nding right word dataset word set kequal average number word method name training set result section present discus result experiment evaluation experimented project selected pharo ecosystem list project information selected availablein technical report collected method kept ltering process described sect three datasets described sect method training set method validation set method test set table contains several example method name generated abstractive model harmonic mean intuitive arithmetic mean computing mean ratio zaitsev table example method name generated abstractive model column contains source code method used input secondcolumn contains real method name unknown model third column contains generated name source code real name generated name self assert self newnode iscomment testiscomment testiscomment acolor red acolor green acolor blue color color avisitor visitdraggableinteraction self args acceptwith accept apackage ispackage iffalse self self addelement apackage self package addpackage addpackage evaluation result present result experiment table could expected random model give bad result exact match result precision recall score bad caused small vocabulary table evaluation result calculated test set three model random model selects three random word source code extractive model based tfidf ngram model abstractive model based sequence sequence deep neural network model exact match precision recall score random extractive abstractive extractive model show improvement result exact match precision recall score extractive model propose new word appear method body thisshould reect low recall case many method pharo call another one similar name add default parameter example could explanation study needed better understandthis issue abstractive model best result exact match precision recall score high exact match surprising may good human would achieve additionallyin plot intermediary result abstractive model one data point every iteration score evaluated validation set test set used netune parameter modelfor comparison also draw performance extractive model dashed line evaluated validation set score extractive abstractive model almost however extractive model performs worse basedon exact match score try explain presence many stop word name pharo method see sect one might argue language like java usually exhibit suchstop word method name could better score validate hypothesis identied generic word onwithand etc thatsuggesting descriptive method name iterationscoremetrics exact match precision recall model abstractiveextractive training abstractive model measurement taken every iteration dashed line score achieved extractive model considered stop word english removed every occurrence word method name training validation test set rerunthe experiment evaluated three model new data observe eect stop word generation method name hypothesis exact match extractive model aected removingthe stop word remained abstractive model exact match score increased giving exactly matched method name change precision recall score random extractive abstractive model inconclusive seem purely mechanical related work following work gabel performed study uniqueness code found source code highly repetitive hindle etal explored predictability code claimed source code even repetitive predictable natural language claimed predictability allows model code statistical language modelsproposed notion software naturalness pioneered application natural language processing nlp source code deep learning proved eective modelling source codein recent year deep learning modelsfor source code found many application code completion bavi used autoencoder network together recurrent neural network complete list stop word used study found http gistgithubcomolekscodefaabfcaf zaitsev reverse minication javascript generate name local variable allamanis introduced neural probabilistic language model source code used suggest method name model required large set hardcoded feature feature containing class method signature later study allamanis proposed endto end meaning require manual feature selection convolutional neural network attention method name generation alon also attempted predict method name form body representing sourcecode collection path abstract syntax tree aggregating path single xedlength code vector iyer network attention generate sentence describe code snippet andsql query model trained translate title question posted stackoverow code snippet accepted answer conclusion work explored compared two machine learning model textsummarization applied problem generating descriptive method name method body thus improving readability source codethe model based tfidf ngram language model performs extractive text summarization selecting important word source code method putting meaningful order second modelis attentionbased sequence sequence neural network performs abstractive summarizationit generate method name word never appeared source code applying evaluating model thedataset method collected reallife project written pharo reported average precision score extractive abstractive model well average recall extractive abstractivemodel method name generated abstractive model method independent test set exactly real name given method developer threat validity method name generated abstractive app roach good name model trained project included dataset handpicked expert one follow good coding practice however manually validate eachone method name training set threat validity similar threat validity evaluation considered real method name dataset ground truth used evaluatethe generated name approach based assumption original name good followup study plan perform manual qualitative evaluation generated name future work evaluation technique could enhanced supporting four automatic metric exact match precision recall score withsuggesting descriptive method name human evaluation performed small subset method example model generates name method whose real name printonwill awarded precision recall alternatively real method name sumofintegers reasonably good name addallinte gernumbers scored metric case would easilyspotted human evaluator experiment tried programming language saw pharo method typically small line code limit vocabulary available approachesthis good adverse consequence result work removed code comment string literal study focused generating method name summarizing source code however discussedin sect many method short contain enough valuable information source code generate meaningful method name good extension study would utilize natural language method descrip tions provided code comment mentioned sect dis cussed motivation automatic suggestion method name usedto improve readability source code eventually would improve bug xing feature request incorporation time plan target problem controlled experiment longitudinal case study followupjournal paper another interesting followup study would cross project cross domain training paper trained project domain mixed seems reasonable assume dierent project would different naming convention vocabulary could impact result acknowledgement work based master thesis oleksandr zaitsev defended ukrainian catholic university oleksandr would like thank university chile inria lille pharo association arolla nancial support alexandre bergel thanks nancial sponsor lam research project fonde cyt regular reference allamanis barr bird sutton suggesting accurate method class name proceeding joint meeting foundation ofsoftware engineering acm allamanis barr devanbu sutton survey machine learning big code naturalness acm comput surv csur allamanis peng sutton convolutional attention network extreme summarization source code international conference machine learning alon zilberstein levy yahav codevec learning distributed rep resentations code arxiv preprint arxiv bavishi pradel sen contextname deep learningbased approach infer natural variable name usage context arxiv preprint arxiv beck test driven development example addisonwesley longman zaitsev cho van merri enboer bahdanau bengio proper tie neural machine translation encoderdecoder approach arxiv preprint arxiv demeyer ducasse nierstrasz objectoriented reengineering pattern morgan kaufmann burlington fowler beck brant opdyke robert refactoring improving design existing code addison wesley boston gabel study uniqueness source code proceeding eighteenth acm sigsoft international symposium foundation software engineering acm hindle barr gabel devanbu naturalness software commun acm hindle barr gabel devanbu naturalness software international conference software engineering icse ieee hochreiter schmidhuber long shortterm memory neural comput iyer konstas cheung zettlemoyer summarizing source code using neural attention model proceeding annual meeting associa tion computational linguistics volume long paper knuth literate programming comput koenig pattern antipatterns objectoriented program lehman belady program evolution process software change lon academic press london ftpftpumhacbepubftp infofs programevolutionpdf martin clean code handbook agile software craftsmanship pearson education london ramos using tfidf determine word relevance document query proceeding first instructional conference machine learning raychev vechev yahav code completion statistical language model acm sigplan notice acm rush harvard chopra weston neural attention model sen tence summarization proceeding conference empirical method natural language processing aclweb sasaki truth fmeasure teach tutor mater sutskever vinyals sequence sequence learning neural network advance neural information processing system white vendome linaresv asquez poshyvanyk toward deep learn ing software repository proceeding working conference min ing software repository ieee press zaitsev aspect software naturalness generation identier name master thesis ukrainian catholic university faculty applied sciencesdepartment computer science lviv ukraine january httperucu eduuahandle sup ephane ducasse alexandre bergel zaitsev ducasse anquetil characterizing pharo code technical report technical report inria lille nord europe laboratoire cristal univer site lille arolla january httpshalinriafrhalchallenges layout validation lesson learned santiago bragagnolob beno verhaeghe abderrahmane seriai mustapha derras anne etien bergerlevrault montpellier france santiagobragagnolobenoitverhaeghe abderrahmaneseriaimustaphaderras bergerlevraultcom universit lille cnrs inria centrale lille umr cristal lille france santiagobragagnolobenoitverhaegheanneetien inriafr abstract company migrating software system migra tion process contemplates many step migration one validate migration existing approach rely visual struc ture dom comparison however previous work experimented validation reported sucient ensure result equivalent even identical visual structure interfaceto migrated indeed two similar dom may rendered completely dierently decide focus layout migration validation propose visual comparison approach migrated layout validation experiment industrial case hence experiment already existing study image comparison eld highlight challenge layout comparison challenge propose possible solution detail three main feature need create good layout validation approach keywords gui migration challenge comparison validation introduction fast evolution programming language framework company tend update software evolution may imply themigration application gui ensure proper software operation update one need validate ensure correct migration gui whereas manual validation always possible tedious errorpronetimeconsuming expensive company look automatic validation approach approach base validation dom comparison discute validation rendered visual aspect application mostly neglected although essential enduser application thus document object model ccirclecopyrtspringer nature ed bragagnolo acceptance new software since software may also accepted rejected look feel consider validation extremelyimportant success migration migration process one two dierent objective relation migration process rather visually constant rlayout con stant case migration process visually constant aim produce migrated version identical layout widget look feel widget hand migration process islayout constant aim produce enriched migrated version layout possibly visually dierent widget case validation migrated layout step validation inspired research eld propose approach com pare layout migrated application original layout exper imented approach real industrial migration project experience report list challenge layout validation provide solution section discus need validation general particularly layout validation sect present dierent existing approach tackle problematics sect explain position solution draft validation process sect give place core article report challenge sect describe problematics found development method identify thefeatures help solve challenge sect conclusion present middle term goal work sect validation work take place collaboration bergerlevrault major com pany selling web application developed gwt unfortunately gwt longer maintained last update made consequence bergerlevrault decided migrate application angular migra tion crucial since bergerlevrault application gwt eachincluding web page preceding work proposed approach migrate frontend application implemented approach migrate gwt applicationsof bergerlevrault angular migration performed need validate application correctly migrated migration validation part process validation done result going used enhancing migration xing error new migration validated triggering new process migration loop recurs process migration isnished context manual validation iteration migration process expensive term money time hence propose rely automatic validation httpswwwbergerlevraultcom challenge layout validation lesson learned section present main migration validation approach tried literature detail sucient sect detail layout validation sect current migration validation approach experimentation validation started trying com mon mean proposed literature dened metric verify success migration process checked widget attribute detected tool widget attribute must iden tied reachable mean entity type must discovered migratedand present target application widget also belong right container attribute created right value gwt originalb angular migration migration page without considering layout experimented validation case bergerlevrault despite reported good result according proposed metric origin generated uis completely dierent figure present migration one web page bergerlevrault application lefthand side show original page righthand side page migration traditional dom proposes tree containing structure element composed element dening strong relation con tainment scoping like dene document header body footer part hold internal division section well aswidgets component recursively contained comparing dom expecting direct implication page rendering solution two page original migrated one may equivalent dom thus plainlysatisfy proposed metric however migrated original version much common human eye comparing dom might good starting point compare page nowadays certainly sucient modern application layout style managed orthogonally dom composition thus approach suitable validating modern application bragagnolo propose add another dimension validation migration layout layout validation merriamwebster dictionaryal plan design arrange ment something laid denition consider layout position element one others two main kind compo nents contain component dening group component contained component containing others eld set card panel etc responsible dening main disposition thecontained element page reason call element struc tural layout element page page structural layout element layout example present relationship layout figure show page interpreted browser highlighted structural layout element showed content highlighting structural layout element thus revealing layout empty layout box belong add silenced usage adblocking plugins pointed previously sect migration may required visually constant layout constant validate migrated complies expectation must take account least layout httpswwwmerriamwebstercomdictionarylayout challenge layout validation lesson learned state art compare rendered performing migration several solution considered regarding approach existing literature first insect expose existing validation approach used compare visual aspect two software system second sect present approach research eld related image comparison thinkwe domain application comparison moran compared android application proposed approach detect gui change evolving mobile application egbetween two version application approach two main concern mapping screen application version iewhich previous screen corresponds actual screen detecting gui change change detection rely pixel pixel comparison screenshots previous current application sanchez ram proposed approach infer hierarchical layout hardcoded widget position retrieve layout usethe closeness metric two widget metric allows compute visual proximity two element grouping widget together create new layout denition cao migrated web archive html html validate migration proposed segment original migrated page block using dom took screenshots original migratedapplications block computed dierences two page sanoja gan carski proposed segmentation method web page analysis method consists dividing web page block retrievethe block cs html provide position widget web page background space separate two block example space two element considered block alpuente romero proposed comparison based dom analysis since observation two dierent dom may render proposed infer visual structure ietree web application dom classied html tag four category group row col text translated html dom using theirterminology compressed new tree compression corresponds simplication new tree example grouping two group together considered two dierent page visual tree visuallysimilar author proposed dierent way represents layout infer compare approach rely dom information dom comparison others rely screenshot comparison except comparison approach block way simplify comparison problem focus layout aspect block created dom information bragagnolo image comparison another strategy compare image take inspiration work image retrieval eld focused determining image similar orcontains another one van beusekom proposed approach retrieve image based layout extracted image layout structural layout element represented block compute distance two image author compute distance layout block improve result also match block animage block compared image finally image comparison approach used identify image similarity approach allows one compare two image imageis present used determine two image originally identical even distortion rotation determine part image present another one proposed approach might used compare two screenshots ever since approach designed retrieve image inside another dierent problem work must done verifyif result relevant context first sketch solution validate migration layout iethe identical positioning ele ments one others proposed implemented approach approach aim highlight structural layout element inspired denition block proposed sanoja gan carski cao van beusekom approach divided step first step detecting page validate step concern original target application step consists detecting page validate migration detection wemean able reach given page list known crawling full application opposite case reaching page rather trivial tradi tional web development approach precising related url howeverit becomes complex example modern single page application spa dierent component accessed using url applying specic ows user interaction egclick double hover etc output step list page source applica tion validate way access corresponding page migrated application well way access latter different technique crawling discovery suit case context httpsgithubcombadetitoupasino single page application web application website interacts web browser dynamically rewriting current web pagechallenges layout validation lesson learned bergerlevrault rely migration tool provides infor mation gathered process migration four next step iteratively repeated couple page one source application corresponding one migrated applicationwe describe next step couple source migrated page second step browsing original migrated page two page browsed using browser iefirefox chrome edge safari etc issue faced concerning spa application case bergerlevrault application case selenium navigate page simulating user interaction access page analyzethird step creating block browsed page must prepared malized comparison iethe size page must taking screenshots ease future image comparison step choose extract element compare since validating layout must emphasize structural layout element inner structurallayout element since validating look component button label text box etc must underemphasize silence content ignoring comparison detail concretely create block corresponding structural layout element context bergerlevrault apply new cs page cs convert eldset widget block transparency thus look blockscomposition fourth step taking screenshot approach relies visual validation consequently creating block take snapshot result avisual mean comparison get image structural layout element fifth step comparing compare pixel pixel screenshots source application one migrated application applied tool migration project bergerlevrault gwt angular figure show screenshots created approach using block lefthand side show original page screenshot corresponding screenshot applying creation block righthand side show equivalent screenshots migrated page although look visually equivalent dierences two distance block size block slightlydierent figure show dierence pixel pixel block screenshots red pixel represent position dierences source migrated page even though perceptual dierences betweenthe two image comparison block report exported image incorrectly migrated may look like small number context true indeed show pixel pixel comparison original page httpswwwseleniumdev bragagnolo gwt original page angular migrated page block gwt page block angular page apply approach gwt angular migration dibetween page color gure online block gwt page angular grey box dierence original full grey block full grey block size seen following strategy measure dierence two screenshots reported image bad exported strategy report full grey block layout better one created real migration completelyfalse thus conrms need smarter way validate layout migrationchallenges layout validation lesson learned dibetween original full grey block challenge layout validation experiment state art identied several challenge layout validation challenge considered future layout validation tool identied challenge structural layout element sect ajaxbased architecture sect successive shifting sect dynamic con tent sect interactive widget sect overlap sect structural layout element problem one major problem identify structural layout element page experiment considered eldsets structural layout element page however layout also exists page domdoes contain eldsets one challenge dene layout expressed solution identied two way solve problem one rely dom cs information source language need manually dene whatare structural element example cs class modern web application table nesting legacy system gwt solution extract structural layout analyzing screenshots ajaxbased architecture problem one requirement validate migration able browse couple source migrated page one think web application using url page reference however recent web application developed using ajax framework ajax allows developer modify page without properly navigating egchanging url case spa promoted recent framework angular react etc browse page tool simply get url content need perform action onthe bragagnolo solution browse page validation tool need know suite action perform way execute suite action beextracted using crawler however crawling spa application complex perform action propose already developed tool used gui testing selenium tool allow one program interactionwith successive shifting problem identied shifting one block rendered incorrect size position may cause shifting block moreover slight error repeated block example block larger onlya pixel may create important dierences screenshot impact slightly layout solution instead comparing image pixel pixel block position block position one compare position block relative visually near block thus validation approach report minimal dierences notcompletely dierent page comparison complex requires block identication ierecognizing block source migrated application dynamic content problem widget table display information coming external server received data changed component receive data widget space original migrated missing data impact layout denition termsof relationship impact pixel pixel comparison solution found two way solve problem one identify block original migrated compute relationship block relationship original migrated layout empty dynamic component applyingsome javascript routine thus consider data still default size component interactive widget problem widget interactive case expandable panel panel opened orclosed user state component impact layout change size block thus block block pixel pixel comparison validation tool report bad migration whereas example state default applicationschallenges layout validation lesson learned solution one solution collect state widget original appli cation set state widget migrated application beforetaking screenshot set state one tool selenium overlap problem user interface composed multiple structural layout element iepanel eldset card proposed approach like validate layout migration comparing layout composing block approach must consider layout element overlap layout element zindex dening widget rendered top one must extracted tovalidate correctly interface solution one solution handle overlap transparency dis playing block solves problem block inside another doesnot provide much information block top one one could dom structure cs extract missing information validation helping feature additionally identied challenge propose three important next fea tures validation approach would help solving challenge block identication sect traceability section comparing relationship element sect block identication currently approach based comparison pixel pixel two screen shot screenshots divided block block con sidered comparison however identifying block screenshot would enable one perform precise analysis example one countthe number block compare pixel source block rest migrated time feature ease traceability feature see next subsection allows one compute block relationship main concept layout traceability traceability ability identify block couple iewhich block source application corresponds one migrated application identied two way trace block analyzing source code orby comparing block position source migrated source code one dom information retrieve block couple indeed dom element may unique migrated bragagnolo used retrieve block one also think using xpath retrieve element case source code migrated source application contain enough information editable one rely compar ing block position block identication see preceding section enabledindeed block identied one recreate part block couple comparing position block source migrated application two block approximately position source migratedapplications likely represent element traceability allow precise analysis instead comparing source application migrated one one able performthe analysis block block block relationship block identication enable block relationship analysis instead comparing pixel pixel block block approach compare relationship block indeed relationship dene layout need extract source migrated screenshots rela tionship block compare extraction might cult preceding identied challenge however dealing blockrelationship would nal step layout migration validation conclusion future work previous experiment identied lack approach test layout migrated gui moreover many validation technique proposed liter ature getting obsolete modern framework architecture thispaper explored state art proposed new simple approach based research eld thus identied future challenge layout migration validation finally proposed three main future work project study block identication image traceability source migrated gui relationship block reference alpuente romero visual technique web page comparison electron note theor comput sci amaltano fasolino tramontana gui crawlingbased technique android mobile application testing ieee fourth international con ference software testing verication validation workshop ieee isbn httpsdoiorgicstw httpieeexploreieeeorgdocumentchallenges layout validation lesson learned cao mao luo segmentation method web page analysis using shrinking dividing int parallel emergent distrib syst hayakawa hasegawa yoshika hikita maintaining web application translating among dierent ria technology gstf comput joorabchi mesbah reverse engineering io mobile application working conference reverse engineering ieee isbn wcre httpieeexploreieeeorgdocument karami prasad shehata image matching using sift surf brief orb performance comparison distorted image arxiv preprint arxiv memon banerjee nagarajan gui ripping reverse engineering graph ical user interface testing proceeding ieee working conference reverse engineering wcre ieee computer society press los alamitos november mesbah van deursen lenselink crawling ajaxbased web application dynamic analysis user interface state change acm trans web issn httpdl acmorgcitationcfmdoid moran watson hoskins purnell poshyvanyk detecting summarizing gui change evolving mobile apps arxiv july morel asift new framework fully ane invariant image comparison siam imaging sci sanchez ram anchez cuadrado garc molina modeldriven reverse engineering legacy graphical user interface autom softw eng issn httpsdoiorgs sanchez ram ono sanchez cuadrado garc molina vanderdonckt layout inference algorithm graphical user interface inf softw technol sanoja gan carski migrating web archive html html blockbased approach evaluation kirikova nrv papadopou los ed adbis lncs springer cham isbn van beusekom keysers shafait breuel distance measure layoutbased document image retrieval second international conference ondocument image analysis library dial ieee verhaeghe gui migration using mde gwt angular industrial case ieee international conference software analy si evolution reengineering saner hangzhou china httpshal inriafrhaltowards automated taxonomy generation grouping app review preliminary empirical study saurabh malgaonkarb sherlock licorish bastin tony roy savarimuthu department information science university otago dunedin new zealand saurabhmalgaonkarsherlocklicorish tonysavarimuthuotagoacnz abstract app review often reect endusers request issue suggestion supporting app maintenance evolution hence researcher evalu ated several classication approach identifying classifying app review however classication approach driven manually derivedtaxonomies limitation given burden human involvement numerous app review dependency availability domain knowledge perform classication pilot study develop evaluate novel approach towardsthe automatic generation dynamic taxonomy group related app review approach us natural language processing feature engineering word sense disambiguation automatically generate taxonomy validated theproposed approach app review extracted popular track app outcome revealed match manual taxonomy generated domain knowledge provided human approach show promise rapidlysupporting software maintenance evolution keywords app review natural language processing contextual semantic similarity taxonomy classication introduction informative review expressed natural language pertaining apps contain valu able information reecting request app feature specic issue encountered bug related app suggestion improvement app developer thus always lookout efcient method classify analyse app review convertthem actionable knowledge knowledge contributes signicantly towards software maintenance evolution past researcher employed classi cation approach one method obtain actionable knowledge app review classication approach group together app review common char acteristics specic category based taxonomy derived manually domain knowledge domain knowledge made available domain expert human burdensome especially numerous app review study springer nature ed qua tic towards automated taxonomy generation grouping app review address abovementioned challenge proposing evaluating novel classica tion approach group app review based automatically generated taxonomy automatic generation taxonomy inspired multiple knowledge domain natural language processing feature engineering word sense disambiguation based contextual semantic similarity development novel approach extract informative review vast pool app review using automated rulebased ltering approach next utilise natural language processing perform necessary text preprocessing operation later tag noun app feature reported associated adjective verb descriptor explaining complaint issue requestssuggestion pertaining app feature modelled basis representing category taxonomy finally category taxonomy used grouping informative review evaluated best knowledge proposed classication approach offer unique contribution app review mining software mainte nance domain prime contribution approach automatic generation app review taxonomy empirical evidence pointing effectiveness ourapproach set recommendation approach used following two research question motivated enquiry approach developed automatically generate taxonomy classify app review group automated taxonomy compare one developed manually review related work sect evaluate multiple domain view combining various method answer sect evaluate method sect section provides result answer discus outcome implication sect consider threat validity sect section present concluding remark future work research gap related study review literature reveals classication approach grouping appreviews driven domain knowledge made available manually expert instance maalej manually created four specic category classify app review using basic keyword lookup grouping mechanism nave bayes decision tressor maximum entropy panichella created taxonomy classify app review using machine learning method ciurumelea dat onomy comprising set customised category classify app review using gradient boosted tree classier study set random app review manually labelled category domain expert later performance setof classiers nave bayes svm logistic regression evaluated towards automation classication task sorbo developed grained taxonomy app developer required manually check groupedapp review context subsequently study raise question cer tain circumstance domain knowledge required classication unavailable malgaonkar furthermore need manually analyse app review seems unavoidable previously generated solution instance maalej group app review one four category bug report feature request user experience rat ings note taxonomy identify specic detail feature buggy thus requiring app developer analyse app review necessary information classication performed challenge remains taxonomy reviewed well critical evaluation abovementioned study others presented observed universal manually derived taxonomy made available classifying app review classication process could independent availability domain knowledge another major drawback manually created taxonomy knowledge domain expertsis necessity update taxonomy software product evolves address drawback motivated develop evaluate automated taxonomy generation approach classifying app review automatically generating taxonomy section explore concept method lead design automated taxonomy corpus app review feature engineering identication product feature crucial step product engineering reengineering process however feature identication could challenging due variation way product review specied thus domain knowledge becomes necessary possession domain knowledge feature may identied analysing grammar structure product review identiers may evident date researcher used part speech po tagging purpose thus take inspiration approach developing taxonomy assume noun mentioned app review app feature adjective andverbs issue suggestion request related particular app feature example consider app review gps noun app feature inaccurate adjective issue improved verb requestsuggestion example gps app feature inaccurate depicts issue associated app feature andimproved reects request pertaining app feature pattern may form core potential taxonomy generated feature engineering asdepicted example illustrated taxonomy would aid towards grouping similar app review next consider investigation suitable semantic similarity method semantic similarity method corpusbased method often used determine semantic similarity word method operate principle word sense disambiguation httpstinyurlcomwytc towards automated taxonomy generation grouping app review examining word pair context word pair awarded score given strength association analysis may take multiple form similarity measure based feature similarity measure based graphical edge similarity measure based information theory similarity measure based knowledge distribution method dictionary provide formal description word compared semantic similarity purpose medical knowledge gene example generated taxonomy feature engineering therefore knowledge source dictionary need created com puting necessary semantic measure thus major disadvantage semantic similarity method dictionary entirely dependent exis tence domain knowledge may also variation way word used different context human pose challenge challenge lie heart proposal automatically generate taxonomy app review contend need involve domain expert required previously proposed taxonomy problematic fact even curated knowledge available difference theway word used software user would pose challenge example meaning word draining dictionary making particular liquid run particular space however term app review draining associated consumption device battery power said given nature app review often word close proximity often contextually similar app review often contain semantically similar word close vicinity instance consider app review possible accurately track time distance app review indicates particular app able accurately track time distance note accurately track time distance close proximity potentially indicating contextual semantic similarity pattern repeated many app review suggesting invector space representation word app review semantically similar word term contextual application often close extraneous word distant form basis generation taxonomy identies verb adjective semantically closer particular noun based context usage hence investigated three method coal ppmi glov measure semantic similarity word evaluated method malgaonkar view selecting best performing one taxonomy generation selected method evaluated method showing superiorperformance coal correlated occurrence analogue lexical semantic coal word vector distance proximity method address drawback predecessor hyperspace analogue language hal wellknown method latent semantic analysis lsa initially coal creates wordword cooccurrence matrix text corpus using ramped window size four word coal count number time every word woccurs proximity store weighted count total occurrence relevant word pair wwith respective cell word word matrix ramped window size four responsible generating appropriate word count instance woccurs adjacent window assigns count four wi separated wby one word window generates count three forth count one distance three word finallythe wordword cooccurrence matrix portrays weighted sum occurrence proximity next stage pearsons correlation coefcient calculated weighted vector count occurrence word wand general provides insight vicinity wwith furthermore context background coal convert negative correlation value matrix zero computes square root positive one square rootoperation normalizes matrix thus making coal unbiased towards larger positive value positive value matrix correspond wordword pair convey substantial amount information finally semantic similarity score ofword pair wandw calculated using data present normalized matrix since coal operates positive value correlation distance measure known provide accurate result cosine measure correlation tend subtler cosine ppmi pointwise mutual information pmi calculates degree cooccurrence two word wandw dened pmi wwlog pwwp formula general considers probability cooccurrence two word given joint distribution occurring together individual distribution separate individual count however ppmi determines cooccurrence two word byconsidering positive pmi value formula stated ppmi maxlog pwwp method create wordword occurrence matrix utilise count particular wordword pair along theindividual count word present pair ppmi prepares wordword cooccurrence matrix ppmi formula applied wordword pair entry matrix ppmi computed wordword cooccurrence matrix finallycosine distance used determine semantic similarity score word pair andwtowards automated taxonomy generation grouping app review glove global ectors word representation glov global logarithmic based bilin ear regression method inherits strength cooccurrence matrix theapplication context window initially generates wordword cooccurrence matrix store count number time particular word occurs context another word furthermore method considers nonzero count generated wordword cooccurrence matrix processing generation wordword cooccurrence matrix method provides insight semantics word perspective wordword cooccurrence matrixusing probabilistic operation highlight contextual similarity word resulting vector word matrix method creates func tion fparenleftbig vwvwvwparenrightbig calculating probability word appears context word reference context another word function indicates particular word vector representation ofthe vector space contextual word used determine degree contextual semantic similarity wandw relationship word wandwis determined processing ratio word cooccurrence probabil ities reference contextual word author weighted least square wls regression approach deal fewer count wordword pair occurring matrix thus preventing bias avoiding noisy information finally methodreturns semantic similarity score word pair wandw pareto distribution law irrespective best performing method shortlisted generating necessary taxonomy grouping informative review still face challenge determining number relevant category taxonomy question model individual noun app feature associated adjective verb request issue suggestion category address challenge assistance pareto distribution law provides rule state contribution towards cause given specic participating entity application law common software engineering eld instancearchak applied law identify crucial product feature impact sale take inspiration study utilise pareto distribution law shortlist entry nounadjectivesverbs generate taxonomy inwhich identify category reecting app feature along associated issue request suggestion app feature grouped neutral others category noted particular app feature thetaxonomy represents name particular group keyword lookup grouping mechanism nalising suitable semantic similarity method determining number category based pareto distribution law utilise keyword lookup string matching grouping mechanism group informative review relevant group malgaonkar informative review corpus get categorised particular group word informative review match word particular group present inthe taxonomy app feature issue suggestion request said noted informative review get categorised group grouped others group prevent loss information experimental setup evaluation section provides detail regarding procedure employed drive experimentand validate primary outcome study first provide brief introduction dataset used experimentation purpose sect provide detail text preprocessing operation performed sect thereafter provide detail regarding three method coal ppmi glov used generate required entry nounadjectivesverbs evaluation subsequent outcome sect next provide detail evaluation setup automatically generated taxonomy sect experiment conducted using python dataset order demonstrate evaluate approach automatically generate taxonomy grouping informative review utilise tracksdataset consist app review track android app assist endusers automatically manuallyset track feasible route outdoor activity jogging walking skiing biking app also allows endusers check statistic activity term distance travelled speed ground elevation level calorie burned furtherthis app allows endusers save summary statistic computer share data similar apps thus exhibiting wide spectrum functionality make highly eligible evaluation purpose addition track dataset selected inthis study previously provided software maintenance insight devel opers app thus software app provides good baseline evaluating preliminary outcome study extracted informative app review usingthe automated ltering approach mentioned using approach app review manually labelled either informative app feature request issue sug gestions improvement noninformative useless content baseless criticism praise thereafter expectation maximization multinomial nave bayes used predict label remaining app review text preprocessing initially performed basic text preprocessing operation extracted infor mative review removal special character punctuation whitespaces andnumbers thereafter converted preprocessed informative review lower httpswwwpythonorg httpstinyurlcomwazwge towards automated taxonomy generation grouping app review character eliminate stopwords perform lemmatization said initial task experiment identify noun adjective verb preprocessedinformative review refer sect example achieve outcome average perceptron po tagger outperforms type po tagger known scale across domain tagging necessary noun adjective verb preprocessed informative review provide tagged informative review gps noun inaccurate adjective drain verb input semantic similarity method coal ppmi glov theirevaluation provide detail regarding process next evaluation coal ppmi glove objective evaluation process shortlist best performing semantic sim ilarity method based accuracy determining contextual semantic similarity noun adjective verb occurring informative review initially semantic score generated method coal ppmi glov word pair compared assigned manually three author later pearson correlation analysis accuracy method determined higher degree correlation author score generated partic ular method word pair greater accuracy method accomplish objective assigning semantic score word pair using compatiblerange map semantic similarity numerical scale onto interval scale lowmediumhigh conforming convention thus map numerical semantic score produced coal ppmi glov onto interval scale low medium high using class interval method based computed class interval scale range map numerical scale range low interval scale numerical scale range medium interval scale nally numerical scale range high interval scale table illustrates rationale behind assignment semantic score support relevant entry example guideline table evaluate result generated coal ppmi glov method method generated result consisted several entry wherein entry represents noun adjective verb semantically similar particular noun example consider phone returned noun coal identied semantically similar verb scrolling high otheradjectives verb varying score average semantic score computed entry associated phone noun outcome evaluated manually assigned pair fleisss kappa statistic computed assessreliability evaluation generated taxonomy validate automatically generated taxonomy using qualitative content analysis approach process initially noun entry automatically gen erated taxonomy selected check presence noun pool informative review next manually analyse informative review determine malgaonkar table protocol manual assignment semantic score range label justication semantic score assignmentword pair example low word pair entry falling rangerepresent low semantic score asthere irrational relationship observed word pair word pair lack word sensedisambiguationi got phone tried imy like half mile said please medium word pair entry falling range reect moderate level contextual semantic similarity relationship word pair rationali mile straight line trip track recorded completely jagged mile distance high agreement semantic similarity word pair entry falling intervalrange supported previous evidence feature defectbattery drain never launched app draining battery set adjective verb associated noun question every informative review analysed extend list adjective verb review relevant noun scrutiny finally list manually nalised adjec tives verb pertaining specic noun entry compared presentin automatically generated taxonomy compute accuracy accuracy indicates percentage adjective verb common automatically generated taxonomy manual taxonomy nal list manually nalised adjective verbspertaining noun entry entire process repeated noun entry present automatically generated taxonomy noun entry left evaluation overall average accuracy percentage computed reecting overall accuracyof automatically generated taxonomy finally repeat reliability check manual analysis explained sect result generated taxonomy validity section compare outcome automated taxonomy manually developed taxonomy unique case track outcome provide context answering also provide triangulation coal ppmi glove ran coal ppmi glov individually track corpus preprocessed informative review identify adjective verb semantically similar relevant noun method generated result highlighted entry indicating nounstowards automated taxonomy generation grouping app review respective associated semantically similar adjective verb result generated method consisted entry app feature theirassociated issue request suggestion ensuring reliable outcome gpower tool used sampling appropriate number record manual analysis recommended entry comprised representative sample condencelevel error check helped determine accuracy three method coal ppmi glov support validation process refer sect first record semantic score generated coal ppmi glov nounadjective nounverb pair next three author independently assigned semantic score range lowmediumhigh based dened numerical interval scale nounverb nounadjective word pair refer table later checked entry present coal ppmi glov result assessed manual score assigned comparing average finally run pearsons correlation test check accuracy ppmi glov coal manually assigned score result showed semantic score generated glov coal positively correlated assigned manually andr respectively indicates substantial level agreement automated manual process however negative correlation observed ppmi indicating signicant disagreement score generated ppmi manual analysis coal recorded highest degree convergence automated manual analysis formal reliability assessment done three author entry total entry using fleisss kappa coefcient returned interpreted substantial agreement coder hence based come shortlisted coal automatic taxonomy generation next applied thepareto distribution law result generated coal identify necessary entry category required grouping informative review returned entry depicted respective noun along associated adjective verb category subset outcome visualised undirected graph ten prominent noun app feature adjective verb issue request sug gestions depicted example show stats statistic workout map selected workout unreadable enduser generated taxonomy validity evaluated accuracy automatically generated taxonomy analysing entry mentioned sect overall accuracy found indicates substantial match manual taxonomy generated domainexperts automatically generated taxonomy addition regard reliability assessment pertaining assignment manual semantic score general agreement observed author able manually develop taxonomyfrom informative review validated informative review grouping result generated keyword lookup grouping mechanism refer sect accuracy slight imperfection due misspelled word httpstinyurlcomynyjy malgaonkar partial taxonomy showing interdependency among app feature associated issuesrequestssuggestions discussion implication approach developed automatically generate taxonomy classify app review group ndings reported study show possible develop approach automatically generates taxonomy classify app review group approach able directly extract app featuresissuesrequestssuggestions corpus app review without requiring human involvement implication effective software evolution main tenance software developer available manually analyse numerous software product review text mining involving po popular used previously level human participation involved labelling app review support manually generating taxonomy could challenge feature engineering approach assisted building suitable taxonomy frame work grouping similar app review thereby solving signicant problem thatis evident manually generated taxonomy primary objective deter mine issuesrequestssuggestions verbsadjectives semantically similar app feature noun evaluated coal ppmi glov coalsoutperforming method see probabilistic method ppmi glov performed le favourably word vector distance approximation method coal primary goal investigate performance method used measuring semantic similarity difference outcome noted may due way coal directly operates distance vector data belong ing respective word pair held notable determining word relationsbased principle word sense disambiguation contrast ppmi tends biased towards infrequent word pair glov operates word embeddings scrutiny method would benet future researchtowards automated taxonomy generation grouping app review automatic taxonomy generation application reliable contextual seman tic similarity method address another drawback observed manuallygenerated taxonomy appropriate data category taxonomy humangenerated taxonomy provide number category thus clas sication approach often provide holistic view grouped app review isunsuitable numerous app review issue addressed approach however new problem created relates automatic generation taxonomy large application pareto distribution law seems useful determin ing prominent category pareto distribution law appropriately priori ti signicant category still retaining others category fundamental string matching provides near perfect approach assigninginformative review created group completing automatically generated taxonomy software engineering research focused app store mining may learn automated taxonomy compare one developed manually automatically generated taxonomy compared favourably one developedmanually observed overlap two taxonomy suggesting appropriate combination concept method multiple domain provided intuitive solution closely aligned human thinking noteworthy investigation preliminary semantic similarity method coal rened tuned optimization including threshold setting known lead improvement addition noted utilised best performing automated app review ltering approach extract informative review however approach accurate based reported fmeasure app review track hence may noninformative review oursample could possibly compromise accuracy automatically generated taxonomy end outcome reported work conservative said research study beneted optimization improvement examplecoals integrated svd subjected specic svd parameter careful tuning generate optimal data required towards named entity recognition mean latent semantics believe wider evaluated taxonomy created app developer provides explicit view prominent app feature associated issue request suggestion expressed appreviews thus app developer may directly generate taxonomy app review need classication identify issue request suggestion pertaining app feature reducing manually demanding task additionally taxonomy indirectly represents prioritised app feature along associated request issue suggestion requiring immediate remedial action group noun modelled descending order prominence fact partial taxonomy presented reveals app feature share common set issue request suggestion nding could crucial app developer would signicantly assist discovering dependency among app feature could important inidentifying impact one app feature another common characteris tic related issue request suggestion shared among app feature aspect software architecture may also detected visualization malgaonkar speed distance module related furthermore based observed hierarchi cal dependency among app feature resolving certain issue request suggestionsassociated specic app feature reduce burden defect related app feature beyond unintended benet proposed approach requires human involvement automatically extract wide spread category organicallyin addition empirical evaluation revealed satisfactory outcome approach assessed one manually derived albeit used single case study thus believe automated taxonomy generation approach may useful forthe software engineering practitioner community threat validity internal validity coming text preprocessing po tagging pipeline feasible evaluate noun adjective verb reect app featuresissues suggestion request misclassied due overhead involved manual evaluation addition investigation done using manual analysis always criticized subjectivity external validity used single dataset study may affect generalizability study construct validity pareto distribution law returned entry category taxonomy may seem excessive said manual evaluation conrmed entry werelargely relevant worked remove threat performing rigorous reliability assessment concrete agreement observed conclusion future work previous work attempted address challenge classifying analysing app review support software evolution maintenance typically developed classication approach group together app review common characteristic specic category based taxonomy derived manually domainknowledge however domain knowledge may readily available app review increase number scalability challenge encountered manually derived taxonomy addressed limitation study developed novelapproach automatically generating taxonomy group app review without need availability domain knowledge domain expert based empirical evaluation reported study outcome approach compare favourablyto one manually generated thus seems useful grouping app review intend validate approach using larger sample apps future work investigate various optimization method improving performance approach beyond app review feasibility proposed approach also investigated issue request tracker jira reference aggarwal zhai mining text data springer boston towards automated taxonomy generation grouping app review archak ghose ipeirotis show money deriving pricing power product feature mining consumer review proceeding sigkdd acm boehm port educating software engineering student manage risk proceeding icse ieee computer society boutkova experience variability management requirement specications splc ieee bullinaria levy extracting semantic representation word cooccurrence statistic computational study behav re method chen lin hoi sch arminer mining informative review develop er mobile app marketplace proceeding icse acm hyderabad ciurumelea panichella gall automated user review analyser icse sorbo panichella alexandru would user change app summarizing app review recommending software change proceeding thsigsoft acm fleiss cohen equivalence weighted kappa intraclass correlation coefcient measure reliability educ psychol measur haji raab spousta semisupervised training averaged perceptron po tag ger proceeding acl association computational linguistics karov edelman similaritybased word sense disambiguation comput linguist kiremire application pareto principle software engineering january park seo webbased requirement elicitation supporting system using require ments categorization proceeding seke chicago usa konkol brychcn konopk latent semantics named entity recognition expert syst appl kropp stoker bashaw validation taxonomy educational objective exp educ licorish savarimuthu btr keertipati attribute predict feature lesson app store mining proceeding ease acm karlskrona maalej kurtanovi nabil stanik automatic classication app review requirement eng httpsdoiorgs martinezgil overview textual semantic similarity measure based web intelligence artif intell rev httpsdoiorgs mayring qualitative content analysis companion qual re mihalcea corley strapparava corpusbased knowledgebased measure text semantic similarity aaai pagano maalej user feedback appstore empirical study requirement engineering ieee panichella sorbo guzman ardoc app review development oriented classier proceeding sigsoft acm malgaonkar pennington socher manning glov global vector word representation proceeding emnlp rohde gonnerman plaut improved model semantic similarity based lexical cooccurrence commun acm snchez batet isern ontologybased information content computation knowl based syst snijders dalpiaz hosseini crowdcentric requirement engineering ucc zhang palade wang word representation salient feature ieee access zone pain visualising relationship software architecture defect jean petri tracy hallb david bowesb lancaster university lancaster jpetrictracyhalldhbowes lancasteracuk abstract substantial development time devoted software mainte nance testing development resource usually nite risk component receive insucient eort thorough testing architectural complexity tight coupling make eective testingparticularly challenging software component high architectural complexity likely defectprone aim study investigate relationship established architectural attributesand defectproneness used architectural attribute abstract ness instability distance measure architectural complexity software component investigated ability attributesto discriminate defective nondefective component four open source system visualised defectproneness plotting archi tectural complexity defectiveness using martin zone painour result show architecture inconsistent impact defect proneness architecturally complex component seem immune defect project project architecturally complex component signicantly suer defect architectural complex ity increase defectproneness impact strong recommend practitioner monitor architectural complexity software com ponents time visualising potential defectproneness using mar tin zone pain keywords software defect software architecture software evolution introduction aim investigate eect architecture defectproneness build previous work looked relationship aspect architec ture defect elish compared ability three metric suite capture various static feature code predict pre postdefects elish demonstrated martin suite metric signicantly outper formed two metric suite analysed jaafar examined impact ccirclecopyrtspringer nature ed petri design pattern defectproneness reported component anti pattern defectprone others jaafar demon strated component antipatterns also involved struc tural change however remains unclear complex architecture increase likelihood defectproneness best knowledge study hasinvestigated impact architectural complexity defectproneness used three metric martin suite metric measure architectural complexity software component abstractness insta bility anddistance main sequence short distance abstractness dened ratio interface abstract class component total number class component instability dened ratio outward dependency component total number depen dencies entering component finally distance dened absolute value aand iwhich represent distance main sequence tension plot also used martin notion zone pain zone uselessness collectively called zone exclusion categorise component architectural complexity investigated whether defectproneness likely occur zone exclusion investigated likelihood defectproneness component zone ofexclusion compared component set answer research question eect architectural attribute defectproneness software component theinvestigated open source system proportion defective component zone exclusion investigated open source system contribution threefold firstly show architectural complexity promising indicator defectproneness architectural complexity may give complementary information addition metric defect prediction model secondly show relationship architectural complexity defectproneness simple future study needed understand factor aect relationship architecture defectproneness thirdly provide tool data community future analysis replication rest paper structured follows next section discus background work followed detailed methodology section section present discus result section outline related work followed conclusion sect background many code design approach building reusable maintainable testable software proposed year example gamma umented reusable solution objectoriented system whilst jaafar conducted empirical study investigate impact design pattern software maintenance defectiveness work focused investigating problematic coding approach may hamper reusabilityvisualising relationship software architecture defect maintainability testability example khomh showed class containing antipatterns frequently changed defectpronethan others almost release four system analysed hall demonstrated code smell small signicantly nega tive eect software defect bavota demonstrated test smell impede maintainability software test many static code metric used mean ass impact defectproneness example suite mood suite martin suite amongst frequently used one elish showed prediction model based martin suite metric performed best amongst three suite almugrin modied martin suite based concept responsibility later showed modied suite yielded high corre lation respect maintainability testability study focus architectural attribute software three architectural attribute dened martin explore relationship defectproneness software component methodology architectural metric equation depict abstractness ainstability ddistance main sequence respectively anais number abstract class inter face component whilst ncis number concrete class com ponent ai range indicates component contains abstract class interface hand indicates component contains nothing abstract class interface inrepresents number inward whilst outthe number outward dependency ivalue also span indicates maximally sta ble component maximally unstable component finally dcalculates euclidean distance main sequence dalso range indicates component main sequence whilst indicates component far away main sequence possible component inside zone exclusion either zoporzou figure show relationship three metric anticipate compo nents close msshould le aected defect compared component zoew tension plot visualise defective component across dierent snapshot software evolution ana ncifa outfa indai experiment used four open source project shown table project come apache community selected project similar devel opment standard reduces issue arise analysing dierent open petri tension plot showing relationship aiand extreme value ofaand iare driving component towards zone exclusion also called zone pain source project addition project generally belong domain java library reasonable size widely used community table summarises chosen project anda mitscolumns total number defective le commits respectively throughout project history last two column represent average number package class analysed commits num bers per commit across software history collected two set data set data collection defect project table used szz algorithm extract defective le commit throughout project history second set data contains architectural metric aiand four project due lack existing static metric tool work latest java version developed javametricsto collect aiand dmetrics project collected metric gitcommits finally amalgamated information second set data get list metric defective nondefective component throughout project history wealso cleaned datasets script available online answer investigated whether complex component likely defective compared simpler counterpart reduce bias compared component similar size removed nondefective com ponents smaller bigger defective component largerthresholds would include component would also defeat purpose comparing similar size smaller threshold leave component compare httpsgithubcomlancsunisejavametrics httpsgithubcomlancsunisequatic replication visualising relationship software architecture defect table open source project used paper project defect analysed commits avg package avg class hadoopcommon camel derby hive threshold resulted right balance statistical analysis answer used approach similar binary testedness previously reported ahmed bach binary testedness separate source code two binary group original form one binary group code covered test whilst another group code associated test po sible given snapshot count occurrence defective componentsfor covered uncovered code fewer defect end covered com pared uncovered group establish testing eective note defect initially extracted via form defect prediction ratherthan exposed test test would able uncover defect uncovered code undertook similar experiment validate whether architectural attribute lead defectprone component dened calculate defectproneness component used three threshold calculate ratio dened dnd ndnndr dnd ndnnd equation represents ratio defective component total number component particular region tension plot rdare component similar green component whilst rdare component sim ilar red component ndand nndare count defective nondefective component specic region tension plot respectively result analysis investigates whether architecturally complex component likely defectprone compared architecturally simpler component archi tecturally complex component defective average would expect farther away test hypothesis whether defective component tend greater distance used onesided nonparametric mannwhitney test used mannwhitney test dierent number instance defective nondefective component allprojects except derby pvalues least lower conrming statistical signicance conclude architecturally complex component likely defective simpler counterpart petri given signicant dierence distance defectiveness case investigated magnitude dierence estimate themagnitude used ratio dened three dierent threshold threshold represent maximum shift msthat divide tension plot two group previously explained sect expectation see dfor threshold approaching closer word defectiveness component increase approaching closer zoe calculatingrd rdit possible estimate magnitude scale dierence two group table report detail table ratio defective nondefective component based distance main sequence project shift rdef rnondef scale pval hadoopcommon hadoopcommon hadoopcommon derby derby derby camel camel camel hive hive hive table present ratio scale two group component four project dierent threshold column project name shiftcorresponds distance msrdefandrnondef rdand respectively scalerepresents magnituderd rdscale mean architecturally complex component indeed likely defect prone whilst scale show opposite addition scale show two time defective component zoethan around finally pval show whether dierences rdand rdare signicant table rcamel scale close threshold indicates architecturally complex component almost timesmore likely defectprone hand derby show similar result scale close indicating simpler component time likely defectprone figure example using tension plotfor realworld project gure show arrangement defective nondefective component commits hadoopcommon subplot invisualising relationship software architecture defect figrepresents state defective nondefective component one git commit figure clearly show four commits ded andfad architecturally complex component defective abstractness instability top defective hadoopcommon snapshot conclusion ndings suggest architectural complexity component dened martin always increase likelihood defectprone could multiple reason case one reason complex component project thoroughly tested compared complex component project suspect unlikely analysis given used project community follows thesame protocol another likely reason could dierence respon sibilities component zoecompared component close study shown practitioner spend time maintaining andtesting complex component may leave opportunity defect slip unnoticed simpler component overall analysis showed three four considered sys tems architectural complexity strong relationship defect strategic refactoring component zone exclusion introducing abstraction likely reduce architectural complexity component decrease overall petri defectproneness system visualisation technique tension plot well martin metric eective way practitionersto determine component require attention however even though magnitude defectproneness zone exclusion three time higher eect consistent across system suggests thereare factor aect defectproneness example component zoemay disproportionally tested compared component close accounting level testing could promising factor explore future acknowledgement work partly funded grant uk engi neering physical science research council grant number eps reference abreu mood metric set proceeding ecoop ahmed gopinath brindescu groce jensen testedness eectively measured proceeding acm sigsoft interna tional symposium foundation software engineering almugrin albattah alaql alzahrani melton instability abstractness metric based responsibility ieee annual computer software application conference ieee almugrin albattah melton using indirect coupling metric predict package maintainability testability syst softw bach andrzejak pannemans impact coverage bug density large industrial software project empirical software engineering measurement esem ieee bavota qusef oliveto lucia binkley test smell really harmful empirical study empirical softw eng chidamber kemerer metric suite object oriented design ieee trans softw eng elish alyafei almulhem empirical comparison three metric suite fault prediction package objectoriented system case study eclipse adv eng softw gamma design pattern element reusable objectoriented software pearson education india hall zhang bowes sun code smell signicant small eect fault acm trans softw eng methodol tosem izurieta bieman testing consequence grime buildup object ori ented design pattern international conference software testing verication validation jaafar eheneuc hamel khomh zulkernine evaluating impact design pattern antipattern dependency change fault empirical softw eng httpsdoiorgs visualising relationship software architecture defect khomh penta eheneuc antoniol exploratory study impact antipatterns class changeand faultproneness empirical softw eng martin agile software development principle pattern practice prentice hall upper saddle river sliwerski zimmermann zeller change induce x pro ceedings international workshop mining software repository msr acm new york empirical study persistence spotbugs issue opensource software evolution luigi lavazzab davide tosi sandro morasca universit degli studi dellinsubria varese italy luigilavazzadavidetosisandromorasca uninsubriait abstract background static analyzer useful software devel opers detecting locating code issue addition classifying nature main problem static analyzer however may signal many false alarm objective paper investigate whether code issue detected spotbugs persist software code get removed chose spotbugs one ofthe bestknown used static analyzer method carried empirical study opensource java program took account two version check whether issue signaled spotbugs older version removed time newer version released total issue signaled spotbugs result result show half issue sig naled disappeared two version correction rate uneven across project issue correctness software code likely longer present newer version othertypes warning conclusion investigation required understand project appear active others cor recting spotbugs issue highseverity warning wereobserved analyzed code nonetheless fact half issue agged spotbugs removed indicates tool eective detecting incorrect otherwise problematic code keywords static analyzer bugsbug persistence spotbugs bad code pattern introduction reduce quality assurance time cost number technique devised number tool built automate activity specically defect detector based static code analysis help improve software quality decrease time cost several reason analysis quick practically free charge instance spotbugs opensource code installed easily conguration needed analyze project indication folder contain ccirclecopyrtspringer nature ed empirical study persistence spotbugs issue target code analysis quite fast instance analyzed class logj spotbugs recent laptop issue found type dicult via testing moreover testing detect failure usually provide indication kind defect caused failure location contrary warning issued static analyzer point specic typesof defect location code even though static analyzer issue warning sometimes false alarm manually inspecting code agged possibly defective static analyzer generally easy sense static analyzer seen way guidemanual inspection warning classied defect type allows developer compile catalog frequent defect type identify adopt technique avoid type defect however tool based static analysis identify code pattern usuallybut alwaysassociated problematic code result tool provide warning concerning possible defect certain warning actually corresponds defective code typical characteristicof tool reduce appeal software developer may get frustrated high degree uncertainty warning possibly excessive rate false alarm lead spending good deal oftime eort inspecting code turn correct may totally defeat purpose using defect detector delaying product delivery increasing cost practice using spotbugs similar tool useful thenumber false positive reasonably small therefore practitioner mostly interested eectiveness static analyzer need know many actual defect found ofwhat type defect worth correction eort etc paper focus spotbugs formerly known findbugs popular tool defect detection via static code analysis specicallywe investigate whether issue found spotbugs small set open source product actually relevant practice end analyzed two version product evaluated many issue thatwere reported spotbugs release longer appeared second release interpret disappearance issue generally due voluntary action improving code code may changed reason fact issue disappears typically indication worth modifying code way got rid issue spotbugs spotbugs static analysis tool look bug java source code tool free software distributed gnu lesser general public license spotbugs inherits feature predecessor findbugs add new analysis check bug pattern spotbugs check bug lavazza pattern null pointer dereferencing innite recursive loop bad us java library deadlock spotbugs available eclipse plugin oras standalone program spotbugs bug pattern classied mean several variable type violation category rank bug condence ofthe discovery process ten category identied bad practice violation recommended essential coding practice like hash code equal problemscloneable idiom dropped exception serializable problem misuse nal ize correctness probable bug apparent coding mistake resulting code probably developer intended multithreaded correctness code issue thread lock volatile complete list bug description found rank warning concern severity potential bug span severe least severe four rank level also dened scariest rank scary rank worrying rank concern rank moreover condence named priority early release associated warning high condence normal condence low condence highlight quality detection process empirical study principle several way address objective described introduction decided base evaluation objectivethough possibly indirectobservations considered issue observed given release disap peared following release developer deemed useful remove issue interested understanding issue removed thecontext activity specically aimed removing issue context activity another purpose rewriting code way solves potential problem proof modifying problematic code preferablewe also interested understanding removed issue connected defect could cause failure piece poorly written code could possibly cause maintenance problem future accordingly selected opensource program analyzed two ver sion program set spotbugs warning concerning two release compared identify issue present earlier release removed following release since interested deriving evidence practically useful devel opers selected set opensource software product used reallife project program used proprietary web portal previously analyzed one author data analyzed opensource program summarized table empirical study persistence spotbugs issue table analyzed program program initial version final version release date class release date class hibernatesearch sept feb jcaptcha may feb logj aug feb opensymphony july jan pdfbox oct feb rightmost column give also percentage variation number class two version product relevant variation occurs pdfbox newer version contained class older one four project table number version change specic release may introduced substantialmodications functionality spotbugs classies warning rank severity condence fore expected issue highest rank condence arethe one frequently corrected however one thousand total warning belong scariest level none corrected belong scary levelof corrected worrying warning corrected remaining concern warning corrected condence figure show distribution corrected issue con dence observed percentage corrected issue increase condence behavior consistent denition condence expect greater fraction lowcondence warning false positiveshence smaller fraction lowcondence warning corrected nonetheless also noted dierences quite small phenomenon possi bly due spotbugs accurate evaluating level condence assigned warning percentage corrected issue warning condence left percentage corrected issue warning type right dashed line indicates mean lavazza spotbugs also classies warning category thus interesting check whether issue category receive greater attention developersfigure show category get around correction exception experimental issue correction multithreaded correctness correctness issue around correction according spotbugs documentation experimental issue concerning fully vetted bug pattern fact many get cleared seems indicate pattern actually detect type undesirable situation hence spotbugs developersshould promote bug consolidated category another observation concerning corrected issue dierent open source project appear behave dierently respect correcting spotbugsissues table show logj hibernatesearch corrected le spotbugs issue project corrected many issue pdfbox correcting reported issue dierences noted among product persist rank level also consid ered shown table table corrected issue software product rank level product corrected issued scariest scary worrying concern total pdfbox jcaptcharc logj hibernatesearch opensymphony eleven warning scariest scary level treated somewhat surprising since expect serious issue receive attention therefore removed better understand case manually investigated concerned code manual inspection revealed warning concerning logj one scariest one scary false posi tives three scary warning concerning hibernatesearch false positive scariest warning concerning pdfbox get corrected true positive test code code released scary warning concerning opensymphony one recognized true positive one false positive remaining three recognized possible problem able evaluate whether problem actually occur deep enough knowledge code conclusion majority scary scariest warning turned false positivesan empirical study persistence spotbugs issue discussion following observation made based result empirical study overall issuesout warningsdisappeared seems indi cate half spotbugs warning concerned code worth revising project corrected many issue others phe nomenon worth pointing even though analysis provide anyexplanation spotbugs produced highlevel rank warning fact support hypothesis spotbugss ranking correct considered opensource software project put great attention preventing occurrence serious issue released code however given small number highestlevel rank warning hardly evaluate correction becausethe data set small thorough statistical analysis addition warning highest rank turned false positive seem provide evidence high quality considered project higher condence warning corrected frequently lower con dence one fact indicates lowercondence warning include false positive highercondence warning warning type correctness corrected frequently type except experimental warning fact seems indicate thatthe warning concerning correctness likely interesting one developer include true positive therefore denitely worth considering conclusion analysis indicates usage static analyzer help developer detect weak point defect code overall half warning concern code need modied least benet modied also worth noting warning provided spotbugsindicate specic type problem also indicate problem located code therefore developer know look look make manual verication warning fairly straightforward accordingly fact half manual verication result nding real problem involve wasting much eort contrary verication activity highlight real issue drive correction action generallystraightforward related work great deal eort dedicated understanding accuracy staticanalysis tool rahman compared defect prediction capability findbugs pmd jlint statistical defect prediction based histori cal data vetr evaluated accuracy findbugs inspecting lavazza manually source code highlighted findbugs buggy code ayewah evaluated issue found findbugs production software developed bysun google vestola applied findbugs valuatums system understand proportion real bug false positive tomassi con sidered real java bug bugswarm dataset determine ofthese bug actually detected spotbugs jingyue evaluated opensource static analysis ide plugins compare many category soft ware vulnerability plugins detect accurate paper focus accuracy static analysis tool without investigating deeper much software developer take account identied potential bug contrary paper take consideration whathappens bug detection based idea practically relevant issue likely treated research focused understanding corrective maintenance activi tie evaluate bug survival time instance canfora found corre lations bug classicationseverity high low survival time asthe change code could le obvious performed bug might manifest certain condition study focus characterization bug dierent release software product instance author recent paper analyzed java project concluded postrelease bug dierent pre release bug complex requiring developer modifyseveral source code le involve code addition zhou focus specically dierences bug bugxing process desktop smartphone software analyzed bug report open source project desktop android io system discover similarity dierences bug processing io bug xed three time faster compared android desktop system study used detailed information collecting analyzing richer information among future objective conclusion tool detect possibly problematic code pattern based static code anal ysis benecial software quality assurance paper focused spotbugs popular tool defect detection via static code analysis specically investigated whether issue found spotbugs actually relevant practice end analyzed two version opensource software product via spotbugs consider issue reported spotbugs release nolonger appeared second release actually worth correction analyzing corrected issue found half warning issued spotbugs concern issue corrected thewarnings concerning correctness corrected number correct issue increase warning condencean empirical study persistence spotbugs issue overall spotbugs seems provide valuable indication concerning code need correction interesting fact could investigate paper subject future work shall investigate dierent open source project seem address spotbugs issue dierent extent weshall also try understand correction addressed purpose correcting bug correctly associated warning one performed context broad refactoring activity maintainingthe code reason directly connected warning finally would like understand likelihood correction seems largely indepen dent issue severity condence possibly shall try get answersdirectly developer rather infer via data analysis acknowledgment work partially supported fondo ricerca dateneo universit degli studi dellinsubria reference findbugs website httpndbugssourceforgenet spotbugs documentation website httpsspotbugsreadthedocsioen latest spotbugs website httpsspotbugsgithubio ayewah pugh morgenthaler penix zhou evaluating static analysis defect warning production software canfora ceccarelli cerulo penta long bug survive empirical study working conference reverse engi neering hovemeyer pugh finding bug easy acm sigplan beba karlsen evaluation opensource ide plugins detecting security vulnerability ease acm rahman khatri barr devanbu comparing static bug nders statistical prediction international conference software engineering rwemalika kintis papadakis traon lorrach indus trial study dierences prerelease postrelease bug ieeeinternational conference software maintenance evolution icsme tomassi bug wild examining eectiveness static analyzer nding realworld bug esecfse acm vestola evaluating enhancing findbugs detect bug mature soft ware case study valuatum vetr morisio torchiano empirical validation findbugs issue related defect ease iet vetr torchiano morisio assessing precision findbugs min ing java project developed university mining software repository ieee zhou neamtiu gupta crossplatform analysis bug bugxing open source project desktop android io ease acm process modeling improvement assessmentapplying continual service improvement practice study quality healthcare information system service case study sanna heikkinenm anttib kaija saranto istekki box kuopio finland sannaheikkinenistekkifi university eastern finland box kuopio finland markojanttikaijasaranto ueffi abstract continual service improvement csi play critical role increasing quality service leading better customer satis faction however key challenge service management serviceprovider organization identify csi activity although carry improvement task daily basis hoc approach csi may result delay improvement project poor transparency improvement task lack focus service improvement research prob lem study manage servicerelated improvement isoiec compliant csi model main contribution thispaper study servicerelated improvement managed using case study methodology shall describe csi applied healthcare information system service case study result analyzed sociotechnical system sts view result show service improvement managed erp system includ ing csi record workows status monitoring csi additionallyapplying csi healthcare information system requires new set skill service manager covering service management healthcare medical device regulation finally show multiactor networkmay cause challenge csi coordinating multiple vendor stake holder customer representative keywords continual service improvement service quality service management introduction continual service improvement csi service lifecycle phase responsible improving quality service underlying product supported digiteknologian tkiymp aristo project erdf regional coun cil pohjoissavo ccirclecopyrtspringer nature ed heikkinen component process practice csi continual improvement infras tructure library edition may initiate manage improvement regarding continuity management risk management availability management capacity management well service operation service provider interoperabil ity security service play crucial role especially healthcare sectorwhere itrelated incident especially software incident poorly managed technical change cause service downtime prevent access healthcare system technical failure may cause risk patient safety previous study service management itsm mainly focused success factor service management challenge service operation process service management area continual improvement implementation preventive service system measurement service management implementing itil lean method however ndings used deploy continual improvement systematic way deployment csi take account factor crucial itsm initiative senior management involvement competence training information communication sta stake holder culture finland mandatory healthcare organization procedure sta participate quality management patient safety improve ment action medical device act maintains promotes safety instrument equipment healthcare well example sta participate quality assurance reporting potential threaths incident haipro patient safety violation system order perform change technological transformation service provider need play active role developing digital solution inte grate healthcare process system example nowadays finland electronic patient record eprs lmless picture archiving communication system pac source important patient information covering primary specialized care information system need updated continually improved deploy new feature large number service provider supplier service provider healthcare organization need improve operation internal improvement order create deliver support health care service deal growing number legal requirement medical regulation related isoiec service management standard organization shall procedure monitor change legal regulatory vendor requirement study varsha ganesh revealed using appropriate quality management standard quality delivered service wasimproved many service provider organization aware need con tinual improvement often struggle improvement action clearservice roadmap service improvement plan schedule monitoring due lack process manage improvement additionally one chal lenges organization able measure maturity continualapplying continual service improvement practice improvement although service management maturity framework standard example isoiec available however improvement innovation healthcare need engagement multiple stakeholder service provider manage eective ecient ser vice delivery need able rapidly respond requirement ofthe customer service request feedback service user healthcare professional represent business perspective participate dening requirement service paper goal study service provider utilize continual service improvement operation service oer focus service improvement practice finnish service provider company theresults study used service manager business manager service employee improve service delivery multiactor network ability company respond rapid cyclical development result applied understanding social technical aspect managing improvement related service remainder paper organized follows section describes research method section present result study section provides analysis conclusion given sect research method study aimed answering following research problem man age servicerelated improvement iso compliant csi model study used case study method single organization answer research problem research problem divided three researchquestions servicerelated improvement managed enterprise resource plan ning erp software csi model applied service healthcare domain csi operated multiactor network study focused continual service improvement method context service management using case study methodology shall present csi utilized service provider healthcare service case study dened empirical inquiry investigates contemporary phenomenon within reallife context real life context refers daily service management service provider organization see study focused exploring csi activity service provider healthcare domain csi case involves measurement service service process identication improvement idea measurement management improvement action result presented socio technical system sts view sts focussed phenomenological level iden tifying type sociotechnical interaction occur human heikkinen context case study health setting theoretical framework study used ser vice science information technology service management continual service improvement csi quality management preventive action corrective action isoiec service management standard improvement manage ment well healthcare law regulation haipro case organization case organization alfa employee provides information communication medical technology service customer finland alfa also operates service integrator role social healthcare organization municipality case organization selected main authorof paper working case organization thus easy access data additionally considered case representative case typical service provider organization service operation process arecompliant standard isoiec iso delivers service customer healthcare domain using core itsm system erp paper study considered exploratory case study serviceimprovement aspect data collection method data study collected using multiple source evidence case organization alfa year data captured theapplying continual service improvement practice author second author participated supervising documenting case study third author provided additional insight regarding sociotechnical system healthcare information system documentation case documentation quality handbook itsm process description itms process chart standard iso isoiec monthly steering board info intranet information letter archival record improvement record erp software interviewsdiscussions csi process owner quality manager quality special ist group manager itsm tool specialist process manager service management oce smo participative observation observation csi participation smo meeting participation business steering group meeting validation interview number sta erp software main user secu rity manager information management specialist software architect director development manager executive assistant development manager semistructured theme interview two service manager social health care information system service direct observation listening making note conversation training session itil data analysis method research problem research describe manage service related improvement isoiec compliant csi model accordingto sociotechnical theory organization consists two interdependent system first includes social system including people organi zational structure second involves technical system including task andprocesses well technology tool people produce good service customer ndings study analysed using within case analysis tech nique taking account four aspect involved sociotechnical sys tem sts adopting sociotechnical system enables viewing serviceimprovement practice wider sustainable perspective single process area service management shall describe four view point present keep continual improvement momentum going onin context service organization study result shall analyzed sociotechnical component way similar study blomberg catersteel soar result result study presented paper according three research question research question used answer main research problem study manage servicerelated improvement iso compliant csi model heikkinen servicerelated improvement managed enterprise resource planning erp software case alfa erp software service management system developed support eective way work management customer need lead project invoice support request ticket one master data tool discussion continual improvement process owner revealed need collect manage employee improvement idea related new business ser vice innovation service internal practice via erp software author paper designed workow erp software based isoiec standard requirement concerning management improvement idea see process managing improvement idea guide employee operate improvement record always way type model support increase quality management process encourages employee think idea would benet service organization erp software deployed enables designing particular form ticket workows task process author designed form servicerelated idea documented basic web form support astructured informative form continual improvement record employ ee see valuable force document basic information improve ments description benet quality aspect study identied challenge information quality improvement record idea may received like post note incompleteinformation improvement record directed right group people evaluation using automation improvement record used replace case organization form nancial expenditure form andminimize number email related processing content idea provides employee better opportunity learn remember one tool document idea improvement record includes followingfunctionalities categorization subcategorization improvement idea enables eec tive routing improvement idea right team person improvement current service ticket type shall assigned quality management group internal improvement idea shall assigned area manager exam ple improvement idea related corporate security shall assigned security manager human resourcesrelated improvement idea development manager new business opportunity shall assigned business development group reminder two week documenting idea reviewer receive automatic reminder pending evaluation evaluation must done within day seen important force conduct areview make either decisionapplying continual service improvement practice evaluation improvement idea idea evaluated using multiple factor expected business benet business impact leading measurable result time required implementation required resource impact customer summary evaluation decision implementation communication decision information decision imple mentedimplemented shall delivered automatically person submitted idea support person performed evaluation status monitoring status new waiting evaluation handling closed development idea change automatically new pending evaluationimplementation etc tool provides employee channel represent idea related new business service innovation service internal practice increase visibility idea employee enables employee make conversationof idea support progress study observed need ensure clear role evaluate idea keep implementation work going active dialog participant large number potential idea relation benet cost eective resource risk need make selection important review idea using attribute aspect ensure equality ofideas study captured comment participative observation inter view indicated need communicate improvement idea employee ensure process place support smooth management improvement includes identication new idea allocating tothe right people make evaluation motivated employee design solution work implementation well communicating benet achieved observation interview revealed need ticket customer may suggest example idea related internal practice moment clear employee manage type idea customerfeedback idea brought case organization processing someone take action one interviewee commented good tool support management practice thereis also need employee perform implementation improvement addition normal work csi model applied service healthcare domain service measured case organization quality manual describe measurement metric service customer satisfaction customer survey customer feedback project meeting project feedback researchersobserved measurement service benet impact challenging task perform common criterion method ser vice benet evaluated type analysis could show service heikkinen brings broader benet customer data used sale sta increase service sale example regarding robotics service viewpoint cost quality aspect patient safety data transfer employee experience le manual check data copy paste system type knowhow required service manager role service organization need dierent role skill work example one important skill type service manager interaction skill theymanage performance provided service working together cu tomer organization expert supplier interview revealed also need customer relationship management service pricing performance maintenancecontract management procurement contract management service reporting organization management customer continual improvement oper ational service service delivery service manager need knowhow itsm prac tices incident management change project management continuity availability management service level management additionally theyneed tool monitoring service management service manager reported business intelligence tool monitor prof itability service tool identify analyse costsof service service protability future service manager would need increase skill service design medical device regulation related healthcare system service improvement perspective finland bench mark competitor service manager perform service improvement according interview healthcare domain alternative continual improvement healthcare legislation regulative framework result continuous stream change requirement due government socialand healthcare reform additionally customer growing need digitalization requires service provider pay attention improve service service management case organization continual improvement performed many level role cycle action researcher observed continual service improvement important case organization value creation perspective case organization goal add value customer thing customer supporting operation way customer focus business theservice provider organization take care service improvement itrelated problem service manager case alfa commented interview ser vice improvement requires service management process running smoothly time develop process support service delivery role participate decision making service related improvement improving service might dierent role participate design decision making depends scopeapplying continual service improvement practice improvement activity case organization participating role included business manager specialist service manager depending value investment factor described earlier paper decisionmaking authorization dened limit purchase set service manager gather information various source make thebusiness decision move forward observed little unclear decide bigger smaller improvement thing sometimes implementation development idea may involve investment seen result sucient benet calculation whether worthwhile continue implementation company manage ment perspective would better idea rened directlypresented raw idea strategic decisionmaking case organization business development team evaluates lters new business idea recorded erp system one person decide risk recognizing potential service review meeting organized according case alfas quality manual service meeting organized annually service man agers reported meeting include overall service situation service development need service functionality production customer satisfactionpotential cost increase need quality point view number service request erp tool participation depends meeting subject could include customer information management person responsible accountable person sys tem administrator executive service meeting casebycase allows choose best customer relationship management model thereis really onesizetsall model csi operated multiactor network actor stakeholder related service case organization utilizes supplier provide service supplier social andhealthcare system equipment provider additionally servicerelated actor case organization business unit production group net work database integration customer representative authoritiessuch finnish institute health welfare thl digital popu lation data service agency ministry social aairs health social insurance institution finland kela existing ict communication tool skype team enable cooperation supplier customer improvement implemented multiactor network challenge identied according interviewee ser vice improvement requires good cooperation supplier support organization management make thing progress need identifyright channel idea contact person communicate regarding idea case organization recognized service development multi actor network complex timeconsuming process demanding heikkinen step coordination multiple vendor stakeholder customer involved development service improvement begin identication customer need plan ning kicko review supplier oers solution customer need known internally externally oer case organization introduced customer scope improvement aects delivery model large implementation managed project smaller implementation managed service request one interviewee commented good service manager would involved improvement heshe ensure business perspective taken account provide service via multiactor model goal integrate service internal external service provider seamless service chain certain challenge identied delivering service term information managing information supplier operating practice addition ally one interviewee pointed challenge related service supporttimes case organization need take account supplier contract dene service support time service level type expectation customer regarding service operating environment service becoming diverse customer expect case organization able provide customer solution holistically wide catalogue service expectation related meeting agreed service level requirement example response time match customer requirement service time operation followdened service level additionally sta need aware happening service environment readiness improve provided service collaborate engage stakeholder customer also expect caseorganization monitor operating environment provides added value perspective single service holistically wider business perspective table show analysis result according two element social view data source described using abbreviation validation interview theme interview discussion documentation partic observation dob direct observation physical artefactsother abbreviation csi continual service improvement withincase analysis technique applied analyze data case organization focus continual service improvement thisrequires skilled service sta appropriate organizational structure dened pro ce eective tool support service delivery next shall present analysis using component sociotechnical system patternscategoriesapplying continual service improvement practice people service provider need competent sta lead service improvement implementation smooth service delivery customer utilizing sta throughout organization identify unnecessary job bottleneck increase job satisfaction new business service innovation service internal practice recognized sta customer employee encouragedto make conversation recorded idea process idea together customer expectation case organization provide added value perspective single service holistically widerbusiness perspective service provider need aware happening service environment take proactive action readiness improve provided service collaborate engage various stakeholder group table summary key ndings according view sociotechnical system sts finding source implication csi people interaction cooperation skill creativity innovation improve service inthe tool provides channel presentideas related service innovation aware change service environment readiness improve provided service incollaborate engage stakeholder inensure csi skill existfoster innovation skillsutilize full org potentialin csi know service environment plan engagement structure various role participate design decision making implementing improvement incommunicate improvement employee measurement service benet impact value creation perspective inset clear role responsibilitiesto support smooth csicreate visibility csi emphasize managem benet process meeting customer supplier related service delivery doplanning future roadmap help gatherand implement service improvement managing improvement idea process ensures unied processing idea dicommon method criterion needed toevaluate service improvement target doorganize service meeting improve service deliveryuse roadmaps showdirection improvement dene process managing improvementsevaluation improvementsrequires clear criterion technology erp enable managing service task support eective work erp produce monitoring data indesign workow idea captured common form help creating informative impr record indesign system supporting service lifecycle management standardized procedure workows itsm tool structure order provide service via multiactor model case organi zation aim integrating service internal external service provider seamless service chain improve service need ensure clear role evaluate idea motivated employee design solutionkeeping implementation work going active dialog participant eective communication benet achieved heikkinen service roadmap service improvement plan sip would help prioritizing improvement idea additionally sip could help stato proactive manage workload eectively isoiec standard requires service provider measure service implemented improve ments take necessary action target achieved case organization could pay attention identication benet patient safety increased employee experience impact goalorientation dening metric process service provider collect service improvement meeting customer supplier meeting include overall service situation servicedevelopment need service functionality production customer satisfaction potential cost increase need quality point view number support ticket erp tool workows erp tool support andincrease quality management process way large number itsm process framework available improvement purpose erp system support structured informative form continual improvement record employee see valuable force docu ment basic information improvement description benet quality aspect wellknown familiar management process improvement encouragesemployees think idea would benet service customer addi tionally common method criterion service improve ment target evaluated technology erp system enable managing service lifecycle pro ce workows within case organization support identifyingand analyzing cost service issue related eectiveness service protability result support ndings previous study csi emphasizing need systematic management continual improvement action service however study deal csi based maturity model instead applied sociotechnical theory model order establish foundation continual improvement practice conclusion study aimed answering research problem manage servicerelated improvement isoiec compliant csi model main contribution paper present case study focusing studying continual service improvement practice service provider organization study consisted three research question regarding researchquestion servicerelated improvement managed observed erp system play central role continual service improvement case organization erp system includes csi record workows priorizationand categorization improvement idea communication decision status monitoring continual improvement recordsapplying continual service improvement practice second research question csi model applied service healthcare domain focused studying csi context healthcareinformation system service ndings indicate continual improvement seen mandatory process area healthcare information system service need respond change healthcare legislationregulative framework customer changing need observed service manager need service management skill also skill knowhow medical device regulation related healthcare system additionally servicemanagers need information customer strategy improvement roadmaps actual service performance well solution help customer holistically ndings third research question csi operated mul tiactor network revealed service development multiactor network complex timeconsuming process one major challenge coordinate multiple vendor stakeholder customer representative involved improvement multiactor model service provision aim integrat ing service internal external service provider seamless servicechain following limitation related case study first study included one case organization number interviewee andqualitative data would interesting conduct study compare csi procedure multiple organization utilizes qualitative quanti tative data second selection interviewee also seen limitation interview could included customer representative provide richer insight csi third case study research method allow gen eralize research ndings organization however able extendthe theory service management result aimed improving validity study using multiple data source two interviewee validating reviewing case study reliability improved utilizingcase study datastore maintaining chain evidence reference agarwal ganesh implementing quality healthcare strategy improving service delivery private hospital india health manag axelos itil foundation itil edition stationary oce barkai harison preventive service management towards proactive improvement service quality rev bus inf syst blumberg catersteel rajaeian soar eective organisational change achieve successful itil implementation lesson learned multiple case study large australian rms enterp inf manag bostrom heinen mi problem failure sociotechnical perspec tive part cause mi braithwaite mannion matsuyama health system improvement across globe success story country crc press oce itil continual service improvement stationary oce heikkinen coiera putting technical back sociotechnical system research int med inf cronholm salomonson measure matter service quality service management int qual serv sci eisenhardt building theory case study research acad manag rev heikkinen antti studying continual service improvement monitoring quality itsm piattini rupino cunha garc rodr guez guzm erezcastillo ed springer cham iden eikebrokk implementing service management systematic litera ture review int inf manag isoiec information technology service management part service management system requirement finnish standard association isoiec information technology process assessment process capability assessment model service management iso copyright oce jantti catersteel proactive management operation improve service inf syst technol manag jistem jantti hotti dening relationship service management service governance inf technol manag leavitt applied organization change industry structural technical human approach new perspective organization research lyytinen mathiassen ropponen attention shaping software risk categorical analysis four classical risk management approach inf syst re ministry social aairs health medical device act obwegeser nielsen spandet continual process improvement itil service operation lean perspective inf syst manag runeson ost guideline conducting reporting case study research software engineering empirical softw eng ruuhilehto kaila keistinen kinnunen vuorenkoski wallenius haiprowhat learned patient safety incident finnish health care unit duodecim med shrestha catersteel toleman virtualising process assessment facilitate continual service improvement service management australasian conference information system association information sys tems ai asia pacic tan catersteel toleman implementing service management case study focussing critical success factor comput inf syst yin case study research design method edn sage personal opinion survey process compliance checking safety context julieth patricia castellanos ardilaband barbara gallina idt alardalen university aster sweden juliethcastellanosbarbaragallina mdhse abstract manually checking compliance process plan requirement applicable standard common practice safetycritical context hypothesize automating task could interest test hypothesis conducted personal opinion survey among practitioner participate safetyrelated process compliance checking paper present result survey practitioner indicated method used challenge well astheir interest novel method could permit move manual automated practice via compliance checking keywords automated compliance checking process plan safetycritical current practice challenge personal opinion survey introduction safety standard usually include requirement prescribe planning task resource required produced personnel work product tool nair report essential process plan required safety assessment safety management communication risk management conguration management development verication validation modication procedure operation procedure sta competence manually checking compliance plan requirement applicable standard isa common practice checklist used obtained listing require ments standard listing personal organizational practice pro ce compliance checklist accurately lledin requires properevaluation satisfaction requirement thus missed requirement highlighted providing hint improve process process compliance checking could overwhelming due sheer volume complexity knowledge included standard thus hypothe size automating task could interest test hypothesis conducted personal opinion survey among practitioner participate safetyrelated process compliance checking paper present result ccirclecopyrtspringer nature ed castellanos ardila gallina survey particular practitioner indicated method used challenge well interest novel method could permit themto move manual automated process compliance checking result contribute systematizing knowledge process compliance checking nding method tool facilitating practice rest paper organized follows sect present essential background sect present research method used conduct sur vey sect present survey result sect discus ndings sect examine related work finally sect conclude work present future work background section present essential background facilitating automated process compliance checking context european project amass architecturedriven multi concern seamless assurance certication cyberphysical system proposed processcentered planningtime method safetyrelated pro ce compliance checking method requires user create artifact spem system software process engineering metamodelreference implementation supported eclipse process framework epf composer see follows method content element part process role task work product guidance knowledge base compliance information based formalization standard requirement formal contract logic fcl fcl defeasible deontic logic support modeling norm representing obligation permission normative context defeated evolving knowledge fcl rule form rule identier nare proposition represent condition applicability norm concluding proposition contains normative eects spem guidance element customized requirement fcl rule compliance eects correspond proposition rule compliance eects annotated process task compliance eects describe concreteactions prescribed standard requirement user need evaluate task action dene eects overall process compliance make anno tation example task start software unit design process indicates process performed two input thus annotated compliance eects addressswunitdesignprocess provideswarchitecturaldesign andpro videswsafetyrequirements sequential representation process plan well dynamic representation created using compliance httpswwwamassecseleu httpswwwomgorgspecspemaboutspem httpswwweclipseorgepf personal opinion survey process compliance checking method facilitating automated process compliance checking annotated task dynamic representation used automatically gener ate compliance state representation process permit automaticcompliance analysis compliance checker regorous regorous provides compliance checking result description compliance issue rule element involved possible resolution facilitating fcl formalization concept safety compliance pattern scp dened scp httpsresearchcsiroaudataregorous castellanos ardila gallina describes commonly occurring normative safety requirement permissi ble state sequence nite state model process pattern beinstantiated predetermined template epfc recently updated eclipse neon context amass project personal opinion survey personal opinion survey comprehensive research method collecting information using questionnaire completed subject creating sur vey step dene expected outcome survey designed crosssectional participant asked information one xed point time also essential dene option related thesurvey would administered designed survey instrument developed evaluated applied sample population obtained data analyzed four type validity need addressed make sure survey instrument measuring supposes measure face validity cursory review item untrained judge content validity subjective assessment appropriate instrument seems group reviewer knowledge subject matter criterion validity ability mea surement instrument distinguish respondent belonging dierent groupsconstruct validity concern well instrument measure construct designed measure creation survey likert scale widely used likert scale psychometric response scale vepoint scale ranging strongly disagree strongly agree used ask respondent indicate level agreement given statement likert scale specic question canhave response analyzed separately summed related item create score group statement individual response generally treated ordinal data although response level relative position presume participant perceive dierence adjacent level equal technology acceptance model technology acceptance model tam provides general determinant computer acceptance tam capable explaining user behavior across abroad range enduser computing technology user population time theoretically justied tam focus three main facet user acceptance degree person belief usinga particular method free eort perceived usability second related person subjective probability using particular system would enhance hisher job perceived usefulness third extent person intends particular system intention usea personal opinion survey process compliance checking research method section present detail regarding creation personal opinion survey followed guideline recalled sect research question survey aim gathering information current industrial practice challenge process compliance checking well acceptance level method automated compliance checking recalled sect within scope formulate research question presented practitioner currently perform process compliance checking challenge practitioner face performing process compliance checking level acceptance practitioner regarding novel method facilitating automated compliance checking survey design designed crosssectional webbased personal opinion survey whose goal collect data relevant answer research question presented sect target population practitioner involved process compliance checking safetyrelated context nal survey start short introduction purpose study composed question organized four part demographic question aim gathering background character istics practitioner current practice question aim gathering information practitioner experience compliance checking challenge question aim inquiring challenge appearing process compliance checking question practitioner ratethe importance possible challenge using vepoint likert scale rang ing unimportant important question open question practitioner write challenge automated process compliance checking first practitioner read infor mation method facilitating automated compliance checking recalled sect present question series claim seek practitioner degree acceptance regarding user acceptance aspect described tam model see sect method usefulness usability user intention collect theanswers vepoint likert scale ranging strongly agree strongly disagree httpswwwdropboxcomsefcabmekxpjfinalsurveypdfdl castellanos ardila gallina interested practitioner overall experience thus po sible practitioner allowed select one option indicatetheir experience regarding several practice practitioner also given possibility mention additional option answer dont know case consider completing survey would take min instrument evaluation data collection author created set initial question second author helped structure design survey providing comment cleaning ambiguity indepth analysis led formulation question distributed survey selected group safety expert scandinavian conference system software safety one expert provided valuable comment used improve survey nal evaluation performed author improving textual explanation question data collected january february survey distributed via personal email invitation selection prac titioners included industrial expert purpose discarded research insti tutions participate european project related certication selfassessment also extracted industrialrelated practitioner conference symposium workshop related safety assurance total obtained valid response received initial invitation letterand received reminder email subject characteristic data analysis valid answer obtained practitioner mostly working con sultatory branch see experience demonstrating process compliance checking country see predominantly europe practitioner experience safetyrelated domain see standard see automotive represented major interest practitioner show higher level expertise see fin process compliance checking get compliance certication improveprocesses see analysis survey adjusted infor mation provided others option survey validity four type validity survey instrument recalled sect addressed follows avoid face validity perform careful review survey instrument several stage expert eld safety certication content validity assured careful literature review topic validating well expert regarding criterion validity assure practitioner background related type expertise httpsafetyaddalotse personal opinion survey process compliance checking role country domain standard company type expertise checking reason demographic result looking making careful selection process reducing construct validity allow practitioner include others option thus threat providing incomplete list option minimized additionally toavoid evaluation apprehension guaranteed condentiality anonymity response survey result section present result survey answering research question presented sect current practice figure show process plan recalled introductory part provided alternative questionnaire vertical axis percentage plan type representation creation information regarding process castellanos ardila gallina respondent selected type horizontal axis figure show practitioner performed compliance checking mostly verication andvalidation conguration management safety management development risk management modication procedure plan remaining plan listed le considered part practitioner compliance checking duty inthe others option practitioner mentioned software quality assurance safety assessment documentation cybersecurity plan current practice indicate process mostly represented text graphical representation also relevant see moreover process plan reuse common practice see regarding checklist preparation found three alternative given questionnaire almost equally used see practice com pliance checking done dierent way commonly practitioner take every requirement check information provided process specication see practitioner also base compliance assessment practice point compliance assessmentof strength weakness ndings common practitioner software tool performing compliance management task see rational door microsoft suite word excel project opencertverication studio engineering studio stage modeling process tool mentioned practitioner survey preparation checking mechanism information regarding compliance checking challenge figure present set challenge could appear process compli ance checking ask respondent rate important unimportant result show one challenge consideredvery important practitioner common miss requirement important challenge check processbased compliance requires many people involved check compliance process requires many inter action check processbased compliance requires many hour work isnt easy determine kind information provided asa personal opinion survey process compliance checking challenge process compliance checking evidence process perspective practitioner considered challenge moderately important practitioner also option list challenge answer sometimes access evidence sometimes safety assessor could dierent interpretation andit dicult check user acceptance dened process automatic process compliance checking part survey gathered data regarding user acceptance level method facilitating automated process compliance checking recalled sect initial evaluation performed fcl logic used formalize requirement prescribed standard practitioner somewhatagree formalization standard requirement could facilitated fcl since provides compliance concept safety compliance pattern instantiate see practitioner also somewhat agree fcl ability formalize requirement fcl castellanos ardila gallina ability represent process compliance information used support creation tailoring rule however practitioner neutral whether analysis required formalize process requirement could help understand intention regarding ability method represent process compliance information see found majority practitioner somewhat agree statement regarding provision graphical representation particular graphical representation compliance information wellas process plan facilitate understanding documentation similarly majority practitioner somewhat agree aspect also would facilitate compliance management focused ability method perform automated compli ance checking see gure depicts ability perform automated compliance checking seen majority practitioner favorable particular practitioner somewhat agree iterative application auto mated compliance checking help reach process plan compliantstates moreover majority practitioner strongly agree modify ing compliant process plan dene new process reduces work need done finally traceability could facilitated hierarchically ability perform automated compliance checkinga personal opinion survey process compliance checking organized knowledgebased compliance artifact organization help understand source compliance problem figure show result regarding perceived usability aspect method practitioner strongly agree strongly disagree questionnaire option however two statement practitionerssomewhat agree easy trace uncompliant situation graphically model process element perceived usability aspect method intention usefinally one question asked practitioner intention method depicts practitioner indicated would method facilitating automated compliance checking made available contrast practitioner know would discussion section based upon result survey discus ndings current practice given characteristic subject presented sect consider sample representative european safety critical context kind population process compliance checking castellanos ardila gallina way towards safety certicate also mechanism pro ce improvement see current practice include checking variety process plan see additional plan type respect one described introductory part considered necessary safety critical context software quality assurance plan safety assessment plandocumentation plan cybersecurity plan see sect thus seems compliance management process perspective growing area practitioner also create process plan mostly reusing previous process ortheir element see aspect indicates support reusability signicant process compliance management also could see dierent way create checklist see interesting see time practitioner receive checklist organization based organization experience domain transcribe actual requirement provided standard direct checklist case additional intellectual work included preparation checklist provision general widely accepted checklist could beuseful minimizing initial work finally practitioner software tool perform compliance checking support activity see figc thus expected introduction sophisticated software tool would generate extreme distortion daily job however would good revise way introduce smoothly challenge practitioner faced several challenge performing compliance checking presented sect general practitioner con sider compliance checking pronetoerror possible miss requirement moreover consider easy determine kind information provided evidence access toevidence dierent possible interpretation provided assessor addition practitioner consider compliance checking time consuming since requires many hour work several iteration finallymany people organization needed making also resourceconsuming thus need solution provide condence eciency process compliance checking automated compliance checking user acceptance major tech nological endeavor general presented sect advantage regarding automated process compliance checking particular depicted good degree acceptance characteristic provided fcl formal approach used requirement representation however hesitation regarding usage expected formal method particular practitioner see analysis required formalize process requirement would help understand intention reason necessary explain formalization part method providing guidance example presented ability represent process compliance information graphically ability automatically check compliance also good degree acceptance thus method high acceptability potential graphical represena personal opinion survey process compliance checking tations considered strongest advantage finally presented two aspect regarding method considered easy graphicallyrepresent process model trace uncompliant situation however need provide mechanism improving tool usability term compliance information representation appears easy practitionersin addition need improve representation checking result facil itating aspect provide specic graphical representation compliance artifact backpropagating result regorous intoepf composer present suitable user interface provides detailed explanation finally practitioner show willingness method could helpful evolving current manual practice automatedpractices via compliance checking related work nair performed indepth interview safetyrelated practitioner show importance checklist safety assessment personal opinion survey applied expert study safety evidence managementpractices survey also analyzed process plan analyzed found additional processrelated plan required safety assessment author present result interview practitioner regarding change impact analysis essential safety assessment vara surveyed safety evidence particularly circumstance created tool support used challenge faced contrast work previously mentioned focus investigate currently used method challenging aspect process compliance checking well asthe practitioner interest novel method facilitating automation task work conducted diebold scherr report industrial practice regarding software process description particular survey showsthat company dierent process representation graphical tablebased structured text notation also show formal model advantage highly desirable practitioner study diers also include aspect regarding formal description process compliance checking conclusion future work paper presented result personal opinion survey con ducted among practitioner participate process compliance checking inthe safetycritical context practitioner indicated mostly rep resent process plan standard requirement using softwarebased tool thus softwarebased compliance checking aid new howeverpractitioners consider process compliance checking pronetoerror missing requirement common problem process compliance checking also requires many hour work several people finally practitioner show castellanos ardila gallina favorable position regarding automated process compliance checking based spem like artifact also indicated usability aspect regarding theformalization requirement need revisit improve future work include empirical research interview observation see instance practitioner carry compliance checking real setting addition usability aspect revisited order provide guidance improve representation compliance artifact checking result finally tool support concretized tofacilitate evaluation term eciency industrial case study reference bertram likert scale meaning life cpsc topic report httppoincarematfbgacrs kristinatopicdanelikertpdf borg vara wnuk practitioner perspective change impact analysis safetycritical software preliminary analysis skavhaug guio chet schoitsch bitsch ed safecomp lncs springer cham castellanos ardila gallina formal contract logic based pattern facil itating compliance checking iso workshop technology regulatory compliance castellanos ardila gallina muram enabling compliance checking safety standard spem process model euromicro conference software engineering advanced application castellanos ardila gallina muram transforming spem compatible process model model checkable compliance stamelosi oconnor rout dorling ed spice springer cham castellanos ardila gallina governatori lesson learned formal izing iso compliance checking workshop technology regulatory compliance davis technology acceptance model empirically testing new enduser information system theory result massachusetts institute technology vara borg wnuk moonen industrial survey safety evidence change impact analysis practice ieee trans softw eng diebold scherr software process model description practi tioners need softw evol process governatori representing business contract ruleml int coop inf syst javed gallina get epf composer back future trip galileo photon year eclipsecon kitchenham peeger personal opinion survey shull singer sjberg dik ed guide advanced empirical software engineering springer london nair vara sabetzadeh briand extended systematic lit erature review provision evidence safety certication inf softw technol personal opinion survey process compliance checking nair vara sabetzadeh falessi evidence management compliance critical system safety standard survey state prac tice inf softw technol nair kelly jrgensen report stateofthepractice safety evidence assessment technical report systematic literature review devops model monika gasparaite kristina naudziunaite saulius ragaisisb institute computer science vilnius university vilnius lithuania monikagasparaitegmailcom krnaudziunaitegmailcom sauliusragaisismifvult abstract devops dened set practice enables development operation team collaborate order produce reliable highquality product even though devops still new phenomenon devops practice canbe successfully applied numerous company however remains unclear devops model currently exist paper availability devops model analyzed mean systematic literature review paper devopsmodels found paper selected relevant keywords systematic literature review devops maturity model devops process area introduction currently agile one popular widely used methodology due ability manage project everchanging requirement however agile practice simplify communication stakeholder especially development team customer communication operation team often ignored result company adopting devops practice allowing bridge gap development operation practice could adaptedin company still difcult ass process improvement acknowledged devops maturity model goal model ass current maturity level identify measure process improvement coursethere wellknown widely used general process assessment model cmmi however existing study indicate model suitable assessment devops process therefore becomes important determine theexisting variety devops model systematic literature review conducted order achieve goal related work research methodology systematic literature review describing devops model found howevera study found overview several devops maturity model compare described devops model found systematic literature review well addition exist literature review springer nature ed qua tic systematic literature review devops model analyze characteristic denition devops small number existing research show situation devops model must investigated study carried following kitchenham charter guideline performing systematic literature review software engineering specically developed eld software engineering guideline wellknown widely used instance figure present adapted method performing systematic literature review step method examined systematic literature review process planning research question denition research question important part planning systematic literature review research step rely literature search ltering analysis performed way research question could answered reason question need clear specic order achieve goal study following research question dened devops model exist process area devops emphasized model found devops model suitable practical comparison devops model exist comparison performed comparison different model reveals valuable information consequently question related comparison devops model included well gasparaite data source literature search performed six database search engine ieee xplore digital library acm digital library google scholar science direct springer link google according author guideline data source taken consideration performing systematic literature review software engineering google search engine also included list data source author mentioned important many data source possible poten tially important study important mention page areanalyzed google page likely contain important popular study data source search result examined inclusion exclusion criterion order select relevant study answering dened research question inclusion exclusion criterion established criterion presented table inclusion exclusion criterion criterion name inclusion criterion exclusion criterion year paper published since paper published language english nonenglish availability full text available full text unavailable content devops model provided devops model provided dened criterion selected following reason concept devops ofcially mentioned devopsdays conference accordingly decided exclude study older english language selected due common scientic environment source partially available included source suitable analysis paper describe devops model suitable since goal review relevant devops model important note study provides devops model developed author excluded analysis bysystematic literature review devops model content criterion aim discover primary study also possible author present devops model several study forexample nal master thesis scientic paper based case largest recent study selected study treated duplicate quality criterion addition inclusion exclusion criterion quality criterion used ass quality study selected according inclusion criterion following quality criterion dened devops model contain nongraphical content devops model based scientic paper devops model referred scientic paper element devops model justied quality criterion selected due several reason one goal review select detailed devops model therefore paper without textual explanation appropriate paper refers scientic paper likely relevant suitable investigation go model referred paper validity model component process area requirement maturity level increase probability nonbias question two possible answer positive answer rated negative answer rated thus study rated scale paper score considered suitable investigation search erms following search string selected adjusted address dened research question devops maturity model orcapability model orprocess reference model orprocess model orprocess assessment model case search string customized suit specic require ments digital database example database support logical operator removed several search term applied conducting review study selection multistage process following step taken performing initial search removing duplicate study gasparaite manually performing search reference study found initial search aim study provide devops model filtering study considering inclusionexclusion criterion study meet least one inclusion criterion criterion longer checked study excluded inclusionexclusion criterion checked orderpresented table result conducted search summarized summarized search result mendeley used organize analyze study helped group paper data source identify duplicate table provides detailed result selected study grouped data source table show many study ltered according inclusionexclusion criterion total study found excluding duplicate total unique study obtained ltering study inclusionexclusion criterion found study suitable quality analysis study selected quality analysis found google scholar google search engine springerlink database found one study satisedinclusion criterion study excluded due content criterion absence devops model study met content criterion following reason described devops model developed author another model agile described word devops mentioned somewhere study word devops mentioned literature reference study related devops allsystematic literature review devops model search result data source total excluded criterion included studiesyear language availability content ieee xplore acm digital library google scholar science direct springerlink google total unique total unique table provides reference selected study table show search engine database least one study selected inclusion criterion following type study provided reference study describing devops model search engine selected study cited study unique study google scholar springerlink google study found search string met inclusion criterion study cited selected study met inclusion criterion unique study obtained selected cited study study found among cited one also found initial search greatly increase likelihood search string dened correctly two type cited study research paper article published internet research paper found using data source studiesin citation found cited online article found page google primary search gasparaite quality assessment study rated based quality criterion dened table present result quality assessment result quality assessment study graphical content presentedbased onscientic papersreferred scientic papersmodel component justiedfinal score according chosen selection rule paper score selected relevant paper presented table systematic literature review devops model paper selected quality criterion study author title type rico feijter rob van vliet erik jagroep sietse overbeek sjaak brinkkempertowards adoption devops software product organization maturity modelapproachtechnical report ineta bucena marite kirikova simplifying devops adoption processconference paper samer mohamed devops shisting sostware engineering strategyvalue basedperspectivejournal paper jeroen radstaak developing devops maturity model validated model toevaluate maturity devops organizationsmaster thesis model presented largest comprehensive model found nontraditional model focus area representation allows unlimited number maturity capability level well different evaluation interval focus area simplicity referred focus area model model describes sixteen focus area logically grouped three perspective culture communication product process quality foundation bucenakirikova model created guide small enterprise devops adoption process model based old swcmm approach maturity level model denes four enterprise area assigned maturity level model also nonassessment part enterprise area correspondingdevops practice proposed together recommended tool model element facilitate devops implementation mohamed model based current cmmi approach four dimension dened model assigned maturity level mohamed model provides detailed description maturity level dimension general concept maturity level provided radstaak model based cmmi also representation model continuous model primarily dedicated southeastasia region modeldenes capability level eighteen capability ass unclear author us term capability instead process area although author chosen continuous representation model call model maturity modelin general model provides lot devops idea incorrect term raise doubt quality model four model term focus area enterprise area dimension capa bility term process area used cmmi standard term process area used discus model detail model provided answering research question gasparaite answer research question devops model exist according dened inclusionexclusion cri teria paper found presented table model except model staged representation number maturitycapability level process area quite different devops model paper found inclusionexclusion criterion study representation maturitycapability level process area focus area staged staged continuous staged staged staged staged staged explicitly dened staged explicitly dened staged staged explicitly dened staged explicitly dened staged explicitly dened staged staged staged staged staged staged general characteristic staged explicitly dened staged staged explicitly dened staged explicitly dened process area devops emphasized model highlight process area examined relevant devops model satised quality criterion focus area bucenakirikova mohamed radstaak modelssystematic literature review devops model culture culture understood frequent communication collaboration team different discipline culture important aspect four model mohamedmodel denes communicationcollaboration process area bucenakirikova people culture process area focus area culture process area includes communication knowledge sharing trust respect team organization release alignment categoriesradstaak model two separate process area group one dedicated culture another communication collaboration although process area group separate model assume combine summarizing devopscharacteristics need mention culture process area group radstaak model includes team structure process improvement feedback cycle communication collaboration process area group includes communication coordination collaboration process area interestingly devops model dene culturerelated process area classic model cmmi automation four model emphasize importance automation automation desired system build testing deployment radstaak model also denes automation ofprocesses environment test staging production etc management generation documentation congurations delivery process measurement four model dene need collect metric radstaak model denes communication collaboration automation quality improvement performance metric bucenakirikova model provides metric related quality collaborationfocus area code quality production environment metric mohamed automation governance communication quality metric optimization four model emphasize optimization activity none model explicitly specify separate process area monitoring four model highlight monitoring bucenakirikova model denes core integrated monitoring focus area code quality culture collaboration development operation process incident root cause monitoring mohamed defect monitoringradstaak requirement incident quality resource software build monitoring release model except mohamed direct requirement software release focus area model explicitly specie process area testing three model focus testing focus area model specie testing type unit regression acceptance testing radstaak also refers testing technique systematic requirementsbased integrated testing bucenakirikovamodel outline testing type also provides possible testing tool cucumber selenium deployment focus area bucenakirikova radstaak model dene deployment related action model represent one important devops activity continuous deployment quality quality characteristic dened model mohamed model explicitly specie quality process area radstaak indicates quality assurance overall gasparaite process focus area model give biggest attention quality comparison model model includes activity software code review pairprogramming automatic code quality monitoring process area denes main characteristic overall process three model highlight area bucenakirikova model characterizes overall processbut also individual process software delivery development testing project management deployment process focus area model group separate process area named product process quality radstaak model aprocess improvement process area infrastructure infrastructure includes management environment dened focus area bucenakirikova radstaak model conguration management process area highlighted focus area bucena kirikova radstaak model incident management process area highlighted focus area bucena kirikova radstaak model documentation radstaak model emphasizes importance accessible uptodate documentation documentation also mentioned focus area bucenakirikova model planning planning activity dened bucenakirikova model governance governance related control various process area describing well work together dened mohamed model found devops model suitable practical suitability practi cal investigated devops model selected quality criterion focus area bucenakirikova mohamed radstaak model three necessary characteristic model applied practice must considered complete ness model clarity model requirement clarity assessmentmethod focus area model requirement formulated clear precise manner example possible requirement implementation given help better understand presented requirement clearly dened requirement matu rity level reached maturity level clear model validated apply ing different case data assessment collected setting self assessment question detail interpreting answer given therefore assessment process clear enough although doubt theassessment could done person author highly likely model successfully applied practice bucenakirikova model large detailed focus area model also touch many aspect software development programming project management although many model requirement clearly formulated theresystematic literature review devops model unpopular term make model bit difcult understand also incorrect requirement requirement second maturity level ofprocess area denes scrum development whereas requirement higher maturity level agile development requirement arranged illogical order requirement fth maturity level process area developmentprocess integrated six sigma whereas requirement delivery process model explicitly state requirement must assessed requirement must fully implemented howeverthe proposed maturity model tested national branch international company internal development team therefore argued model successfully applied company model author thepaper alone impossible put model practice although requirement mohamed model formulated explicitly requirement lack clarity clear requirement enforced different interpretation requirement possible assessment process mentioned reason model applied practice guideline foradopting devops company requirement radstaak model appear sufciently understood title requirement small amount requirement explainedmore broadly therefore different interpretation requirement possible also section apply model company devops model validated applying different project however model explicitlystate requirement must assessed although validation model show model applicable practice source describing model provide step required full practical general argued focus area bucenakirikova model successfully applied practice anyone author model would document adopted assessment method academic publication comparison devops model exist comparison performed conducted systematic literature review indicates mal comparison devops model made far comparison supercial level presented discussing process area similarity example limitation although systematic literature review conducted disciplined manner poten tial limitation must acknowledged potential risk missing relevant liter ature since paper written language english excluded howeverwe reasonable ground believe risk rather low english language popular language academic eld another possible limitation selection bias reduce threat review conducted validated two independentresearchers another area concern paper cover publication published end result result research quickly become outdated since number new devops model increasing constantly gasparaite conclusion paper present systematic literature review devops maturitycapability mod el found six popular database search engine systematic review performed two author independently may october found devops model considered suitable investigation according quality assessment devops process area highlighted model wereculture automation measurement optimization monitoring release although model complete enough requirement sufciently clear none model author documented adopted assessment method academic publication make unclear fully model practice therefore believe practical usability model possible would problem atic person author finally conducted systematic literature reviewindicated formal devops model comparison made systematic review result serve knowledge base devops maturitycapability mod el existing academic literature future research would benet comparison ofmodels order whether understanding devops implementation similar model reference rong zhang shao cmmi guided process improvement devops project exploratory case study proceeding international conference software system process acm zarour alhammad alenezi alsarayrah research devops maturity model ibm developer httpsdeveloperibmcomarticlesdadoptionpaths accessed oct mohamed devops shifting software engineering strategy valuebased perspective int comput eng menzel macaulay httpswwwcapgeminicomdedewpcontentuploadssites devopsthefutureofapplicationlifecycleautomationpdf accessed oct inbar devops opsdev maturity model work httph wwwhpcomtbusinessservicemanagementbacdevopsandopsdevhowmaturitymodelworksbap accessed oct bucena kirikova simplifying devops adoption process joint proceeding bir prebir forum workshop doctoral consortium colocated withth international conference perspective business informatics research bir copenhagen denmark ecode httpswwwecodecomhubfsdocumentsecodeenglishdevopsguidepdf hslangen accessed oct feijter van vliet jagroep overbeek brinkkemper towards adoption devops software product organization maturity model approach technical reportutrecht university erich amrit daneva report devops literature review httpswwwresearchg atenetpublicationreportdevopsliteraturereview jabbari bin ali petersen tanveer devops systematic mapping study denitions practice proceeding scientic workshop proceeding acm systematic literature review devops model snchezgordn colomopalacios characterizing devops culture systematic literature review stamelos oconnor rout dorling ed spice springer cham kitchenham charter guideline performing systematic literature review software engineering keele university durham university joint report caldern trinidad ruiz oconnor teaching software process standard review serious game approach stamelos oconnor rout dorling ed spice springer cham http doiorg fernndez del carpio angarita technique based data science software process systematic literature review stamelos oconnor rout dorlinga ed spice springer cham trinidad caldern ruiz systematic literature review gamication monitoring phase spi standard contribute gamication maturity stamelos oconnor rout dorling ed spice springer cham kaplan dominance english language science effect language language community abdelkebir maleh belaissaoui agile framework management orga nizations case study based devops proceeding international conference computing wireless communication system acm larache radstaak developing devops maturity model validated model evaluate maturity devops organization master thesis university twente zage zage component modern quality approach software development final report ball state university hemon lyonnet rowe fitzgerald conceptualizing transition agile devops maturity model smarter function elbanna dwivedi bunker wastell ed tdit iaict springer cham bluemeric httpblogbluemericcomdevopsmaturitymodel accessed oct cloudbees assessing devops maturity using quadrant model white paper micro focus httpswwwmicrofocuscommediadatasheetdevopssolutiondiscovery workshopdspdf accessed oct jeremiah httpsgitlabcomgitlabcomwwwgitlabcomissues accessed oct kavis httpswwwforbescomsitesmikekavisthefourstagesofdevops maturitybacaf accessed oct kumar httpsvitalfluxcomdevopsmaturitymodeltelstradevopsimplementation accessed oct mendes httpsatlassianblogwpenginecomwpcontentuploadsxmatlassiandev opssurveywebfinalpdf accessed oct park httpssolineacomblogsolineadevopsmaturitymodel accessed oct plutora httpswwwplutoracomdevopsatscalematuritylevel accessed oct poelwijk httpsblogleasewebcommaturitymodeldevopsteams accessed oct schneider security devopsstaying secure agile project asp appsec europe techtown httptechtowntrainingcomresourcestoolsresourcesdevopsmaturitymodel quiz accessed oct gasparaite erstraete httpscloudsourceblogcom accessed oct koomen pol improvement test process using tpi httpsitqchpdf tpitpiukpdf accessed apr sepplassila assessment devops maturity software project master thesis university turku measuring maturity bizdevops eduardo sanjurjo oscar pedreirab felix garca mario piattini universidade corua centro investigacin citic elvia corua spain eduardosanjurjoroyooscarpedreiraudces information technology system institute itsi castillala mancha paseo ciudad real spain felixgarciamariopiattiniuclmes abstract devops emerged effective approach interaction development operation approach extended interaction business function generating term bizdevops although many proposal tool support bizdevops technical viewpoint signicant progress management aspect evaluation ofpractices process involved area article propose maturity model bizdevops based relevant international standard apply model software company demonstrates applicability keywords maturity model devops bizdevops introduction agility exibility operation necessity company quickly meet customer demand market condition competitive pressure legal change thisimplies among aspect shortening time request release software update full request reason software development unit operation unit must effectively integrated however many companiesthis integration weak devops paradigm based lean agile principle assumes software development system operation must continuously collabo rate deliver software meet organization requirement quickly term continuous software engineering closely linked devops assumes software development process continuously release new version softwarethat deployed production different work also propose integrating business function need soft ware development process reason many organization consider software development integral part vision strategy however addressing technical aspect may insufcient result lack alignment people process business technology ensure business priority maintainedthroughout devops therefore business team must integrated devops team bizdevops dened integration expert domain devops team article term bizdevops includesand expands term devops springer nature ed sanjurjo despite importance implementing bizdevops company stan dard method process standard practice guide implementation work address development maturity reference model bizde vops guide implementation bizdevops based compliance good practice currently included standard sector rest paper structured follows sect summarizes related work sect present mmbdo maturity model bizdevops sect present case study application mmbdo software development company finallysect present conclusion line future work related work faced traditional approach area development system work separately collaborate inefcient interaction mechanism devops phi losophy assumes continuous natural integration two area theobjective devops delivery deployment new software release automatic direct case immediate well ensuring intermediate version software stable possible currently technical aspect devops approach may popu lar strong focus concept continuous integration testing continuous analysis software automatic application deployment however devops must include management element especially large complex organization fitzger ald stol coined term continuous software engineering extends concept continuous integration entire software life cycle business aspect structuring three phase strategy business planning development opera tions thus within strategy planning category contemplate activity suchas planning continuous budgeting development phase add activity continuous compliance continuous security continuous evolution operation phase activity realtime continuous monitoring process reference model typically guide implementation management sys tems continuous improvement software engineering process reference model includes set good practice grouped process area context activityor set activity general set good practice dened form process requirement expected result suggestion achieve requirement result reference process model used conjunction assessment mod el establish assessment certication framework within framework process organization assessed compliance also assessmentsmay step process improvement year many process model emerged context information communication technology ict software development used processesare included cmmi iso mmis present set good practice different process area software development characteristic model assessment process requirement structured capability level process area organization maturity model depending level capability organization reach different process area eld informa tion security family iso standard proposes set process themeasuring maturity bizdevops management information security many control associated activity iso itil play similar role eld quality management ict service although model widespread industry process model proposed academic professional source last year addressing activity area specic context example competisoftproject dened reference process model software development smes process model used organization perform process assessment set basis compliance certication process improvement example detail aenor spanish standardization certication body us family iso standard assessment software development process somehow main practice devops included tradition process model example software testing appears cmmi iso although process model refer requirement area met specic way paper present version specic maturity model bizdevops mmbdo basis complete framework evaluation capability level maturity bizdevops practice mmbdois based mmis maturity model described mmbdo includes pro ce included mmis adapts need bizdevops add new process specic bizdevops although standard iso mmiscan seen aligned traditional software development approach predictive waterfall devops mainly agile approach consider correct base mmbdo mmis based iso since iso indicates version document prescribe particular life cycle model instead denes set process termed life cycle process used denition system life cycle life cycle model incorporate agile technique method evaluation devops process already addressed example mohamed proposes maturity model based level coincide cmmi initial managed dened quantitatively managed optimizing proposal structured dimension communication automation gover nance quality management meanwhile sahid propose itsm agility maturity model based devops level proposed complete devops competency model currently proposed feitjer structured three perspective culture collaboration product process quality fundamental based competency model proposes capability model nine level one focus area framed dimensionsof competence model analysing existing reference process model ict relevant bibli ography observed proposal devops maturity mainly based theve level described cmmi approach based one several existing international standard neither devops bizdevops objective article result preliminary analysis carried systematicreview insight coverage level process consider relevant bizdevops literature sanjurjo maturity model bizdevops section present version maturity reference model bizde vops mmbdo model based widely recognized international stan dard considers business technical related process area specicallymmbdo considers following existing process model family isoiec standard evaluation process capabil ity organizational maturity proven reference term quality evaluation software development process isoiecieee standard software development lifecycle management family isoiec standard ict service management family isoiec standard information security management software engineering maturity model version mmis developed aenor version mmbdo dened based mmis processed derived best practice detected literature incorporated also incorporated corresponding maturity level new model process based expert judgment table show process comprised version mmbdo three column show process area process number mmis new included mmis process number mmbdo column labeled show maturity level last column show relation process mmis included mmis modied mmis new includedmmbdo us process area group iso guarantee conformity table also show model maintains process group agree ment organizational technical management technical iso guarantee conformity process adopted except transition continuous validation operation process project planning continuous monitoring contin uous business planning continuous integration continuous validation amodication extension process mmis project planning measurement business mission analysis integration validation respectively transition operation process adopted iso although appear inmmis therefore mmbdo eleven updated process additional regarding mmis model give specic coverage bizdevops mmbdo model consists twentyseven process twentyone included mmis model whichve updated plus six new process mmbdo model keep sixteen process unchanged level maturity mmis included maturity level new updated process table show description new updated process included model regarding source consideredmeasuring maturity bizdevops mmbdo bizdevops maturity reference process model process area mmis mmbdo process agreement acquisition supply organizational life cycle model management infrastructure management project portfolio management human resource management quality management knowledge management technical management project planning evaluation control project decision management risk management configuration management information management connuous monitoring quality assurance new connuous improvement technical connuous business planning definition stakeholder need requirementsx definition systemsoftware requirementsx architecture definition design definition system definition implementation connuous integra new connuous delivery new connuous deployment verification transion connuous valida operaon maintenance new connuous security secops retirement sanjurjo description mmbdo process process description project planning technical managementthe purpose project planning process produce andcoordinate effective workable plan source adopted extension project planning process isoiec standard continuous monitoringtechnical management historical boundary designtime runtimeresearch software engineering blurring context continuous execution cloud service runtime behaviour kind must monitored allow early detection servicequality problem performance degradation also compliance service level agreement sla source adopted extension measurement process isoiec standard continuous improvementtechnical management organization must incorporated process identifyareas improvement organization matures learnsfrom process adopted many business process improvement team work process improvement based observation lesson learned others allow team adoptthe process selfevaluate determine process improvement path regardless method used objective facilitate continuous improvementsource adopted continuous business planning technicalit holistic effort involves multiple stakeholder business team software development team plan dynamic open artefact evolve response change business environment therefore involve closerintegration planning execution source adopted extension business mission analysis process isoiec standard continuous integration technicala process generally automatic activation consisting interconnected step compiling code running unit acceptance test validating code coverage verifying compliancewith standard coding building deployment package source adopted extension integration process isoiec standard continuous delivery technicalcontinuous delivery practice continuously implementinggood software compilation automatically environment necessarily real userssource adopted continued measuring maturity bizdevops continued process description continuous deployment technicalcontinuous deployment involves continuous delivery thepractice ensuring software continuously ready launch implementation real customersource adopted transition technicalthe purpose transition process establish capacity asystem provide service specied requirement interested operating environment process move system orderly planned manner operational state sothat system functional operational compatible operational system source coming isoiec included mmis continuous validation technicalthe purpose process provide objective evidence thesystem used meet business mission objective stakeholder requirement achieving intended intendedoperational environment objective validating system system element able rely ability achieve intended mission underspecic operating condition validation ratied stakeholder process provides necessary information identied anomaly resolved appropriatetechnical process anomaly created source extension validation process isoiec standard operationtechnical purpose operation process system deliverits servicesthis process establishes requirement assigns personnel operate system monitor service system performance maintain service identify analyse operational anomaliesconcerning agreement stakeholder requirement organizational restriction source coming isoiec included mmis continuous security technicalcontinuous security involves transforming security evolving frombeing treated another nonfunctional requirement key concern phase development life cycle even afterdeployment backed smart lightweight approach identifying vulnerability security source adopted sanjurjo case study assessing maturity bizdevops section present case study application mmbdo ass bizdevops process real company applied casestudy method fol lowing guideline runeson template case study presented remaining section describes company carried case study interview procedure interview result lesson learned background case study carried software development consultancy company rest document refer swdevcompany swdevcompanyis spanish company provides wide range software product advanced service high added value swdevcompany offer client portfolio product along tailormade development balanced diversied way companyworks client different activity sector banking government industry telecommunication etc size country strength commercial offer swdevcompany based position one leading digital transformation company spain swdevcompany also add differential methodology expanded portfolio business solution delivery support model aimed generating impact exible organization based multidisciplinary team made specialist specic prole regarding devops process swdevcompany business unit dedicated implementing devops framework devops team composed four devops engineer exclusively dedicated devops project architect dif ferent project make devops framework project architect incharge implementing devops framework project design according approach presented current case study holistic individual case focused single case swdevcompany object studyis mmbdo maturity model presented previous section main purpose case study validate mmbdo information obtained application real environment feedback received theexperts participated application table show research question case study main research question mmbdo feasible model assessing maturity bizdevops process main research question detailed twomore specic question completeness process included mmbdo usefulness process improvement tool bizdevops environment field procedure data collection eld procedure directly determined new process identied mmbdo swdevcompany devops team interviewed according research question data collected interview head devops team stored document result obtained reected documentmeasuring maturity bizdevops research question case study research question mrq mmbdo feasible assessing maturity organization regarding bizdevops process srq mmdbo adequate regarding process process shouldbe includedexcluded infrom mmdbo srq mmdbo adequate regarding usefulness continuous improvement bizdevops process intervention subsection summarizes relevant information extracted application mmbdo swdevcompany interview devops team swdevcompany concerning adequateness completeness mmbdos process usefulness process improvement bizdevops context carryout evaluation took account desired result task work product process compared result task work product currently carried company swdevcompany important highlight focused evaluation new process updated process mmis model interviewer team consisted two consultant yearsof experience implementation evaluation software project management system information security based international standard application mmbdo regarding application mmbdo swdevcompany could conclude swdevcompany currently fully complies process project planning continuous monitoring using prometheus tool continuous integration continuous delivery mmbdos process swdevcompany currently complies partially process mmbdo since yet implementing continuous improvement continuous deployment transition operation swdevcompany currently comply rest process mmbdo since time either yet implemented initial implementation step continuous business planning continuous valida tion continuous security secops specically transition processis dened company carried moment project devops eld necessary take control project managed another company transfer control project toanother company different area gathered specic information specic process implemented example devops team detailed activity carried concerning process continuous improvement frontend backend unit testing cover age static code analysis tool automatic review code bug different unit testing sanjurjo framework depending technology integration testing framework performance testing framework console errorswarnings code lint review interview carrying interview concluded devops team swdevcompanyconsidered application mmbdo feasible ass maturity organization according bizdevops process mmbdo provides framework evaluating current situation according desired situation provides roadmap get desired maturity level table show conclusion interview regarding case study question answer research question case study answer research question mrq devops team swdevcompany considered mmbdo feasible ass organization maturity regarding bizdevops practice mmbdo allows evaluating current situation asis according desired scenario tobeprovides roadmap improvement srq devops team considered process included mmbdo adequate toassess bizdevops process regarding specic process indicated thesoftware quality verication activity could highlighted activity currently included process continuous improvement continuous integration concluded due importance activity could process themodel hand concluded scope process operation may revised redene several activity distributed among otherprocesses model srq devops team indicated dened result task work productsfor process mmbdo allows company compare current objective situation improve bizdevops process also considered model used numerous company different size sector company may alsobenet best practice company long incorporated model analysis result lesson learned case study case study conrms adequateness process indicated model swdevcompany currently implement four process model implementing another four process rest process model yet implemented initial implementation process however future work include revising software quality verication activity currently included process verify feasibility activity process model also study scope process operation deepermeasuring maturity bizdevops several activity distributed among several process model case study also validates feasibility applying mmbdo measure maturity organization regarding bizdevops process way model serve company ass current situation regarding bizdevopsprocesses help improve situation achieve next level maturity conclusion paper present mmbdo maturity assessment model bizdevops based internationally recognized ict process standard dened model based result systematic review taken basis process maturitymodel development mmis completing eleven additional modied process specic bizdevops also presented result case study spanish software development consultancy company allowed validate adequateness maturity model mmbdo real scenario case study conrms validity model process although also revealed information may guide future work torene process model future work includes completing model dening capability maturity level process included mmbdo completing validation model wider case study interviewing manager employee area involved bizdevops activity different organization different size acknowledgement work supported bizdevopsglobal rtib rtibc mineco feder centros singulares investigacin galicia edg grupo referencia competitiva edc conectapeme gema ina xunta galicia feder reference waller ehmke hasselbring including performance benchmark continuous integration enable devops acm softw eng note wettinger breitenbucher leymann standardsbased devops automation inte gration using tosca proceeding international conference utility cloudcomputing ucc ieee press bosch continuous software engineering springer dordrecht fitzgerald stol continuous software engineering roadmap agenda syst softw wiedemann wiesche gewald krcmar implementing planning process within devops team achieve continuous innovation proceeding hawaii international conference system science sanjurjo erich amrit daneva mapping study cooperation information system development operation jedlitschka kuvaja kuhrmann mnnist mnch raatikainen ed productfocused software process improvement profes lncs springer cham lwakatare kuvaja oivo exploratory study devops extending dimen sion devops practice proceeding international conference software engineering advance icsea chrissis konrad shrum cmmi development guideline process integration product improvement addisonwesley boston isoiec isoiec system software engineering software life cycle process garzs pino piattini fernndez maturity model spanish software industry based iso standard comput stand interface iso iso isoiec information security management isoiec isoiec information technology service management part service management system requirement oktaba garca piattini ruiz pino alquuicira software process improvement competisoft project ieee comput isoiec isoiec information technology process assessment concept terminology mohamed devops shifting software engineering strategy value based perspective iosr comput eng sahid maleh belaissaoui agile framework management orga nizations case study based devops proceeding international conference computing wireless communication system acm feijter vliet jagroep overbeek brinkkemper towards adoption devops software product organization maturity model approach runeson host rainer regnell case study research software engineering guideline example wiley hoboken brereton kitchenham budgen using protocol template case study plan ning proceeding international conference evaluation assessment softwareengineering ease bcs yin collecting case study evidence sage publication thousand oak process compliance recertication eciency enabled epfc bvrt case study barbara gallinab aleksand pulla antonela bregu julieth patricia castellanos ardila idt alardalen university asteras sweden barbaragallinajuliethcastellanos mdhse asaabu studentmdhse abstract today ever increasing demand process recerti cation enabling recertication eciency paramount within amass project delivered toolchain called paper epfcbvrt obtained integration epf composer epfc bvr tool bvrt toolchain support process engineer engineering compliance demonstration activity well variability change management compliance recertication eciency enabled toolchain evaluated change triggered dierent jurisdiction impose release new standard thus gap case study paper focus medi cal domain precisely evolution iso process riskanalysis evaluation medical device based set eciency related criterion evaluate recertication eciency enabled change management strategy implemented toolchain keywords recertication process compliance iso introduction today ever increasing demand process recertication enabling certication eciency paramount amass project delivered defacto platform recertication platform includes tool chain called epfc bvrt paper obtained integrating epf com poser epfc bvr tool bvrt epfc bvrt support process engineer engineering compliance demonstration activity well variability change management compliance recertication eciency toolchain illustrated partially demonstrated spacedomain taking consideration recertication need case dierent type change criticality level concern safetysecurity however partially funded vinnova via ecsel grant agreement amass project ccirclecopyrtspringer nature ed gallina toolchain evaluated medical domain never handling recertication eort needed case product crossing jurisdiction andthus comply dierent version standard known medical device governed broad range national international regu lations medical equipment certication standard regulatory requirement complex vary region make challenging gain medical approval product within specic targeted market evident example represented requirement included within iso andits evolution iso iso regarding process risk analysis evaluation published iso internation ally endorsed iso released european market version harmonised set directive eec eec consequence new release recer tication mandatory manufacturer medical device targeting inter national market struggle recongure process provide new evidence get approval dierent regulatory body within dierentjurisdictions within outside iso brought change making internationally endorsed given challenging regulatory context medical domain given concrete need solution paperwe present reduced meaningful portion case study focused iso compliant process risk analysis evaluation interested reader may refer complete case study execution case study epfc bvrt engineer compliant process well man age variability change relation dierent version iso based set eciencyrelated criterion measure recerticationeciency enabled epfc bvrt analyse result rest paper organised follows sect give overview epfc bvrt ecient process compliance management sect recall fundamental information regarding iso evolution sect present case study design execution sect analysis case study sect discus related work finally sect draw conclusion sketch future work epfc bvrt epfc bvrt toolchain obtained integrating epf composer epfc recently brought back future bvr tool bvrt epfc bvrt support ecient compliance management via reuse enabled managing commonality variability implementingsafetyoriented process line engineering sople one hand epfc eclipse process framework composer implement metamodel cover major part spem software system process engineering metamodel used model base process related library essential element described table rolerepresents unit seehttpswwweclipseorgepf process compliance recertication eciency enabled work dened task denition artifact deliverable identify type work product resulting task guideline checklist practice repre sent supplementary freeform documentation table subset icon used spem epf composer role task denition deliverable artifact practice checklist guidance hand bvrt base variability resolution tool imple ments bvr metamodel used orthogonally model vspec model via vspec editor resolve resolution model via resolution editor variabil ity abstract level new conguration solved binding abstract representation concrete representation compliant theepf composer implemented metamodel realised realization model via realization editor precisely vspec permit user model variability feature diagramlike fashion embracing best practice productline modelling thus inheriting eciency product line engineering best practice table vspec element symbol choice constraint groupas table recall choice represents yesno decision constraint given bcl basic constraint language specie restriction permissible resolution model group dictate number choice resolution refers xorin one child feature must selected sake clarity point table recall bvr modelling element used paper resolution permit user make choice variation point desired vari ant selected resolution also includes possibility validate thechoices erroneous choice violating crossvariation point constraint detected realization permit user bind abstract resolution con crete element base model iso evolution iso standard developed specically medical device itdeals process managing risk primarily patient also theoperator person equipment environment standard specie process manufacturer medical device identify hazard associated medical device estimate evaluate risksassociated hazard control risk monitor eectiveness control throughout life cycle medical device content iso evolving year dierent version publishedincorporating consensusbased modications renements paper seehttpsgithubcomsintefbvr gallina limit attention iso iso iso specically portion process deal risk analysis evaluation risk managementfigure depicts portion process considered paper right side offigtwo main dierences highlighted risk acceptability principle known rap stand principle followedfor reducing risk related medical device treatment negligible risk dier ences emerge conducting comparativestudy dierent version dier ences shown detail table alarp stand low reasonably practicable afap stand far possible implies risk reduced without room economic consideration table risk identication evaluation dierences among iso version standard treatment negligible risksrisk acceptabilityprinciple rap iso discard negligible risk alarp demand risk reduction iso take risk including negligibleafap requires riskreduction iso take risk including negligiblealarpafapwithout aecting benetrisk ratio reader may refer complete analysis iso evolution focused risk analysis evaluation case study design execution section present design execution reduced meaningful portion case study designed according guideline given case study design objective selection objective case study evaluation crossjurisdictioncross version recertication eciency enabled change management strat egy implemented epfc bvrt goal mind expect answer following question crossjurisdictioncrossversion recertication enabled epfc bvrt ecient evaluate recertication eciency relationship result achieved recertication artefactsprocess compliance recertication eciency enabled provision resource used eort term modelling time done previous work adopt reinterpret context process engineering set metric see table table show idenes set process component process intersection common equal size commonality soc soc input measure extent reusability common component specic process table reuse metric size commonality soc productrelated reusability prri socnintersectiontext iicp soc case study select evolution iso process risk analysis risk evaluation recalled sect case study execution result model process epfc vspec resolution bvrt figure show modelling process element epfc related three version standard iso recalled sect space reason paper focus guidance part epfc plugin highlighted ingreen red square highlight applicable rap treatment negligible risk standard recalled table epfc plugins targeting iso iso iso gallina model variability negligible risk bvr vspec see particular discard negligible risksand take negligible risk account dened vspec optionalmultiplicity implying one shall applied according constraint applicable standard similar way model variability associated rap see complete vspec embracing process element considered interested reader may refer variability modelled resolu tion performed example process model must comply iso set true option take negligible risk account risk analysis see set true option afap risk evaluation see bvr vspec treatment negligible risk bvr vspec rap resolution model guidance part three standard see element common thus size commonality soc portion total guidance element required iso iso iso thus productrelated reusability prri iso iso iso portion standard interested reader may refer complete measurement focus guidance partprocess compliance recertication eciency enabled case study analysis section analyse result answer question presented sect computation soc prri show positive gain term reusability thus answer change management strategy implemented epfc bvrt ecient applied handling change related crossjurisdictioncross version context iso consequence suggests provision new evidence needed recerticationcan obtained reusing signicant amount preexisting evidence term modelling artefact thus also recertication ecient related work literature solution proposed increase eciency via reuse engineeringassuring safetycritical system process andcase study conducted show benet context opencoss project instance systematic approach reusing safety certication artefact applied crossdomain railway avionics casestudy resulting reuse contrast case study focus medical domain context dierent jurisdiction best knowledge medical domain work represents novelty perhaps seminal evidence trigger attention potential eciency increase could gained systematising managing variability existswithin broad range national international regulation medical equipment certication standard conclusion future work paper conducted case studybased evaluation process com pliance recertication eciency enabled epfc bvrt precisely iso process risk identication evaluation medical device focus epfc bvrt used model process evidence needed cer tication systematise reuse manage change recongure successfullyrecertify based set criterion evaluated eciency change management strategy implemented epfc bvrt result enabled draw conclusion recertication eciency specically case studyshowed via epfc bvrt ecient reconguration ecient pro vision artefact needed recertication process possible thus instance manufacturer targeting international market eciently recongure validate process satisfy requirement withinoutside evaluation could represent starting point adoption tool chain epfc bvrt medical domain future aim open platform evolutionary certication safetycritical system http wwwopencossprojecteu gallina conducting larger evaluation considering entire iso well related standard software process improvement security addition cooperation industrial partner aim evaluating epfc bvrt realistic industrial setting process typically derived following standard requirement book reference international organization standardization iso medical device application risk management medical device iso corrected version july council european community council directive eec june concerning medical device june council european union council directive eec june approximation law member state relating active implantable medical device june gallina iyer towards quantitative evaluation reuse within safetyoriented process line larrucea santamaria oconnor messnarz ed eurospi springer cham httpsdoi org gallina sljivo jaradat towards safetyoriented process line enabling reuse safety critical system development certication annual ieee software engineering workshop httpsdoi orgsew gallina quantitative evaluation tailoring within spicecompliant security informed safetyoriented process line softw evol process eurospi special issue httpsdoiorgsmr haugen ard bvr better variability result amyot fonseca casas mussbacher ed sam lncs springer cham international organization standardization iso medical device application risk management medical device march international organization standardization iso medical device application risk management medical device december javed gallina safetyoriented process line engineering via seamless inte gration epf composer bvr tool international system andsoftware product line conference splc httpsdoi org javed gallina get epf composer back future trip galileo photon year eclipsecon toulouse france june omg software system process engineering metamodel specication version pulla bregu evaluating compliance recertication eciency enabled amass platform medical device master thesis alardalen university school innovation design engineering asteras sweden http mdhdivaportalorgsmashgetdivafulltextpdf ruiz juez espinoza vara larrucea reuse safety cer tication artefact across standard domain systematic approach reliab eng syst saf httpsdoiorgjressprocess compliance recertication eciency enabled runeson ost guideline conducting reporting case study research software engineering empir softw eng httpsdoi orgs european parliament council european union directive european parliament council october vitro diagnostic medical device october vara corredor lopez gallina amass tool plat form innovative solution assurance certication cyberphysical sys tems joint proceeding refsq workshop doctoral symposium live study track poster track colocated international conference requirement engineering foundation software quality refsq pisaitaly march ceur workshop proceeding vara parra ruiz gallina amass largescale european project improve assurance certication cyberphysical system infranch annist mart nezfern andez ed profes lncs springer cham software quality education trainingdesign secure coding challenge cybersecurity education industry tiago gasibab ulrike lechner maria pintoalbuquerque ala zouitni siemens munich germany tiagogasibasiemenscom universit der bundeswehr unchen munich germany ulrikelechnerunibwde instituto universit ario lisboa iscteiul istariul lisboa portugal mariaalbuquerqueiscteiulpt universit passau passau germany zouitnialaegmailcom abstract according recent survey software developer le half developer spot security hole result software product present lowsecurity quality expressed vulnerability exploited cybercriminals lack qual ity security particularly dangerous software contains vulnerability deployed critical infrastructure serious gamesand particular capturetheflag ctf event shown promis ing result improving secure coding awareness software developer industry challenge ctf event useful must adequately designed address target group paper present novel contribution investigating challenge type adequateto improve software developer ability write secure code indus trial context propose six challenge type usable industry context structure ctf challenge investigation alsopresents result include hint penalty cyber security challenge evaluated work survey secu rity expert result show traditional challenge typesseem adequate also reveal new class challenge based code entry interaction automated coach keywords education teaching training secure coding industry cybersecurity capturetheag game analysis game design cybersecurity challenge introduction improve quality isoxx software term security several standard iec iso mandate imple mentation secure software development lifecycle ssdlc additionally ccirclecopyrtspringer nature ed gasiba recognition importance secure code need develop secure product several company joined together formed safe code alliance promote security best practice automatic tool static application security testing sast used automate aid improving code quality tool scan code basis existing vulnerability must xed software developer however previous research show enough reliability tool still good enough automatically code done softwaredevelopers must also trained secure software development one method currently investigated showing promis ing result training method based serious game type capturetheflag ctf concept kind game originally developed pentesting community several game continually deployed around world nowadays university company even group individual however existing ctfs geared towards soft ware developer industry gasiba recently shown order raise awareness secure coding industry game design must address specic requirement target audience typically ctfs categorized follows attackonly attackand defend defend participant ctfs generally split two category red team attacker blue team defender attack onlyred team player try exploit several system gain access control inattackanddefend competition red team player attack system hardened protected blue team member finally defend ctfs player answer question cybersecurity point congure andharden system resilient simulated attack address need industry better adapt player gasiba proposed defensive ctf approach also outlined requirement design defensive challenge proper design challenge type based requirement especially important industrial setting shown experiment barela type challenge based comic seen inadequate ctfs industry therefore paper extend previous work addressing question type defensive challenge suitable software developer particular interested structure said challenge alsoon type challenge used ctflike competition raise awareness software developer industry work based survey administered interview expert security trainer industrythe main contribution work following design defensive challenge ctfs industry aim raising awareness secure coding secure coding guideline denition challenge structure industrial ctfs denition six dierent challenge type industrial ctfs insight dierent option include hint penalty indus trial ctfsdesign secure coding challenge education industry hope work used designer serious game quality engineer guideline design defensive challenge ctfs aimedat raising awareness secure coding software developer industry sect present previous work related research section dis cuss approach design defensive challenge result ourstudy presented sect section also present critical discussion obtained result present main contribution practical scenario possible game briey discus threat validity ndingsfinally sect summarizes work briey discus possible next step related work graziotin shown happy developer better coder produce higher quality code software davis show ctf player experience fun game play furthermore woody argue software vulnerability quality defect since fun happiness interrelated fact seen motivator capturethe flag ctfbase serious game raise awareness topic secure coding software developer industry order improve code quality mirkovic introduced classroom ctf exercise form cyber security education academia result show student partic ipated kind event enjoyed training shown increased interest attention focus towards cybersecurity topic additionally theirstudy gonzalez shown similar result state cybersecurity training serious game improves student education skill positive impact attracting student cybersecurity eld conclude kind training reduce shortage professional eld cybersecurity several additional study also show positive benet ctf student attention performance however using ctfs tool raise cybersecurity awareness come dierent obstacle gasiba elicit requirement designing ctf challenge geared towards software developer industry show thatthese ctf challenge focus defensive perspective chung also evaluated dierent aspect related ctfs concluded two important issue related ctfs challenge diculty level suitability targetaudience work interested designing highquality defensive ctf chal lenges software developer industry address topic secure coding guideline scg secure software development best practice sdbp however currently existing work focus academiawhere target group composed current future security expert pentesters furthermore existing study also focus oensive per spective address topic scg sdbp study isdriven need raise awareness secure coding lack design defensive ctf challenge geared towards software developer gasiba industry research method used work based semistructured interview survey best practice described groove seaman design serious game based approach challenge design order design defensive challenge industrial ctfs author decided focus two dierent aspect challenge structure thechallenge type content challenge question example software vulnerability focus current work derived existing scg sdbp challenge structure reects mechanic challenge supposed deployed work challenge type specie dierent way challengecan presented participant figure show step followed approach design defensive ctf challenge industrial context study approach step created preliminary design containing proposed dierent ct conducted several informal discussion one security expert additionally based experience past capture theflag event concluded preliminary design challenge structure andchallenge type next step created twophase survey goal survey gather feedback opinion structured way preliminary challenge structure challenge type used facilitate semistructured interview several security expert interview carried following step realized facetoface meeting meetingsconsisted three part presurvey postsurvey informal discussion interview collected feedback transferred digital form analyzed analysis step aim understanding joint agreement thedierent suggested improvement security expert commonly sug gested improvement used adapt change preliminary design resulted nal challenge design following subsection present detail dierent phase approach result analysis adaptation also nal challenge design presented sect design secure coding challenge education industry preliminary design preliminary design author conducted several informal discussion security expert also trainer secure coding industry security expert year experience industry andhas also knowledge previously participated capturetheflag event based experience security expert also experience author preliminary design derived survey preparation order prepare interview security expert twopart survey developed author developed survey underwent three review three dierent cybersecurity expert one holding master science com puter science two holding phd security whereby one additionallya university lecturer cybersecurity main goal presurvey understand type challenge experienced industry security expert suitable ctfbased awareness training postsurvey primary goalis understand level agreement dierent preliminary challenge type presurvey conducted beginning meeting pre senting preliminary design postsurvey conducted presentingthe preliminary design split allowed participant think reect answer presurvey prepared openminded discussion postsurvey splitting survey two part wasdone order guarantee unbiased feedback collection security expert presurvey presurvey postsurvey asked partici pant design ctf challenge secure coding software developer industry kind challenge structure type would postsurvey additionally asked question preliminary design particular would participant change add remove pre sented preliminary design challenge type would additionally consider also expert opinion penalty hint challenge total presurvey consisted question multiplechoice three based likert scale open ended question postsurvey consisted question whereby feedback question based likert scale openended question interview interview author engaged security expert average year experience industry minimum one year maximum year expert selected based experience position back ground company engaged several consulting project cybersecurity expert large part participant also trainer dierent topic cybersecurity selected participant familiar ctf competition half expert hold phd degree computer science gasiba equivalent remaining half hold master science computer science equivalent facetoface interview lasted one hour carriedout stof october interview min dedicated presurvey afterward preliminary design ctf challenge presented participant remaining min werethen spent postsurvey openended discussion nished min informal discussion result analysis stage gathered collected data presurveys post survey informal discussion result using likert scale analyzed using standard statistical method due nature openended question informal discussion need coded order guarantee quality step transcript given three security expert asked perform coding step manually opted manualprocedure rather automated ensure high quality automated coding previously shown achieve high accuracy coding come expert collected discussed together similarity anddierences systematically addressed nal coding derived mutual agreement three expert adaptation final design last step consisted using feedback previous step adapt change preliminary design accordingly proposed change agreed majority participant coding participant considered nal design sect nal challenge design including challenge structure derived challenge type presented detail analysis result section describe result twopart survey interview asoutlined previous section present nal challenge structure type take consideration feedback provided securityexperts finally summarize main contribution briey discus threat validity work preliminary design result informal discussion security expert challenge structure dened two round round main challenge round presentation secure coding guideline related challenge detail given initial design changed interview withdesign secure coding challenge education industry security expert shown next subsection section detail nal challenge structure derived initial challenge type followingsingle choice question csq multiple choice question mcq text entry challenge tec code snippet challenge csc code entry challenge cec table show summary challenge type detail given sect together nal design presurvey result presurvey result showed majority participant thought adequate type challenge would type question answer without spec ifying mean additionally answered form challenge involving coding would adequate since challenge based scg however participant replied friendly hacking exercise would also good exercise discarded type challenge arenot defensive one participant mentioned appropriate challenge would involve xing problem vulnerable code snippet table coding result hint penalty question presurvey result would add hint challenge dicult challenge opinion design hint giving detail answer disclosing important concept include external reference would add penalty agree introduce penalty retrying challenge using hint disagree introduce penalty opinion table show summary agreement level participant towards question asked presurvey related hint penalty usageof hint backed survey participant dicult challenge question hint include detail solve question pointout secure coding concept behind challenge majority participant agreed adding external reference link article web appropriate way design hint challenge half participant agree hint disclose essentialconcept behind challenge secure coding guideline challenge gasiba based participant agree giving targeted hint disclosing important concept good idea informal discussionsseveral participant mentioned goal hint make sure ctf player learning secure coding concept game hint also designed order lower player frustration maximizethe learneect particular type hint precise point industry player time play game term penaltypoints agreed introduce disagreed opinion one agreed introduce penalty point agreed using hint penalized remaining agreed retrying challenge penalized informal discussion thesurvey participant mentioned intention add penalty motivate player solution himherself rely hint furthermore penalty small lower frustration level maximizing learning eect ctf player postsurvey result postsurvey participant shown derived challenge type asked rate agreement suitability ctflike event software developer industrial setting likert scale table show result postsurvey dierent challenge type standard mapping likert scale follows strongly disagree strongly agree table average agreement level scq mcq tec csc cec average std deviation derived rank preferred challenge type following highest agreement lowest agreement codeentrychallenge code snippet challenge singlechoice question multiplechoice question textentry challenge although csc cec average agreement level csc higher standard deviation higher uncertainty cec therefore placed cec place rank participant asked idea additional challenge type new idea answered additional idea opinion additional collected idea following something dynamic fun associating left right list asl modify code one vulnerability contribution could mapped existing challenge type could new challenge type discerned however resulted new challenge typedesign secure coding challenge education industry participant also asked could added existing chal lenges following additional point collected question provide explanation end challenge together add explanation multistage challenge ask coding guideline followed code snippet randomize answer randomize solution forget fun aspect designing challenge additional point also used improve nal challenge struc ture shown next subsection final challenge structure nal challenge structure contains three phase consisting four stage introduction phase challenge logicphase conclusion phase shown introduction stage phase topic related secure coding introduced helpful solve frame challenge secure coding guideline previously related cybersecurity incident optional stage include singlechoice multiplechoice question proceeding next phase second phase challenge stage contains main according given challenge type presented sect stage several hint given player depending several factor time taken player solve challenge previous number attempt solve challenge logicstage responsible evaluating solution challenge provided player determining correct acceptable wrong acceptable according analysis answer provided player point penalty might awarded challenge structure third phase depends result logic stage case player answer wrong following four option occur return chal lenge stage give explanation solution wrong return gasiba challenge stage proceed nish give explanation solution wrong proceed nish case player solution correctthe following two option occur give concluding remark optional additional question proceed nish proceed nish correct solution achieved nish state presentedto player according ctf rule conclusion stage additional useful information given player explanation secure cod ing guideline related challenge importance challenge theindustry context example lesson learned past incident vulnerability final challenge type table show nal six derived challenge type singlechoice question scq participant asked question one possible answersis correct solution multiplechoice question mcq correct solution must include one dierent answer textentry question teq participant need type solution text achieved forexample completing writing full sentence answer challenge codesnippet challenge csc present piece code participant let participant select line code containing vulnerability select changesto code would avoid vulnerability respect scg sdbp codeentry challenge cec participant given vulnerable code need changed rewritten eliminate vulnerability complying scgand sdbp associate leftright challenge participant need associate item list left item list right figure andshow mockup sketch possible implementation create defensive ctf challenge based six challenge type challenge contains guiding question area player interact challenge submit button submit result backend trigger logic stage table description derived challenge type challenge type description single choice question select single correct answer multiple choice question select multiple correct answer text entry challenge type answer question code snippet challenge identify line expression code snippet code entry challenge write adapt code eliminate vulnerability associate leftright associate element leftlist right listdesign secure coding challenge education industry observation work designed defensive challenge ctf event aim raise secure coding awareness software developer industry codeentrychallenges found among popular choice textentry question among least popular initial updated result interview security expert interestingly informaldiscussions security expert result ct based comic another interesting observation security expert considered sim ple game type discussion took place advanced challenge type basedeg virtual reality roleplayinggames fact likely related particular nature topic deployment environment industry challenge type simple traditional selected egsinglechoice question multiplechoice question one unexpected chal lenge type codeentry challenge due complex nature type challenge requires investigation understand create challengebased type eectively singlechoice question multiplechoice question textentry question codesnippet question gasiba codeentry challenge associate leftright threat validity work hereby presented based knowledge knowhow obtained interactive discussion survey group security expert industry possible threat conclusion number participant company background although author found previous work defensive challenge capturetheflag event focused secure coding software devel opers industry nevertheless since author perform systematic literature review might challenge type present scientic literature might also apply situation constraint another limitation work based feedback security expert player real ctf participant direct feedback target group used evaluation especially inthe preferred challenge type ranking author address issue subsequent publication although present work follows survey methodology semistructured interview best practice lack systematic academic approach rea son study conducted industrial setting however extensive search conducted scientic publication search engine identify previous relevant work ndings constituted part initial design conclusion nowadays increasing demand awareness training software developer industry secure coding demand motivated byrequirements quality standard security standard one promising new method raise security awareness usage capturetheflag event ever event need specially designed order address targetaudience requirement software developer industry recently requirement needed designing game industrial setting investigated however author previ ous work provide detail challenge type rather requirementsdesign secure coding challenge education industry overall game design challenge type trivial task poor quality challenge may result ineciencies loss productivity thatindustrial company willing accept barela give one example shown challenge type based comic deployed ctf might adequate event goal furthermore themajority existing literature focus defensive challenge also mostly address target audience security professional pentesters work addressed design defensive challenge ctfs industry derived challenge structure six dierent challenge type work based semistructured interview security expert comprises twopart survey additional informal discussion resultsshow security expert prefer traditional challenge type based singlechoice multiplechoice question seen least pre ferred challenge type security expert textentry challenge three additional challenge type discussed association leftright code entry challenge codesnippet challenge two latter type welladapted secure coding challenge since software code however unexpected new challenge type codeentry challenge player submits code backend decides challengeis correctly solved topic need additional investigation detail create challenge type result presented publication derived solely based feedback interview security expertsfurther work required validate derived challenge structure challenge type real ctf event industrial setting particular author intend give concrete example implementation dierent derived challengetypes upcoming publication work allow rene challenge structure challenge type based feedback ctf player acknowledgement work nanced portuguese national fund fct funda aac encia tecnologia project fct uidb furthermore third author thanks instituto universit ario lisboa istariul support reference acar stransky wermke weir mazurek fahl developer need support survey security advice software developer ieee cybersecurity development secdev ieee september aoyama nakano koshijima hashimoto watanabe complexity cybersecurity exercise proportional preparedness disaster re barela gasiba suppan berges beckers interactive graphic storytelling fails ieee international requirement engineering conference workshop rew ieee september gasiba beuran chinen tan shinoda towards eective cybersecurity education training research report school information science graduate school advanced science technology japan advanced institute scienceand technology isrr carnegie mellon university seicert coding standard httpswikiseicmu educonuencedisplayseccode chung cohen learning obstacle capture model usenix summit gaming game gamication security education gse usenix association san diego ctftime team ctftime ctf httpsctftimeorg davis leek zhivich gwinnup leonard fun future ctf usenix summit gaming game gamication security education gse usenix association san diego dorner obel eelsberg wiemeyer serious game foundation concept practice edn springer cham gasiba beckers suppan rezabek requirement serious game geared towards software developer industry damian perini lee ed ieee international requirement engineering conference jeju island korea south september ieee graziotin fagerholm wang abrahamsson happens software developer unhappy syst softw grove fowler couper lepkowski singer survey method ology edn wiley hoboken gonzalez llama ordaz cybersecurity teaching gamication aligning training resource syllabus re comput sci httpsdoiorgrcs ansch zinaida specifying security awareness international workshop database expert system application munich germany september iec security industrial automation control system part secure product development lifecycle requirement standard international electrotechnical commission january iso iso series standard international organization standardization geneva httpisocomindexphpenisostandards iso information technology security technique code practice information security control standard international organization standard ization geneva october krosnick questionnaire design vannette krosnick ed palgrave handbook survey research springer cham mirkovic peterson class capturetheag exercise usenix sum mit gaming game gamication security education gse nance hay bishop secure coding education making progress colloquium information system security education june owasp top httpswwwowasporgimagesowasp top enpdf accessed june design secure coding challenge education industry oyetoyan milosheska grini soares cruzes myth fact static application security testing tool action research telenor digital garbajosa wang aguiar ed lnbip springer cham patel global developer report devsecops nd security roadblock divide team july httpsaboutgitlabcomblogglobaldeveloper report accessed july rodriguez piattini ebert software verication validation tech nologies tool ieee softw safecode charter member safecode software assurance forum excellence code httpssafecodeorg schneier software developer security july httpswwwschneier comblogarchivessoftware develohtml accessed july schonlau couper semiautomated categorization openended ques tions surv re method httpsojsubunikonstanzde srmarticleview seaman qualitative method empirical study software engineering ieee trans softw eng smith content analysis narrative analysis handbook research method social personality psychology tews noe training fun review conceptual model role fun workplace training hum resour manag rev whiting semistructured interview guidance novice researcher nurs stand woody ellison nichols predicting cybersecurity using quality data ieee international symposium technology homeland security hst ieee yang xia wan sun security question developer ask largescale study stack overow post comput sci tech nol qscrum framework quality safetycritical development johnny cardoso marquesb adilson marque cunha luiz alberto vieira dia aeronautics institute technology jos do campos paulo brazil johnnycunhavdias itabr httpwwwcompitabr abstract paper describes adapted scrum framework applied successful academic experience using interdisciplinary problembased learning ipbl conceptualize model develop safety critical prototype present adapted version scrum agile method used develop safetycritical project achieving compliancewith software standard also report development aca demic project using ipbl involving student four dierent course yearly oered aeronautics institute technology atthe end year prototype developed presented student keywords scrum safetycritical prototype quality agile compliance introduction many organization adopted agile practice deliver highquality product release high value market crucial focus mechanic agile discipline internally also important todene quality customer view quality actually impact customer satisfaction loyalty way brings additional business opportunity enhances revenue education involving agile development software quality desired paper describes adapted scrum framework applied successful academic experience using interdisciplinary problem based learning ipbl conceptualize model develop safetycritical prototype applying framework project developed since aeronauticsinstitute technology instituto tecnol ogico aeron autica project involve undergraduate graduate student follow ing course ce embedded system project software qualityreliability safety realtime embedded system project advanced topic software testing summary ce course tackle software engineering technology integrated ccirclecopyrtspringer nature ed qscrum framework quality safetycritical development computeraided software engineering environment icasee tool require ments specication analysis design also implementation method tool technique realtime system course tackle standard software development review inspection audit also measurement model software reliability finally tacklesinnovations software testing process agile testing also testdriven development tdd several type blackbox whitebox testing safetycritical system characterized attribute functionality reliability safety usability eectiveness interoperability testability maintain ability portability oered student opportunity address attribute using interdisciplinary problem based learning ipbl end week semester year unique developed project prototype presented student nal examination pro fessors also invited local research development industrial community representative ipbl studentcentered pedagogy approach student learn subject experience solving openended problem involving multiple discipline project execution student conceptualize model develop safetycritical prototype within week basically ipbl approach involves one problem assigned described vision artifact minimum necessary sucient set docu mentation artifact template three sprint development need also assigned mission accomplishment template artifact presented student part nal examination also delivered value prototype solution problem previously assigned presented organization scrum team using scrum generate prototype marque qscrum framework beginning semester professor present adapted version scrum named qscrum meaning qualityscrum modied framework original scrum proposed schwaber adaptation scrum available adaptation involves organization using pro ce available software standard requirement design modeling test ing conguration management quality assurance validation training student framework able scrum agile method combine development discipline achieve compliance software stan dard prototype divided embedded system component embedded system component developed dierent scrum team composed student acting scrum master student acting member dierent course also presented student assigned develop user story however student dif ferent course specic role ce student assigned design model implement solution ansys esterel scade student assigned conduct walkthroughs auditsand student assigned specify create execute test case user story beginning sprint sprint planning meeting take place product owner scrum team review product backlog discus goal context item scrum team selects item product backlog commit complete end sprint figure present qscrum quality assurance safetycritical development framework qscrum quality assurance safetycritical development frameworkqscrum framework quality safetycritical development sprint week sprint week plus week final project pre sentation week sprint dedicated sprint planning foranalyzing user story creating associated task week design modeling user story also begin week continues design modeling end weekthat student perform walkthrough week dedicated test walkthrough performed end week sprint nished student conduct sprint review retrospective andaudit also deliver incremental new release prototype end sprint figure present phase used typical sprint cycle qscrum typical sprint cycle qscrum phase user story modelbased development user story mapped requirement making possible estimate eorts implement simple direct way professor productowners fulll student product backlog artifact sys tem software requirement later could mapped user story following specic format adapted user story contain behavioral description property comprised performance aspect function alities iii external interface limit range data safetycritical application development environment scade ansys modelbased system engineering mbse environment dedicated implement safetycritical system previous work author explored modelbased development aviation project using scade scade empowers user modelbased development environ ment critical embedded software scade display empowers user versatile graphic design development environment embedded humanmachine interface hmi presented marque user story scade model scade display walkthroughs audit walkthrough formal evaluation team peer includ ing author meet examine work product user story model test presented walkthrough focus verication user story model executed end week professor request scrum team create checklist checklist must achieve least following objective verify user storiesare clear testable nonambiguous verify task dened user story iii ensure task executed accomplish user story ensure model accomplish user story ensure traceability user story model established correct presented walkthrough focus verication test executed end week professor request scrum team create checklist checklist must achieve least following objective verify test procedure created completelyexercised user story verify test result correct audit formal evaluation process output evaluates consistency among work product audit always conducted week student must create audit checklist accomplish following objec tives verify sprint review properly conducted identify exercise sample prototype ensuring user story model andtests correct iii ensure issue identied corrected register additional issue verify compliance applicable software standard professor request student perform audit using owchart presented student collect artifact step audit conductedqscrum framework quality safetycritical development walkthrough walkthrough walkthroughs qscrum using created audit checklist step issue identied requested correction step finally student conrm thecorrection step audit typical sprint cycle qscrum ipbls always applied safetycritical project thus professor applicable software standard environment rtca doc aviation ecssestc space iec medical project using qscrum since applying ipbl qscrum agile thedevelopment academic safetycritical software prototype involving dierent environment aviation emergency medical space thefollowing academic project artes avionics realtime embedded system project involving cockpit display system cd control unmanned aircraft vehicle uav bamlis brazilian academic microsatellite launching integrated sys tem project involving interdisciplinary academic project spatial critical embedded system agile development marque acmis accident crisis management integrated system project provide alert prevent decrease eects crisis apres alert prevention system nature event project monitor alert nature event tsahcrt technological solution applicable health care real time project integrate patient hospital physician health sup plier health system involving big accident hims hospital information management system project store retrieve analyze evolution rehabilitation using exoskeletonand pims patient information management system project monitor wheelchair patient perform daily activity figure present example one cockpit display system cd designed academic project developed using qscrum artes andfigb present example two mobile cd fourth academic project developed using qscrum apres cd artes projectmobile cd apres project cd example conclusion paper described successful experience using interdisciplinary prob lem based learning ipbl conceptualize model develop safetycriticalprototypes using scrum framework adapted schwaber named qscrum brazilian aeronautics institute technology instituto tec nologico aeron autica past year using qscrum academic framework professor able apply get successful experience qscrum development integration within dierent course teaching apply quality assurancein safetycritical development natural consequence academic inclasses experiment fol lowing innovative approach contribution accomplishedqscrum framework quality safetycritical development application agility keeping compliance software standard modelbased development ansys esterel scade creation several checklist supporting walkthroughs audit cooperation software quality education multiple environment standard driveneducation acknowledgement author thank aeronautics institute tech nology instituto tecnol ogico aeron autica ita providing motivation environment ansys esterel providing scade support academic successful development experience reference ansys embedded software electronic httpswwwansyscom productsembeddedsoftware goncalves interdisciplinary academic project spatial critical embedded system agile development ieeeaiaa digital avionics system conference dasc lengwell agile software requirement lean requirement practice team program enterprise addisonwesley boston marque cunha reference method airborne software requirement ieeeaiaa digital avionics system conference dasc marque cunha tailoring traditional software life cycle ensure compliance rtca doc modeldriven design ieeeaiaa digital avionics system conference dasc marque yelisetty smh cunha amd dia lav cardrm ref erence model airborne software international conference information technology new generation marque yelisetty smh dia lav cunha using model based development software lowlevel requirement achieve airborne software certication ninth international conference information technology new generation merkow secure resilient agile software development auerbach publi cation boca raton naderrezvani executive guide software quality agile organi zation continuous improvement journey apress new york schwaber agile project management scrum microsoft press redmond shah quality assurance agile methodology grin verlag munich siles integrated academic system prototype using accident crisis management pbl lat information technology new generation aisc springer cham quality aspect quantum computingreverse engineering quantum program oward kdm model luis jimneznavajasb ricardo prezcastillob mario piattini university castillala mancha ciudad real spain luisjimeneznavajasricardopdelcastillo mariopiattiniuclmes abstract interest quantum computing grown dramatically due incomparable computation power many promising application new computing paradigm inuences way future information system bebuilt legacy classical system simply replaced quantum software several reason first legacy system usually embed lot missioncritical knowledge time making replacing risky second business process make sense supported quantum computing supposes unnecessary expense signies organization need adapt classical information system alongside new specic quantum applicationsevolving toward hybrid information system unfortunately spe cic method dealing challenge believe reengineering specically software modernization using modeldriven engineering principlescould useful migrating classical system toward hybrid one particular paper present reverse engineering technique analysis quantum software information code generates abstract model model aregenerated according knowledge discovery metamodel kdm standard main implication usage kdm reengineering toward hybrid system accomplished independent way regarding specicquantum technology keywords reengineering reverse engineering quantum computing kdm introduction history software engineering several methodology paradigm framework technology emerged changed way software developednevertheless background software programming almost based boolean algebra one abstraction classical binary computer quantum computing new computing paradigm new technology behind applies phenomenon quantum physic computing superposition andentanglement furthermore bit evolve new concept quantum bit qubit springer nature ed jimneznavajas change allow get exponential growth computational power higher speed fastest supercomputer world long new technology matures organization must face modernization enterprise information system taking advantage benet quantum computing brings necessary mean fully discard classical information system supported business process probably supported quantum computing happens information system embedded vast amount missioncritical knowledge evolution thatknowledge present probably anywhere else thereby replacement legacy classical information system becomes risky consequence believe expected company using classicalquantum information system whichwe denominated hybrid information system system consist master classical system make request quantum computer typically cloud compute specic quantum algorithm however evolution classical system hybrid treated method dealing problem propose solution based reengineering specically architecture driven modernization evolution traditional reengineering follows modeldriven engineering mde approach adm advocate usage kdm accomplish modernization software modernization analyse software artefact interrelationship legacy system build one rep resentations legacy system according kdm abstraction achieved throughkdm ensures interoperability reverse engineering tool software modernization tool particular paper focus reverse engineering phase reengineering process main contribution reverse engineering technique analyse quantum information code generates abstract model using kdm solution quantum parser built analysis le construct thecorresponding abstract syntax tree ast component artefact recognized mapped represented kdm model achieved kdm generator designed built specically quantum code main implication proposal contribution future necessary reengineering classicalquantum information system way system evolve year thereby believe proposed reverse engineering technique particularly whole reengineering process take huge nancial worth remaining paper structured follows sect explains state art quantum computing reengineering sect introduces quantum software reengineering proposed technique framed sect detail proposal alongside two main component parser kdm generator sect supporting tool implementation detail provided finally sect draw conclusion researchreverse engineering quantum program toward kdm model state art quantum computing quantum computing started eighty paul benioff proposed quantum mechanical model turing machine year later physicist richard feynman yuri manin discovered potential quantum computer simulate process classical computer year mathemati cian peter shor developed algorithm quantum computer factor integer mean mean quantum computing rsaencrypted communication couldbe decrypted new computing paradigm result applying quantum mechanic com puting science change traditional bit smaller unit information qubita qubit usually represented electron spin photon among particle qubit multiple status quantum system dened zero one classical bit exist innite possible value sphere see mean qubit state might zero one time phenomenon known super position superposition keystone exponential computational power qubits represented superposition state vector representation qubit based model felix bloch way working qubits quantum circuit quantum gate quantum circuit collection quantum gate interconnected quantum wire qubits state change consequently quantum gate internally composed quantum circuit lower level abstraction still using quantum mechanic phenomenon like classical logical gate forexample nand gate built internally gate example hadamard gate typically used initializing qubits force qubit probability zero one term change qubits stateinto superposition example quantum gate cnot act two qubits making comparison changing status one qubit depending others one likewise happened sixty space race nowadays similar race get quantum supremacy race goal demonstrate quantum computing jimneznavajas solve problem classical computer among many headto head competitor race ibm google fact google recently announcedthat already achieved quantum supremacy qubit computer together quantum computer various quantum programming language developed qasm among others programming languagesinclude abstraction building quantum gate quantum operation programming language opensource used anyone interested one hand opensource language encourages peopleto contribute global knowledge developing algorithm new theory hand guide good practice develop quantum code guideline quality quantum software must developed alleviate thisproblem talavera manifesto quantum software engineering programming proposes good practice correct development quantum software traditional reengineering near future organization develop hybrid information system combine traditional information system quantum one traditional make thoseprocesses procedure make sense implement quantum computing due complexity price since processed really take advantage huge computational power nevertheless traditional software might call otheroperations implemented quantum algorithm run remote quantum computer thus accomplish evolution toward hybrid information system reengineering practice must brought domain quantum computing deal withthe mentioned challenge technology evolves among time information system evo lution negative effect system developed past likedegradation aging making information system legacy information system mean code developed could technologically obsolete nevertheless discarding whole system option target information system must preserve business knowledge embedded legacy one reengineering allows preservation business knowledge making possible carry evolutionary maintenance legacy system assuming low risk low cost three stage reengineering process reverse engineering system analysed identify component interre lationships create representation system another form higher level abstraction restructuring transformation one representation form another relative abstraction level preserving subject system external behaviour functionality semantics forward engineering nal stage consists renovation reclamation examination alteration subject system reconstitute new form subsequent implementation formreverse engineering quantum program toward kdm model overall reengineering task presented horseshoe model reengineering phase consists recovery architecture source codeartifacts restructuring phase generated architecture previous phase reengineered become desired one modied integrate new requirement finally forward reengineering work instantiation newarchitecture architecturedriven modernization adm consists tool facilitate analysis refactoring transformation existing system towards modernization supporting new requirement migration system even interop erability accomplish adm make reengineering modeldriven engi neering mde software development approach done dened abstract model quantum software reengineering specic reverse engineering proposal presented paper framed longterm research roadmap whole reengineering process quantum software believe quantum software reengineering necessary deal today tomorrow hybridinformation system argue reengineering general software modernization evolution adding mde approach used deal challenge associated hybrid information system therefore quantum software reengineering might used three complementary scenario see migrate existing isolated quantum algorithm integrate hybrid information system migrate classical legacy information system toward hybrid architecture support integration classicalquantum information system transform add new business operation supported quantum software integrated target hybrid system figure show overall quantum reengineering process propose software modernization based existing standard uml kdm stage reverse engineering scope paper consist analysing existing information system artefact source code database schema etc couldanalyse classical system scenario plus quantum program exist scenario output reverse engineering phase set kdm model comprise kdm repository explained kdm repository represents technologyagnostic way different perspective concern legacy information system holistic way way previous knowledge business rule might preserved andthe impact integration quantum program reduced kdm specically designed work qubits implies kdm must extended ordinary extension mechanism support representation quantum softwareaspects jimneznavajas uml model classical informaon systemexpertbased model refactoringautomac model refactoring code doc database parsersmodel transforma onreverse engineeringforward engineeringrestructuring exisng quantum programskdm model quantum code parserextendednew quantum program extended target assi cal quantum systemlowcode generave technique quantum reengineering process second stage restructuring see kdm model semiautomatically transformed highabstraction level model representing anal ysis design aspect target hybrid system achieve metamodel employed case might uml similar kdm extension uml extended support new system analysis design element concerning quantumcomputing point software engineer uml extension manually model quantum aspect new target system scenario integrated existing element previously gathered reverse engineering finally forward engineering phase see consists set technique able generate many part source code target hybrid system today exist many wellproven generator different classical programminglanguages produce code uml model however generator quantum programming language high abstraction model concern must provided integrated existing generative technique restructuringand forward engineering outside scope paper reverse engineering program section explains detail main contribution paper reverse engineering quantum program particular programming language proposal framed reverse engineering stage overall quantum software reengineeringprocess presented previous section reverse engineering technique specically focused scenario see reverse engineering quantum program toward kdm model several framework developing quantum software offer different option purpose many allow create quantum algorithm orprograms without coding graphical way quantum circuit composer like ibm quantum experience real quantum computer executing quantum algorithm develop purpose outsideof scope proposal code directly available need source code analysing syntax derive ast leq parsersyntax treekdm generatorkdm model leab reverse engineering programming language proposed reverse engineering technique seen divided two module first parser take analysis le parser considersa grammar recognize element build respective ast second kdm generator take asts generate common kdm model considers mapping element dened ast kdmcompliant element thisproposal could extended additional parser programming language changing grammarbased rule parser happens output proposal interest swapping metamodel rather kdmlike example uml code kdm generator must modied following necessary rule jimneznavajas parser parser one charge building abstract syntax tree based le receives achieving necessary dene grammar programming language analysis tool build parser grammarsin automatic manner research parser generator used antlr one used industry noticed developed considering syntax base result started denition grammar extension existing grammar nevertheless several clause loop method denitions etc different regarding many others related quantum information genuine inparticular quantum gate mechanism working qubits need dened grammar example show small program instantiate qubit line applies hadamards quantum gate qubit line nally qubit measured quantum gate line namespace quantumqsharpapplication openmicrosoftquantumcanon openmicrosoftquantumintrinsic operation helloq result using varqubit qubit allocate qubit hqubit letr mqubit messagewelcome quantum world returnr program measuring qubit applying hadamard quantum gate table show example rule developed grammar activated program whole grammar queried online material available github repository denition whole parser must staggered grammar lowest level group building higher level syntaxis well dened way dening syntax set ast following example table outgoing ast presented kdm generator kdm generator take ast generated le build kdm model asts node considered kdm generator depending type node explored type element kdm chosen generated target modelreverse engineering quantum program toward kdm model example denition quantum gate lexicon grammar lexer hadamard measure parser quantumgatesoneop hadamard measure onegateop quantumgatesoneop openparens qubitidentier closeparens quantumgateop onegateop twogateop threegateop operationdeclaration qsharpdeclaration identifier identifierquantumformalparameterlist quantumreturntype quantumusing quantumqubitassingment qubitdeclaration qubitidentifierquantumbody block statement quantumgateop onegateop quantumgatesoneop hadamard measure abstract syntax tree generated code example ast element important architecture program need specied kdm generator well relation element specication component outgoing kdm model based kdm standard element kdm generic useful represent jimneznavajas element different programming language hence element must annotated specic stereotype provide specic semantic regarding quantum information kdms approach dene quantum entity quantum gate variable dened type qubits way measure result dened extension family default extension mechanism provided kdm standard allthe component exist quantum programming language thus represented extension family see extension family group set stereotype used ordinary element provided kdm extensionfamily stereotype namequantum programming language stereotype namequantum program stereotype namequantum operation stereotype namequantum gate stereotype namequbit stereotype namequbit measure extensionfamily extension family kdm le dening quantum entity denition extension family allow extend previous classical infor mation system towards quantum programming language mean quantum soft ware reengineering going step allowing hybridization system main taining previous knowledge business rule reducing impact inte gration quantum program extension family might extended future additional element kdm generator recognizes certain element ast creates certain element target kdm model table show mapping applied kdm generator left column show element ast two right columnsprovide kdm element well stereotype used annotate element ast kdm mapping applied kdm generator ast element kdm element kdm stereotype program codemodel program compilationunit quantum program operation callableunit quantum operation qubitdeclaration denedtype qubit quantumgate actionelement quantum gate qubitidentier used operand quantumgateactionrelation type address among ast element appearing sequenceactionrelation type flowreverse engineering quantum program toward kdm model figure show whole kdm model applying transformation depicted table ast model see generated code see line extension family dened quantum element code line located line kdm line necessary specify program case programqs whichits stereotype point quantum program extension family xmlversionencoding utf kdmsegment xmlnskdm httpwwwomgorgspeckdmkdm xmlnsaction httpwwwomgorgspeckdmaction xmlnscode httpwwwomgorgspeckdmcode xmlnsxmi httpwwwomgorgxmi xmlnsxsi httpwwwworgxmlschemainstance xmiversion nameprogramxml extensionfamily xmiidid stereotype xmiididnamequantum programming language stereotype xmiidid namequantum program stereotype xmiidid namequantum operation stereotype xmiidid namequantum gate stereotype xmiidid namequbit stereotype xmiidid namequbit measure extensionfamily modelxmiididxsitype codecodemodel nameprogramxml actionaction codeaction codeelement xsitype codecompilationunit xmiidid stereotype nameprogramqs codeelement xsitype codecallableunit xmiidid namehelloq stereotype codeelement typecodedefinedtype xmiidid namequbit stereotype codeelement typecodeactionelement namehadamard stereotype xmiidid source language qsnippethq actionrelation xsitype actionaddresses fromid toid actionrelation xsitype actionflow fromid toid codeelement codeelement typecodeactionelement namemeasure stereotype xmiidid source language qsnippetmq actionrelation xsitype actionaddresses fromid toid codeelement codeelement codeelement codeelement model kdmsegment kdm code develop quantum program implies declaration qubits structure called operation similar conventional method inside work qubits see line dened line callable unit kdms declaration qubit inside jimneznavajas operation line type dened type due considered variable type like integer string element better denition quantum gate action element denes basic unit behaviour element stereotype quantum gate line internally quantum gate denitions source elementlines store code snippet quantum gate quantum gate entity collect action relation entity tagged type address reference qubits involved operand quantum gate example referencesa single qubit line attribute respectively contains reference current quantum gate qubit declaration additionally sequence program modelled action relation element taggedas flow pair attribute check line one limitation kdm generator lie fact recognize operation qubit used know declared problem attached le one operation common scenario supporting ool section present implementation detail tool developedwhich support technique proposed mentioned proposal divided two main component shown developed different tool joined aim getting closer hybridization system parser see developed antlr powerful parser generator reading processing executing translating structured text binary le parser allows dene syntax programming language developing ast syntax divided two section see table lexer lexicon reserved word language specied parser language structure described since based antlr hasan open repository dened language java etc instead starting scratch took one antlrs project adapted dening necessary key word structure module kdm generator see constructed java take ast explores node child relevant component architecture saved matrix matrix explored based onthe denitions kdm model different type saved specied one matrix contain quantum entity like quantum gate qubit declaration stereotype attribute added kdms representation stereotype point extension family detailed sect necessary future extension classical information system towards hybrid onesreverse engineering quantum program toward kdm model conclusion future work goal research contributing reengineering classicalquantum infor mation system particular paper focused reverse engineering phase able parser quantum code generates kdm model proposed techniquehas specically developed code grammar could provided extend technique parser quantum programming language addi tionally usage kdm technique ensures independence fromquantum technology particularly important due maturity status quantum technology various new programming language development platform appearing parallel well different quantum hardware architecturesalso outgoing kdm model representing abstraction classicalquantum infor mation system used next phase reengineering restructuring forward engineering proposed technique framed longterm research devoted investigating reengineering help migrate classical quantum information systemstoward hybrid one believe presented technique step direction thus main implication work quantum software developer abstract quantum information together information coming classicalsystems integrated highabstracted model usefully whole reengineering process also understanding information system component relationship presented already detected possible improvement like generation kdm le quantum programming language apart parser might semi automatically generated development ofgrammars additional quantum programming language future research line expect work following reengineering phase first expect develop uml extension represent analysis design model target hybrid informationsystem automatic model transformation kdm uml developed acknowledgment research partially funded gsoft sbply gema sbply project funded direccin general universidades investigacin innovacin consejera educacin cultura deportesgobierno castillala mancha work also part project bizdevopsglobal rtibc eclipse rtibc funded ministerio economa industria competitividad mineco fondo europeo desarrollo regionalfeder smoquin pidrbi funded spanish ministry science innovation micinn reference washburn boolean algebra electronic circuit design electr eng httpsdoiorgee jimneznavajas prezcastillo garca rodrguez guzmn piattini architecturedriven mod ernization mod softw eng concept pract adv approach httpsdoi orgch prezcastillo guzmn igr piattini knowledge discovery metamodel isoiec standard modernize legacy system comput stand interface httpsdoiorgjcsi benioff computer physical system microscopic quantum mechanical hamil tonian model computer represented turing machine stat phys httpsdoiorgbf feynman simulating physic computer int theor phys httpsdoiorgbf manin vychislimoe nevychislimoe shor polynomialtime algorithm prime factorization discrete logarithm quantum computer siam comput httpsdoiorgs schrdinger die gegenwrtige situation der quantenmechanik naturwissenschaften httpsdoiorgbf bloch nuclear induction phys rev httpsdoiorgphy srev marinescu classical quantum information httpsdoiorgc preskill quantum computing entanglement frontier httparxivorg ab google quantum blog httpswwwbloggoogletechnologyaicomputingtakesqua ntumleapforward accessed selinger brief survey quantum programming language kameyama stuckey ed flop lncs springer heidelberg httpsdoi org piattini talavera manifesto quantum software engineering program ming ceur workshop proceeding william ulrich legacy system transformation strategy prentice hall ptr upper saddle river lucia ferrucci tortora tucci emerging method technology process management software engineering chikofsky cross reverse engineering design recovery taxonomy ieee softw kazman wood carriere requirement integrating software architecture reengineering model corum reverse engineering workshop conferenceproceedings httpsdoiorgwcre ulrich newcomb information system transformation schmidt modeldriven engineering vanderbilt university modeldriven historia santiago httpwwwcomputerorgportalsitecomputermenuitem ebf ibm quantum experience homepage httpsquantumcomputingibmcom accessed antlr homepage httpswwwantlrorg accessed mar math physic tool quality quantum programming ezequiel murinab aquantum madrid spain ezequielmurinaaees abstract presence quantum computing revolution critical dominant global position nation near future quantum lab device developed important milestone reached mainly branch communication scenario urgent educatepeople quantum computing technology like happens discipline science technology engineering mathematics promoted govern ment order instruct scienceaware citizen solid knowledge base mathand physic essential workforce able develop high quality quantum technology work address necessity quantum literacy creation new workforce proposing basic math tool physic background forentering eld quantum programming also address certication science foundation quantum programming mean assuring quality quantum software professional keywords quantum literacy quantum programming quantum mathphysics quantum certication introduction quantum computing race researcher predicted coronavirus crisis quantum technology grow roughly billion usd next two decade reaching global market worth billon usd year nowadays company working project related quantum cybersecurity algorithm nancial service communication china leading country quantum communication successful industrial application quantum key distribution qkd let mention launch quan tum satellite called micius august three milestone reached implemen tation qkd satellite ground distance using thedecoy state protocol quantum teleportation independent singlephoton qubits ground observatory lowearthorbit satellite satellitebased distribution entangled photon pair two location separated earth springer nature ed qua tic murina february trump administration destined millon usd call national quantum internet consists network machine designed toprevent interception digital communication kremlin turn inject millon usd next year basic applied quantum research leading russian laboratory aim creating quantum computer regarding europe important mention advance quantum hardware carried qutech netherlands february collaboration intel resolved issue integrate qubits controlling electronic samechip open possibility realization largescale quantum computer quantum illiteracy state art european commission warns necessity basic knowledge quantum theory quantum technology component engineer education furthermore emphasis required train quantum engineer also quantum aware workforce mean reinforcement education conference summer school student exchange international collaboration among others started quantum technology flagship programme qtagship aim place europe forefront called second quantum revolution revolution began development quantum physic impact transistor laser technology currently second revolution unfolding withthe advance nanotechnology allow precise control single quantum state exploit property like superposition entanglement impact technology expected four area quantum computation quantum communication quantumsimulation quantum sensing metrology country congured owns programme way overcome quantum illiteracy consolidate new sillicon alley relevant propositionsare national quantum technology programme netherlands quantum agenda quantum technology german programme called quantum technology foundation application also talavera manifesto presented qan swer proposes principle commitment quantum software engineering programming eld well call action forward quantum literacy software engineering math physic although currently several lab prototype quantum computing hardware technology constant progress yet standardized happens withthe development software stack many high level quantum programming language quantum software development kit quantum assembly language quantum com pilers developed exhaustive list may found reference clear remain near future depend ongoing progress quantum technology taking place scenario standardized education available future quantum engi neers something clear quantum programming need software engineer programmer blend specialized knowledge math physic sense critical understand lack knowledge constitutes handicapmath physic tool quality quantum programming overcome order beyond quantum software literate become actual developer moreover solid base math physic strong impact inquality quantum software development next section describe fundamental quantum physic introduce minimal mathematical concept relevant starting work eld quantum softwareengineering programming section present foundation quantum science quantum programming prole mean assuring math physic knowledge required quality quantum professional finally main conclusion arepresented origin quantum theory quantum starting point fundamental quantum physic theory beginning thcentury max planck proposed microscopic model describes black body electromagnetic spectrum simple word explained materialschange color temperature model postulate energy exchange molecule material surrounding electromagnetic radiation continuous mean discrete amount quantum quantum singular afterward calledphotons moreover photon energy proportional frequency electromagnetic wave radiated absorbed energy exchange process proportionality constant known planck constant quanties discretization energy somehow play role signature identifying quantum effect mathematical equation eventually revolutionary idea quantum conrmed experiment extended energy form magnetic quantity spin mechanical collective vibration phonons among others formal denition formulated follows quantum smallest amount physical quantity involved anenergy exchange matter radiation discretization physical quantity imposed constraint behavior classical system led origin quantum theory studying development quantum theory found driving force eld atomic physic reaching solid mathematical expression schrdingers equation origin equation intended recover continuous behavior physical quantitiesby mean introduction another revolutionary concept inspired previous proposal made louis broglie waveparticle duality consists associating wave particle matter wave describing physic wave entity thereforeparticles exhibit particle wave behavior depending characteristic length scale system wave behavior turn relevant atomic system smaller description particle wave led heisenberg principle consequence fourier analysis applied matter wave principle establishes limit preci sion determination reciprocal physical quantity componentsof position linear momentum murina physic fundamental quantum computing quantum programming qubits classic computing information transmitted binary unit called bit adopt logic value zero one representing low high electric voltage respectively inquantum computing however unit information call qubits represent quantum state system spin electron example main property qubits come wave behavior twolevel system represent logical layer superposition entanglement superposition general quantum state single qubit written follows angbracketrightangbracketrightangbracketright beingcomplex number notation angbracketrightangbracketrightrepresents state quantum particle access two different energy level expression superposition state due qubit angbracketrightis composed combination state angbracketrightinvextenddoublevextenddouble vextenddoublevextenddoubleproportion state angbracketrightinvextenddoublevextenddoublevextenddoublevextenddoubleproportion powerful superposition innity possibility offer mapping information even important parallel access information allows pure state like angbracketrightandangbracketright equivalent bit value respectively also allowed combination state given different value concentrationvextenddoublevextenddoublevextenddoublevextenddoubleandvextenddoublevextenddoublevextenddoublevextenddouble inaccessible classic information unit like bit entanglement entanglement state superposition pair single qubits way strong correlation created strong correlation consists deterministicnature state one qubit qubit measured entanglement obtained applying quantum gate qubits allows control interference matter wave associated qubit order create desired statenext section clarify issue wave function collapse inspection quantum variable quantum physic theory intrinsic stochastic nature general one proceeds follows matter wave associated single massive nonrelativistic particle time evolution matter wave given solution schrdingers equation matter wave contains information available particle associated modulus squared interpreted probability distribution location space physic information recovering matter wave measure aremath physic tool quality quantum programming taken onto measuring process affect nal quantum state matter wave measured called wave function collapse quantum variable name allocates memory space set qubits data stored quantum variable inspected stochastic nature sense possible recover different value given probability onceone inspects value quantum variable loses stochastic nature behaves classic variable low level happens wave function associated qubits collapse measurement process inspection variable themeasuring device interacts qubits interaction change quantum state qubits adopt bit value nocopying quantum information information allocated qubits unknown quantum state copied exactly called nocloning theorem discussion formal prove seereference term exactly mean orthogonal component qubit quantum superposition state copied another issue point nocloning theorem relies state art quantum hardware device perform unitary transformation qubits however copying quantum information might possible development hardware device able perform nonunitary transformation quantum algorithm two main state art quantum computing model universal quantum comput ing annealing quantum computing former describe next paragraph latter based mapping computational problem onto interaction model qubits beyond scope paper quantum programming universal quantum computing model proceeds follows sequence instruction composed algorithm decoding sequence quantum logic gate qgates operating qubits order change itsquantum state context concept logic circuit arises visualization diagram implementation quantum algorithm qalgorithm example simple quantum circuit corresponding teleportation algorithm related moving quantum data qubits using qubits input considering single relevant output nal quantum state one left right cnot gate act pair qubits enumerated topto bottom hadamard gate creates interference qubits afterwards measurement taken pair qubits finally pure rotation axis applied depending information received classic channeloverow note low abstraction level close computer architecture dealing combination qgates obtain interesting result output qalgorithm neither loop shortcut serial sequence transformation changing qubit state step murina quantum circuit corresponding teleportation algorithm amended reference one main feature qgates reversibility possible recover old quantum state new one applying inverse transformation make qgates analogue classic logic gate many reversible quantum programming language execution quantum code language qlanguages implement qalgorithm high level sense new coding logic emerges due quantum nature qubits proceeds logic structure control ifelse switch statement qlanguages focus establishment correlation among qubits entanglementscreation interference apart entangled state others superposition state state projection measurement another feature requirement multiple time execution algorithm implemented highlevel qlanguage one hand inherent stochastic nature qubits quantum device give probability distribution occur rence possible output better sampling distribution precisionin estimation mean value output hand noise coupled signal coming operating nonideal qgates time coherence qubits ideal case code executed multiple time good sampling output reduction noise introduced hardware nonideal situa tions factor taken consideration interaction qubitswith environment math tool quantum programming becoming quantum software engineer necessary uently linear algebra understand basic idea probability theory also knowledge modular arithmetic basically mod complex number addition multiplication eulerrepresentation advantage advance level fourier analysis may relevant linear algebra introduces notion vector space tool required deal qubits change quantum state quantum state qubit representedby vector qgate action mapping square matrix effect quantum state qubit emerges matrixvector multiplication carried let see anmath physic tool quality quantum programming example given quantum circuit shown assume input wire top bottom state like following angbracketrightangbracketrightangbracketright quantum state angbracketrightin expression represents superposition qubits angbracketrightand angbracketrightin equal proportion vector representation bracketleftbigg bracketrightbigg bracketleftbigg bracketrightbigg suppose proceed along circuit qgate left right cnot gate affect quantum state angbracketrightdue qubit control one case second qgate hadamard gate matrix representation hbracketleftbigg bracketrightbigg let see effect application angbracketright hangbracketrighthangbracketrighthangbracketright matrixvector representation hangbracketrightbracketleftbigg bracketrightbiggbracketleftbigg bracketrightbigg bracketleftbigg bracketrightbigg bracketleftbigg bracketrightbigg bracketleftbigg bracketrightbigg hangbracketrightangbracketrightangbracketright similar way one obtains hangbracketrightangbracketrightangbracketright combination expression result hangbracketrightangbracketright physic background calculation close related interference matter wave phenomenon effect hadamard gate create interference quantum state pure vice verse state unfolds equal proportion along set accessible quantum conguration thishomogeneous unfolding constitutes isentropic thermodynamics trajectory recover initial state reapplying hadamard gate time interference created destroys original one shown previous example process isentropic energy dissipation considering ideal case murina foundation quantum science quality quantum programming assuring quality quantum professional produce quality quantum software classical software engineer pro grammers must set scientic technical technological knowledge essential developing competence required develop software case development quantum software knowledge fundamental quantum science revealed essential shown knowledge physic mathematics decisive level maturity specic competence development task depend degree knowledge thesesciences know competence required engineer programmer competence required programmer also different required software architect given think competency play determining role quality quantum software development happens quality classic software consider necessary design training model appropriate objective developing competence requires appropriate combination training completion practice training model opinion successfully achieved certication model specially designed development quantum software includes competency required different category quantum workforce purpose certication person measure competence individual important signies individual expertise training industry organization certication also help industry dene maintain standardscondence certication scheme person achieved mean glob ally accepted process assessment periodic reassessment competence certied person certication assures quality quantum professional full coherence aforementioned piattini peterssen isoiec based certication schema different category train certify needed quantum workforce proposed reason believe veryinteresting incorporate schema category regarding foundation quantum science quantum programming regarding competence propose level denition using european competence framework ecf established tool support mutual understanding provide transparency language articulation competence required deployed ict professional including practitioner manager ecf structured four dimension dimension ecompetence area derived ict business process plan dimension set reference ecompetences area generic descrip tion competence competence identied total provide european generic reference denitions frameworkmath physic tool quality quantum programming dimension prociency level ecompetence provide european reference level specications ecompetence level dimension sample knowledge skill related ecompetences indicated optional framework component inspiration second level denition specic knowledge detailed foundation quantum science quantum programming prole efciently train workforce quantum development competency developed certications different category must clearly dened oth erwise greatest mistake would made properly dimensioning contentsand practice include one fulllment objective certication almost two year work already dedicated research development quantum software workforce focused study competency training workforce quantum software engineering programming veried general category quantum workforce require varyingdegrees following minimum competency develop quality quantum software fundamental physic quantum mechanic mathematics quantum computer quantum algorithm quantum programming although currently working dening specic competency category identied quantum software development workforce concluded certied professional foundation quantum science quantum programming able tackle tackle quality following task develop quantum component application follow quantum development guideline document quantum component application identify quantum software problem repair perform regular maintenance quantum software component write test program ass quantum software quality communicate effectively end user customer management murina following general competence must acquired ecf competence level application design application development testing need identication regarding knowledge group specic concept certication three domain domain quantum mathematics domain quantum physic domain quantum computer realisation conclusion quantum literacy starting point safe transformation towards quality sustainable quantum industry state policy modern country interesting accessing global dominant position next decade work discussing achievement area quantum computing someprogrammes quantum research education recently implemented also presented physic math concept quantum theory rely new software engineer need interdisciplinary background knowledge math physic allow address quantum challenge standardized instruction become quantum engineer regard offer basic science foundation certication quantum software engineer include introductory course quantum programming fundamental also intermediateadvanced course give detailed approach math physic tool required eld acknowledgement author thanks professor guido peterssen mario piattini useful discussion topic presented paper reference tym agenda quantum technology tno contributor list company involved quantum computing communication wikipedia free encyclopedia httpsenwikipediaorgwikilistofcompaniesinv olvedinquantumcomputingorcommunication accessed june zhang liu pan quantum information research china quantum sci technol math physic tool quality quantum programming metz white house earmark new money quantum computing new httpswwwnytimescomtechnologywhitehouseearmarksnew moneyforaiandquantumcomputinghtml accessed june schiermeier russia join race make quantum dream reality nature patra scalable cryocmos ghz digitally intensive controller frequency multiplexed spin qubitstransmons finfet technology quantumcomputers ieee international solid state circuit conference isscc kunming china riedel binosi thew calarco european quantum technology agship programme quantum sci technol bayer quantum technology foundation application httpswwwquante ntechnologiendeleadminpublicredaktiondokumentepdfpublikationenqutegaqt grundlagenundanwendungencpdf accessed june piattini talavera manifesto international workshop quantum software engineering programming talavera reina spain contributor quantum programming wikipedia free encyclopedia httpsenwik ipediaorgwikiquantumprogramming accessed june nielsen chuang quantum computation quantum information cambridge university press silva practical quantum computing developer programming quantum rig cloud using python quantum assembly language ibm qexperience apress biswas nasa perspective quantum computing opportunity challenge parallel comput piattini petterssen prezcastillo hevia murina certication schema quantum software engineer submitted international journal engineering education european committee standardization cen europeanecompetenceframework common european framework ict professional industry sec tor cen httpecompetenceseuwpcontentuploadseuropeanecompetence frameworkcencw apdf accessed june adapting cobit quantum computing governance miguel ngel blancoband mario piattini alarcos research group university castillala mancha paseo ciudad real spain miguelangelblancogmailcom mariopiattiniuclmes abstract quantum computing new paradigm us property quan tum mechanic achieve computer technology powerful quantumtechnology solve type problem efciently current tech nology every organization want power quantum computing competitive sector must method allows takeadvantage value technology provide article proposes development framework management governance quantum computing based cobit keywords governance management quantum computing introduction quantum computing emerging computing paradigm base quantum phe nomena solved type problem efciently current technology solves particularity quantum computing quantum technology principle quantum mechanic principle used development newinformation theory based qubit concept following characteristic quantum parallelism capacity qubit superposition state able contain state information time quantum entanglement property two qubits separated distance state one modied modied sametime situation two qubits would form quantum system noncloning theorem impossible duplicate unknown quantum state main application quantum technology sensor quantum sensor accurate entanglement property exceeding quantum limit application varied metrology scanner navigation springer nature ed adapting cobit quantum computing governance security communication quantum computing capable break efciently discrete logarithm using create security key cryptosystems thatuses reason necessary create new discipline quantum cryp tography help improve transmission information securely one important application technology transmission informationthrough quantum channel quantum simulation technology allow simulating behavior complex system currently possible current computing eld enabledevelop new material drug predict behavior nature application developed thanks construction quantum computer allow solve problem impossible solve actual technology currently noteworthy develop new classical algorithm using concept principle quantum computing improve application emerging technology blockchain articial intelligence internet thing future itwill interesting indicated consider analyze may affect new application quantum computing emerging technology blockchain application technology carried registration transaction immutable decentralized consensual quantum technology affect blockchain situation authentication block mining reversibility hash function internet protocol communication node articial intelligence large number study computation quantum technology different application articial intelligence solving problem difcult solve current machine learning technique nding pattern correlation unstructured data set allow themto classied analysis data set may intrinsic quantum type correlation internet thing internet thing consists network electronic device connected internet solve many problem quantum technology impact technology transmission device requiring creationof quantum telecommunication channel secure connection gwill necessary develop generation mobile communication greater speed lower latency achieved transmission information manyof manufacturer network focusing effort investment making resistant quantum computing concept discipline cryptography quantum security indispensable quantum technology interesting analyze impact result multiple industrial sector finance challenge nance sector quantum technology optimization asset price portfolio risk analysis fraud detection blanco piattini insurance potential application insurance sector evaluation nancial instrument option guarantee insurance product measurementof operational risk energy two main challenge energy sector facing quantum technology optimizing current network predicting appropriate energy transport trafc optimization tangible application sector logistics optimization operation related optimizing supply chain automobile aerospace management optimization large eets car autonomous plane main challenge sector chemist pharmacist simulation molecule discovery new compound main application quantum computing sector material simulation quantum computing able discover new material improve battery microcircuit network architecture company whose business one list invest quantum new framework help implement technology quantum computing company depending type industrial sector necessary implement one type quantum technology another table show relationship table relationship sector quantum technology sector computing communication simulation security sensor finance insurance energy transport automobile aerospace logistics chemist pharmacist material depending technology implemented company depending sector belongs focus different government guideline table show relationship main governance guideline quantum technology objective paper proposed change made cobit build governance management framework quantum computing technology rest paper organized follows sect explains important element cobit purpose study sect proposes change made cobit objective build framework quantum computing governance sect present conclusion future work researchadapting cobit quantum computing governance table relationship quantum governance guideline quantum technology governance guideline computing communication security simulation sensor development management testing management deliver management service management support management security management risk management cobit cobit framework developed isaca information system audit control association origin control audit area nowadays cobit framework focused enterprise governance information technology aimed whole enterprise enterprise governance information technology integral part corporate governance exercised board oversees denition implementation process structure relational mechanism organization enable business people execute responsibility support businessit alignment creation business value itenabled business investment see context enterprise governance information technology cobit framework cover two different discipline governance management following characteristic governance ensures stakeholder need condition option evaluated determine balanced agreedon enterprise objective direction set prioritization decision making performance compliance monitored agreedon direction objective blanco piattini management plan build run monitor activity alignment direction set governance body achieve enterprise objective strategic two discipline group governance objective main compo nents cobit set government objective shown cobit core model main characteristic cobit next governance framework built based principle based concep tual model open exible aligned relevant standard framework regulation governance system build based governance framework based six principle provide stakeholder value built number work holistic way dynamic fact change design factor impact enter prise governance information technology must considered distinguishbetween governance management activity structure tailored enterprise need cover enterprise end end function cobit core model group set government objective turn made set element component process organizational structure policy procedure information ows culture behavior skill infrastructureadapting cobit quantum computing governance dene design factor enterprise build bestt governance system component grouped governance management objective managed required capability level based cobit structure next section show proposal change made cobit objective development framework quantumtechnology governance toward framework government quantum technology developing framework quantum technology governance begin identifying main component cobit adapt remove add component business objective cobit group domain classied betweenthe government management discipline governance domain evaluate direct monitor evaluates strategic option directs senior man agement chosen strategic option monitor achievement thestrategy management domain align plan organize address overall organization strategy supporting activity build acquire andimplement treat denition acquisition implementa tion solution integration business process deliver service support address operational delivery support service including security monitor evaluate ass address performance monitoring confor mance internal performance target internal control objective andexternal requirement following section one business objective analyzed suggested action must carried developing framework forquantum technology governance different action proposed maintain objective cobit adapt adapt need quantum computing management new framework quantum technology governance remove case objective sense need quantum computing management delete include case necessary include new objective domain give consistency new context blanco piattini adapting objective domain evaluate direct monitor domain evaluate direct monitor edm group following objective table show action carried objective domain evaluate direct monitor develop framework government quantum technology feature different quantum computing classical computing affect business objective table action carried objective domain edm business objective action feature edm ensured governance framework setting maintenanceadapt external environment edm ensured benet delivery adapt delivery benet edm ensured risk optimization adapt edm ensured resource optimization adapt resource characteristic edm ensured stakeholderengagement adapt stakeholder need edm ensured alignment betweengovernance framework quantumcomputing governance framework classical computinginclude coexistence classical quantum paradigm company adapting objective domain align plan organize domain align plan organize apo group objective table show action carried objective domain align plan organize develop develop framework government ofquantum technology feature different quantum computing classical computing affect business objective domain build acquire implement domain build acquire implement bai group objective table show action carried objective domain deliver service support domain deliver service support ds group objective table show action carried objective domain deliver service support develop framework government quantum technology feature different quantum computing classical computing affect business objectiveadapting cobit quantum computing governance table action carried objective domain apo objective action feature apo managed management frameworkadapt feature computing paradigm apo managed strategy adapt external environment apo managed enterprisearchitecture adapt business architecture apo managed innovation maintain apo managed portfolio adapt feature computing paradigm apo managed budget cost maintain apo managed human resourcesfocus area adapt knowledge skill apo managed relationship maintain apo managed serviceagreements adapt relationship supplier apo managed vendor adapt relationship vendor apo managed quality adapt quality feature apo managed risk adapt apo managed security adapt security feature apo managed data maintain apo managed integration withclassical computing include coexistence classical andquantum paradigm company domain monitor evaluate ass domain monitor evaluate ass mea group objective table show action carried objective domain deliver service support develop develop framework governmentof quantum technology feature different quantum computing classical computing affect business objective blanco piattini table action carried objective domain bai objective action feature bai managed program adapt program requirement bai managed requirement denitionadapt stakeholder need requirement denition bai managed solutionsidentication build adapt solution architecture development methodology bai managed availability capacityadapt capacity availability feature bai managed organizational changemaintain bai managed change adapt change requirement bai managed change acceptance transitioningadapt acceptance requirement transition requirement bai managed knowledge maintain bai managed asset adapt business requirement bai managed conguration adapt asset requirement bai managed project adapt project requirement bai coordinate management classical quantum computingprojectsinclude coexistence classical andquantum paradigm company table action carried business objective domain ds objective action feature ds managed operation adapt operational requirement ds managed service request incidentsadapt service requirement ds managed problem maintain ds managed continuity adapt continuity requirement ds managed security service adapt security requirement ds managed business processcontrols adapt security requirement ds coordinate management ofdeliver service control classical quantum computinginclude coexistence classical quantum paradigm companiesadapting cobit quantum computing governance table action carried business objective domain mea objective action feature mea managed performance conformance monitoringadapt conformance requirement mea managed system internalcontrol focus adapt security requirement mea managed compliance external requirementsadapt external compliance requirement mea managed assurance maintain conclusion future work quantum computing technology emerging computing paradigm solve amount problem efciently nowadays solved currently technology computing quantum technology impact multiple industrial sector company invest technology great competitive advantage necessary develop quantum technology governance management frame work help organization implement technology take advantage article proposes construction governance management framework technology quantum computing proposing modications cobit governance management framework step development line research give rise analysis development implementation change made cobit order create governance management framework quantum computing technology reference mykhailova svore teaching quantum computing practical software driven approach acm technical symposium computer science educationsigcse acm portland humble debenedictis quantum realism ieee comput mit technology review httpswwwtechnologyreviewcomsseriousquantum computersarenallyherewhatarewegoingtodowiththem accessed june maslov nam kim outlook quantum computing proc ieee allende lopez quantum technology digital transformation social impact cross sector disruption interamerican development bank smarter gartner httpswwwgartnercomsmarterwithgartnertheciosguidetoqua ntumcomputing accessed june efe anticipating disruptive incremental innovation brought quantum computing isaca boston consulting group httpswwwbcgcompublicationsquantumcomputerscre atevaluewhenaspx accessed june isaca cobit framework isaca httpswwwisacaorgresourcescobitquantum agile development framework guillermo jos hernndez gonzlezband claudio andrs paradela aquantum madrid spain guillermohernandezmiformacioncom abstract interest quantum computing grown exponentially recent year large technology company engaging creation computer quantum technology number qubits skyrocket make future practical implementation mathematical algorithm creation commercial system increasingly viable however growth hardware accompanied programming engineering methodology adapted new paradigm new need risk associated also worldin current development project carried multiple paradigm asso ciated different need paper ndings proposal dened anticipate future need quantum software project management takinginto account new role requirement deciencies new technology specically focus dening classicalagile hybrid project management framework adapted need new programming paradigmstaking account quantum programming project integrate classicalquantum hybrid development keywords project management agile quantum computing historical context project management development framework could said publication principle scientic man agement frederic taylor idea need project management various scientic area planted evolution continues creation gantt chart foundation many others created people organiza tions pmi project management institute created lead creation series development framework whole currently call cascade traditional development framework original version type offramework proposed consolidated winston royce later revised barry boehm ian sommerville scrum named project management style transforming framework reference main strand development framework agile development springer nature ed quantum agile development framework current situation currently three main type management development project cascade classic framework methodology based philosophy cascade development xed phase agile framework methodology based principle agile manifesto hybrid composed mixed waterfall classic method typically early phase requirement taking classic design agilebased developmentcycles current situation current evolution classic project arise basis need project management different scienticareas provided series accumulated good practice allow applying aseries tool facilitating decisionmaking specic situation agile approach appear response uncertainty incremental complexity occurring expanded software project due series problem associatedwith said complexity lack knowledge little experience certain technical sector high level risk reduced time market business integration need quick response change since theory quantum computer begin emerge ibm announces creation quantum chip sale quantum computer made qubit dwave one dwave system launch quantum computer faster traditional computer ibm announces therst commercial quantum computer parallel creation quantum hardware system development tool begin appear created manufacturer com puters qiskit ibm mid development tool associatedwith hardware manufacturer initially microsoft december call quantum software software developed quantum computer simulator software currently developed used largely research scientic gradually company alongside adiabatic quantummachines commercial implementation according multiple study eld quantum computingbased software could immi nent transportation logistics telecommunication aeronautics health wellnesssciences government nancial service chemistry logistics therefore need able adapt create new framework devel opment method used development quantum software today itis difcult information management project since research managed must draw development experience quantum software within alhambra talk project hernndez gonzlez paradela status quantum software development project quantum software development project move highly complex experimental envi ronments due constant evolution underlying physical technology although positive way existing development tool stable positiveevolution despite complexity mentioned also true specialized literature begin appear specialized literature quantum software engineering qse whichtalavera manifesto good example particular relationship principle promotes contribute quality quantum software based try standardize lay foundation method managing development ofquantum software quantum software development project currently numerous feature neatly agile paradigm adding feature evolutionarily using trial anderror algorithm case quantum software project currently meet highest requirement agile management need time difcult dene animmutable end state fundamental characteristic quantum software development project many case due current situation hand hand classic softwaredevelopment project initially quantum software integrated traditional soft ware coexist part project driven fact organization going dispose current software system quantum softwareis necessary every software solution quantum machine least short medium term highly expensive case project totally different role coexist usual one project mustbe taken account integration requirement world ignored reason qse adopts coexistence classical quantum computing advocate reengineering technique integrate new quantumalgorithms existing classical information system reference framework although think idea taking scrum starting frame reference correct diffusion high percentage company however aware scrum limitation designed selfsufcient team relatively small volume people necessary transversal knowledge throughout project team case quantum software believe highly difcult perform impractical general agile project need type framework allows scaling multiple team work different element project sometimes creatinghybrid background framework safe nexus focus management multiple team case quantum software development project type vertical scaling add complexity known classic project due themultiprofessional integration team engineer mathematician physicist add case project integrate classical quantumquantum agile development framework software call classicalquantum project need able coordinate multiple team made different type professional verydifferent prole professional professional used therefore scaling team horizontally quantum project manager manage project based detailed knowledge process organization principle policy framework information culture ethic behavior people skill competency well service infrastructure application associated quantum software provided organization required adaptation order dene adapt agile framework necessary take account different type professional involved general quantum project could form team developer product owner scrum master noncomputer specialist actively involved project physicist mathematician statistician specializing quantum environment group speak different language interesting additional coordination role highly technical prole new specialist subject traditional setting common due characteristic quantum project possible consider starting construction phase without minimum minimal denition objective underlying architecture facilitates work type project reason initial phase inception agile environment also called sprint whichis part scrum considered mandatory feature project relationship external provider case access quantum computer necessity also element treated scrum thebest way work together must investigated prole also critical given said previously quantum hardware volatile element characteristic constantly evolve necessary redene scaling multidisciplinary team quantum software development project considered able team specialist shared different project order condense knowledge highly specialized layer facilitates access knowledge physicist mathematician multiple team working different project framework quantum software development project also take risk management account scrum explicitly take account therefore adaptive version project proposed fall within thatframework intermediate prole development quantum software usual development risk uncertainty linked evolution hardware development tool error management quantum software software coordination verydifferent prole hernndez gonzlez paradela adaptation approximation evolving improving creation practical knowledge associated realization greater extent andscale quantum software development project agile initially proposed agile framework take scrum reference extension general knowledge necessary adaptation point begin dene framework little scrum purist likescrumbut scrumorg partial adoption scrum modifying benet brings talking entirely new paradigm conviction quantum computing redene many concept therefore since consider thatit appropriate speak scrum management quantum software development project think would appropriate speak agile approach generic way focused decision making based experience empiricism scrum advocate close cooperation party involved stakeholder commitment collaboration support project accepting change way aligned changing need stakeholder continuous improvement process tool knowledge sharing business development team scientic prole classicquantum project due characteristic quantum project necessary quantum computer specic tool typical environment hand equivalent element point view classical computing istraditional computer current corresponding tool programming language specically designed quantum java classicquantum project addition technical complexity nddifferent approach denition management also talk possible life cycle life cycle based hybrid management combination agile waterfall would especially interesting facilitate developmentbut also evolution hybrid lifecycles software project general different life cycle applied depending type need project undertaking pmi project management institute inc quantum agile development framework predictive traditional classic project scope time cost project planned xed initial phase project iterative set scope initially vary estimate time cost progress project incremental deliverable generated series iteration whose functionality considered complete last iteration adaptive agile scope dened start iteration sprint case scrum hybrid predictive adaptive life cycle coexist simultaneously life cycle execution certain project particular quantum one generate additional complexity decision hybrid life cycle agile traditional methodology used phasepredictive depends need restriction phase technology quantum development project propose hybrid approach robust requirement design phase require quantum software integra tion including agile cyclebased development giving exibility uncertaintyand change must keep mind many case even work two independent team one focused traditional project part another specialized team quantum computing charge giving differential value proposed quantum solution team managed coordinated thanks new proposed coordination role sharing product backlog holding meetingssimilar scrum scrum proposed scrum hybrid solution explain provide solution com plexity embark project always placing special emphasis following point take best approach coordination various work team quantum classic team followup meeting review progress team team planning based phase milestone backlog based phase instead complete product backlog inception phase general project apply scrum framework dene specic phase limiting generic construction phase division analysisor testing phase sutherland schwaber even approach generates certain drawback classic project initial knowledge problem solved development team therefore classicalquantum project isgreater uncertainty due lack maturity technology considers interesting dene least initial phase believe initial inception phase integrated beginning classic phase traditional part design allow share among participant project architecture team initial identication risk testing strategy vision project required technological need hernndez gonzlez paradela phase followed classical design phase part ultimately assigned quantum team minimize uncertainty phase agileinception critical create common product idea lay foundation collaboration different quantum classical team general lay series foundation classicalquantum integration construction phase development project take place including test deployment environment classical quantum evolution quantum technology therefore project determinewhether formal denition specic phase deployment transition called disciplined agile necessary risk management good practice risk identication propose identication risk categorization started soon possible series measure minimize risk applied demarco lister early identication start inception phase better still preproject phase inthe creation business case justies start project category proposed type project based possible area greatest conict complexity following quantum hardware quantum software quantum algorithm stakeholder role project various role specic different type project depending sector benet quantum computing applied simulation development new material development new medicine cryptography machine learning specialist sector professional directly associated practical application knowledge expertise business fundamental specic industrial sector procurement manager purchasing expert appropriate experi ence understand capability limitation different provider quantum computer enable reach appropriate agreement type project sector depending need project algorithm applied eitherquantum agile development framework number qubits error level response type computer required aqcadiabatic quantum computation qaquantum annealing mathematician physicist specialist applying skill great unknown typical software project case project include quan tum software development provide mathematical knowledge necessary forthe denition quantum algorithm available solving specic problem associated project final conclusion due characteristic quantum project necessary quantum computer specic tool typical environment handthe equivalent element point view classical computing traditional computer current corresponding tool programming language specically designed quantum java inthese classicquantum project addition technical complexity different approach denition management also talk possible life cycle life cycle based hybrid management combination ofagile waterfall would especially interesting facilitate development also evolution reference taylor principle scientic management dover publication new york gantt work wage prot engineering magazine new york royce managing development large software system proceeding ieee wescon boehm spiral model software development enhancement acm sigsoft softw eng note sommerville software engineering addison wesley boston accenture lab innovating quantum computing homeland security research corp quantum computing market technology hsrc january piattini talavera manifesto quantum software engineering program ming piattini qanswer quantum software engineering programming ceurws talavera reina source code structure quantum code insight qdk miguelangel siciliab salvador anchezalonso mar cal moracantallops elena garc abarriocanal computer science department university alcal polytechnic building ctra barcelona alcal henares madrid spain msiciliasalvadorsanchezmarcalmoraelenagarciab uahes abstract considerable number highlevel quantum programming language proposed implemented last year fact open possibility study structure source code quantum software using initially metric typically used classical software report preliminary study module structure quantum gate library microsofts quantum devel opment platform qdk quantum developer kit us speciclanguage structure dependency primitive analyzed across source code available github repository related platform date keywords quantum programming language software metric dependency structure introduction highlevel programming language quantum computer proposed discussed since decade even actual quantum computer run program recently number software platform emerged used emulator include tool library basicand fundamental algorithm implemented along specic library application chemistry nance domain several generalpurpose gatelevel quantum computing software platform appeared last year notable example include forest rigetti qiskit ibm projectq eth zurich quantum development kit qdk microsoft understanding software engineering aspect specic high level quantum programming language key driver eventual future context quantum computer gain widespread still early reach conclusion due language platform asthose mentioned present opportunity research given open source nature make candidate empirical study coding practice ccirclecopyrtspringer nature ed source code structure quantum code insight qdk focus microsofts qdk understand structure library code example provided perspective module dependency andthe specic quantum primitive gate preliminary study analyze code using construct often used classical software metric deferring proposal quantumspecic metric future work rest paper structured follows section provides background element analyzed result regarding dependency sub routine structure provided sect finally conclusion outlook provided sect background programming language initially released public microsoft part qdk qdk includes quantum computer simulator hardware stack eventually come together expected toimplement topological qubits program consist one operation describe side eects quantum operation quantum data several function classical code depart assumption theremight specic element quantum programming deserve attention empirical software engineering standpoint level source code level modular structure regard briey consider previous work useful point departure source code metric source code metric classical software based line code loc counting objectoriented code structure complexity metric used number past study specics separation concern betweenquantum operation regular code addressed date may considered outside kind procedural programming internals quantum operation abstracted recent systematic review cyclomatic complexity traditional loc used study together number counting involving operator operandsor statement name review identied new metric proposed recent year related aspectoriented paradigm approached metric concentrating main quantum primitivesas may reect complexity program better measure based traditional control structure consideration aggregation quality metric also important quantum program hypothesized dierences quantum programming classical programming make existing reported empirical study comparable new study focused quantum code recent study show threshold source code metric andtheir signicance predictor defect hardly taken baseline quantum code scope maturity creator latter likely completely dierent sicilia class dependency graph class dependency graph network built relationship among theclasses software system node represents unique class link reect dependency class dependency network con structed header information class information oftendetermined group developer actual software development take place could argued le inuenced subjective eect particular developer previous work shown graph useful tofor instance study java library author also used complex network analysis dependency network capture structural characteristic enable maintainability reliability analysis analyze evo lution software system acknowledging technique provide dierent dimension understanding software evolution becoming useful design development software system easing process identifying software component violated common software design princi ples also principle behind zimmermann nagappans work evaluated window server found using network met rics model improved ten point identied twice many critical binary complex network analysis approach thus provides additional toolsand metric ass potentially improve software quality traditional software reliability evaluation approach lack analysis intercomponent interaction componentbased software system result discussion primitive usage extracted source code appearance primitive namespace microsoftquantumintrinsic acknowledge decision exhaust signicant aspect code complexity library seems obvious chosen attempt understand codebasefor purpose analysis separated primitive number category assertion assert asserprob gate ccnot cnot swap rotation rfrac rfrac transformation exp expfrac initialization reset resetall therandom operation kept apart performs random index selection array based array value dicult group category httpsdocsmicrosoftcomenusqsharpapiqsharpmicrosoftquantumintrinsic noted operation mresetz include various primitive one sentence included may aect result thanks anonymous reviewer pointing thison source code structure quantum code insight qdk concretely information extracted tuples information call according format module operation primitive also information length module line code form module mloc operation opposed regular function called classical net application well operation within qeach operation dened may call number operation including builtin intrinsic operation dened language total call intrinsic subroutine module le obtained around callsacross source code found gate initialization rotation amount measurement transforms noted function operation structured namespaces total subroutine identied call function rest operation appears consistent fact function pure thus allowing many type call deterministic inside figure show rough distribution size module considering number call primitive module loc apparent moduleshave small size reduced number call hexbin view module loc number call primitive distribution call per subroutine highly skewed maximum mean subroutine eight call closer examination number lead conclusion com plex subroutine call primitive concentrate fundamentally teststhe subroutine two standard deviation away mean inspected three containing module test bundle systemtestqs qecctestsqs testsqs systemtestjwoptimizedesqs representative complexity longer operation exptest sequence combina tions transformation primitive dierent gate surrounded ini tialization assertion per test operation deserves attention sicilia islogicalandmeasandfix inmultiplexerqs implement logical multiple qubits algorithm based yet optimization due generalpurpose applicability considered critical module near two standard deviation threshold applyoraclefromfunctiononcleantarget implementing oracle black box operation used input another algorithm given function another example fundamental building block algorithm attempted frequent pattern cooccurrence gate subrou tine using algorithm apriori fpmax frequent pattern gate hand however correspond superposition common operation found relevant interpretation forthe pattern detailed denitions language found open source compiler concretely grammar dened syntaxprocessing mod ule microsoftquantumqscompiler namespace written developed partial language processor using slypython library dependency structure class dependency graph qdk library shown compared api reference provided microsoft dierences benoticed microsoftquantumcore appear expected name pace opened automatically compiler element always available microsoftquantumenvironment imported library qdk function provide information environment quantum computation occurring library found dependency graph deprecated include preceded microsoftquantum extensionsbitwise extensionsdiagnostics extensionsmath exten sionsoracle extensionstesting andprimitive microsoftquantumextensionsconvert although deprecated replaced microsoftquantumconvert still imported one class microsoftquantumbitwise imported class even though replaces microsoftquantumextensionsbitwise table list library number library directly depend transitively depend reciprocity percentageof number reciprocal dependency interesting ndings dependency derived link analysis algorithm hit hub authority applied directed graphformed class dependency qdk library hit assigns two score library authority hub value according original formulation httpsgithubcomdabeazsly source code structure quantum code insight qdk dependency graph library microsoftquantum table direct dependency transitive dependency reciprocity library library amplitudeamplication extensionsdiagnostics arithmetic extensionsmath array extensionstesting bitwise intrinsic canon logical characterization machinelearning chemistry machinelearningdatasets chemistryjordanwigner math chemistryjordanwignervqe measurement convert optimization core oracle diagnostics preparation environment primitive errorcorrection researchcharacterization extensionsbitwise researchchemistry extensionsconvert simulation context web page authority page estimate value content page hub value estimate value link page applied graph dependency authority value represents relative importance given library term number import fromother library library intrinsic includes primitive operate quantic processor calculation relative importance odk sicilia library would biased presence intrinsic produced new dependency graph intrinsic removed figure show distribution authority value rest qdk library four dierent level distinguished library high authority value imported library average value library represent middle class status low authority value library null nally value zero representing library imported hit authority importance library term imported conclusion outlook empirical study source code metric eventual relation software defect addressed date reported herein study source code analysis quantum code microsofts github repositoriesusing language insight primitive operation source code unsurprisingly majority made gate call reset operation module number call show ahigh density call relative loc subroutine high density call mostly test except fundamental generalpurpose algorithm deserve attention critical building block study network dependency perspective transitive dependency hit authority show core library imported many others far optimal situation seems prone error propagation future work include circuitbased quantum programming language additional library eventually available dependency primitive usage shouldon source code structure quantum code insight qdk complemented analysis interface operation signature code structure cyclomatic complexity functional composition comeup better understanding programming pattern also account number qbits used operation potential driver complex ity finally preliminary data presented initial step towardsan understanding pattern pitfall highlevel quantum programming eventually combined knowledge internals quantum language compiler also higher level usage across application domain reference larose overview comparison gate level quantum software platform quantum nezvarela erezgonzalez mart nezperez soubervielle montalvo source code metric systematic mapping study syst softw mordal anquetil laval serebrenik vasilescu ducasse software quality metric aggregation industry softw evol process yamashita threshold size complexity metric case study perspective defect density ieee international conference software quality reliability security qrs vienna austria august subelj bajec community structure complex software system analysis application phys stat mech appl chong lee analyzing maintainability reliability objectoriented software using weighted complex network syst softw pan liu multigranularity evolution analysis software using complex network theory syst sci complex zimmermann nagappan predicting defect using network analysis dependency graph schafer dwyer gruhn ed proceeding ofthe international conference software engineering leipzig liu zhai liu novel reliability analysis approach componentbased software based complex network theory softw test verif reliab gidney halving cost quantum addition quantum javadiabhari scacc scalable compilation analysis quantum program parallel comput safety security privacytowards framework improving experiment do attack marta catillob antonio pecchia umberto villano dipartimento ingegneria universit degli studi del sannio benevento italy martacatilloantoniopecchiavillano unisannioit abstract recent year number solution proposed detection denial service do attack beentuned tested mean publicly available labelled datasets conveniently used overcome scarceness reallife data gathered incident attack production environmentsnotwithstanding high detection rate existing algorithm little concern representativeness public trac data impact continuity operation victim service paper present starting step towards framework replaying assessing do attack framework aim improve experiment do attack allowing replay previouslyrecorded attack networktrac feature number component victim load generator allow conduct experiment controlled cong urable environment overall make possible ass do tracitself contextualize eect service assessment potential countermeasure framework tested mean direct do emulation trac replay keywords do trac replay network capture dataset introduction nowadays denial service do attack pose signicant threat avail ability network service do attack malicious user oods victim server many service request aim clogging even interrupting activity server may fail provide service legitimate user context early attack detection prevention arecrucial order guarantee continuity service end user last year do attack evolved second generation called slow do attack lowbandwidth approach exploit applicationlayer vulnerability thanks plethora readytouse easytond attack tool available net performing ooding slow do attack extremely simple require coding expertise however tool made extremely easy task attacker hand led collection datasets network trac attack used intrusion detection research ccirclecopyrtspringer nature ed catillo number countermeasure taken year mitigate do attack conventional approach based monitoring connection request rate requesting client whose connection request rate higher preestablished threshold marked attacker course mostly uneective slow do attack moreover case even alegitimate requesting user could shortterm burst connection request without leading attack moreover mostly uneective slow do attack recent year rapid diusion deep learning techniquesmany machine learningbased do detector spread literature solution achieve encouraging result term detection rate case even reach value close case experimentation evaluation new detector take place publicdomain datasets used sort benchmark ass validity given pro posal data typically made available form pcapdata le correspond several dierent attack emulated test environment popular publicdomain intrusion detection datasets cicids unswnb iscx unfortunately time datasets used blindly thus overlooking representativeness trac data therein matter fact relevant literature possible observe tendency topay attention tuning detection algorithm data algorithm evaluated would invalidate eectiveness detection realworld trac condition necessary ensure thatresearch datasets conform representative operating condition paper represents starting step towards framework replaying assessing do attack aim improve experiment do attack allowing replay previouslyrecorded attack trac available packet data le within controlled congurable environment particular tool lever age pcaptrace le typically generated network utility program tcpdump framework designed meet several open chal lenges current do research public research datasets might conform representative operating con ditions replay tool could key component assessing impact oftrac data consequent construction rigorous intrusion detec tion datasets noteworthy many existing intrusion detection datasets come pcaptrace le replayed within framework many machine learningbased algorithm currently spreading detection network intrusion particular do attack tested evaluated public domain datasets contain do attack launched simulated environment framework support tuning detection algorithm reliving attack within controllable andcongurable victim service load condition finding suitable defense threshold system assessment always complex operation since replay tool allows eective evaluation impact do attack could used understand whether strengthen loosen defense appropriatetowards framework improving experiment do attack although literature trac replay tool network anal ysis purpose framework allow carry trac assessmentsin structured way aim conducting comprehensive security experi ments ultimate goal create framework collect series best practice trac replay one conduct rigorous security experiment framework feature number component victim server load generator allow replay attack trac data controlled environment congure desired workload condition framework istested mean direct do emulation trac replay cicids recent dataset gaining massive attention community result indicate tool reproduce impact previouslyrecorded dosand conveniently replay thirdparty data existing dataset paper organized follows section deal related work section describes replay approach paper illustrates framework sect describes experiment aim provide practical insight usage sect finally conclusion drawn future work outlined related work many solution literature propose detection algorithm tuned tested mean public domain intrusion detection datasets trace based machine learningbased do detection system presented approach used author based inference detection rateachieved instead described feature reduction method order detect do reduced feature space part classier best author hit recall do hulk author describe hierarchical intrusion detection system provides combination several classiers system us three classiers placed dierent level training phase reach overall detection rate falsealarm rate finally author propose do anomaly detec tor us deep autoencoder core component infrastructure author highlight potential proposal day attack context network security experiment appropriate tool generating controllable reproducible realistic network trac extraordinary importance therefore aim testing environmentsfor security product time several network trac replay tool spread general replay tool either stateless orstateful follow stateless approach replay packet according timestamps content replayed network packet exactly stored original network trace hand stateful replay tool much sophis ticated manage state connection replay therefore content replayed network packet may need altered order new network conguration payload generation method instead replay tool alter payload original packet others able replay packet new regenerated payload catillo table replay tool summary comparison tool stateful payload approach main feature tcpreplay original payloadtracebased replay trace aspecied rate tcpliveplay original payloadtracebased replay trace usingnew tcp connection tcpopera original payloadstatisticalbased tcp state emulation tool original payloadtracebased tcp replay securityexperiments another possible dierence tool follow tracebased replay others perform statistical replay former provide trac sent network replay identical trac contained capture latter instead analyze original captured trac order collect statistical information overall packet frequency timing packet etcand generate new trac trace similar original capture one famous replay tool surely tcpreplay fact suite tool containing series opensource unix utility particular tcpreplay commandline tool designed work standard network card simply replay previously captured trac trace specied rate anddoes actively modify information transport layer header payload packet however tcpreplay completely stateless unable handle update tcp sequence acknowledgement number suchalthough replay trac server actually communicate server order overcome limitation suite provides tcpliveplay tool replay packet capture statefully keeping track updating tcp sequence number finally tool performs statistical replay tcpopera designed stateful emulation tcp connection tcpopera provide trace based replay captured data develops analytics packet trace creates statistical model identied event nally generates synthetic trac ows model tool hinge framework proposed paper us state ful replay approach starting captured do trace pcapformat preserving original payload packet unlike aforementioned tool designed essentially network analysis diagnostic activity conceived lightweight readytouse solution replaying assessing do attacksthat typically appear pcap format intrusion detection datasets therefore key tool conducting robust experimentation validation detection technique commonly tested tuned public do networktrac data cybersecurity research table summarizes characteristic cited replay tool respect proposaltowards framework improving experiment do attack preliminary replay tool background approach briey mentioned introduction framework hinge tool allows replay previouslyrecorded network trac realistic conditionsso measure impact attack suitablycongured web server load condition one hallmark replay tool surely simplicity term design matter fact given input pcaple used common command line tool particular input pcaptrace contains network capture want replay case includes do attack web server pcap packet capture le commonly used storing trac network trace currently multiple widely accepted pcap format one popular libpcap name derives library name formally dened libpcap oldest pcapformat popular mainly default format used widely used network application tcpdump addition intrusion detection datasets provide do trace libpcap format typical structure libpcap shown particular element aglobal header general trac information correction time specic endianness biglittle follow packet characterized packet header including timestamps data size packet data previously mentioned replay tool follows tracebased replay app roach particular ultimate goal relive previouslyrecorded trac towards arbitrary address brandnew socket connectionswithout altering payload original packet therefore since tool support replaying data exchange tofrom server considered fully stateful feature trivial existing replay tool able replay trace using new tcp connection worth pointing pro posal closest work oers similar replay service tcpliveplay unfortunately tcpliveplay purpose produced expected result weakness tcpliveplay also conrmed intense ongoing bug xing activity carried community libpcap structure httpsgithubcomappnetatcpreplayissues catillo http flag sseq win option ms sackok val ecr nop wscale length http flag ack win option nop nop val ecr length http flag seq ack win option nop nop val ecr length http get http humanreadable tcpdump three example packet implementation tool implemented python exploiting dkpt module fast packet creation parsing denitions basic tcpip protocol unlike available software tool replay trac rate originally recorded pcaple functionality extremely important reproduce eectively original trac condition whole replay process start acquisition do pcaple lead replay original trace described input pcap containing previouslyrecorded do attack extract packet sent given source address given destination specically source anddestination identify attacker victim respectively visual sim plied representation pcapcontent shown show human readable tcpdump three example packet one packet span three line sent byip toip address match attacking victim node used testbed presented next section important note gure show small window input pcaple typically consists million packet given input packet since want replay twoway communication data exchange tofrom server destination address rewritten address server node towards trac intended sent replay purpose adjusted scanned sequentially packet tool either discard stage development focus tcp trac everything else discarded mimic socket operation basedon value flag eld shown rightmost part line flag letter meaningful operation performed example tool initiate new socket connection upon sie synpacket sends data upon pie pushpacket operation dierentiated basis timestamp packet contained original capture allows intercept replay actual timing recorded packet moreover atany time tool maintains suitable number active concurrent connection httpsdpktreadthedocsioenlatest towards framework improving experiment do attack replay process towards destination address based actual number socket opening closing operation encountered across input packet whole replayprocess depicted worth noting current implementation replay tool tuned manage isolated case example original pcaptrace may packet corresponding geturl request valid original victim node invalid server replay experiment beingperformed furthermore tool might accidentally attempt replay ssh traf consequent unavoidable authentication issue although yet addressed issue current implementation allows successfullyreplay signicant class do attack particular able replay ooding slow do two do category exploit distinct attack strate gy therefore leave dierent ngerprints inside trace le thebehavior replay tool always aligned specic type attack replayed later proposed framework striving comprehensive framework consisting number compo nents allow conduct controlled congurable do experiment whilstour replay tool key addition towards addressing several open challenge do research stated introduction typical security experiment includes step attack emulation trac data collection evaluationof performance metric core trac replay tool meant instantiated controlled network testbed featuring victim sever target assessment load generator component supplying con gurable workload exercise victim supplementary attacker node allows conduct controlled attack emulation aimed complementing ndings obtained mean replay although covered starting stage future framework enriched additional facility network ows extractor intrusion detector accompaniedby suitable data ltering algorithm overall framework conceived follow series best practice computer performance evaluation catillo node usage mode current proposition framework instantiated mean four network node lan follows attacker emulates attack mean suitable do tool hosted kali linux node attacker allows replay do attack reliving network trac gathered do previous capture stored pcaple victim apache web server node load generator trigger httperf http request serve benign background load exercise check status web serverduring experiment information node reported table noteworthy framework set allows make experiment involve direct emulation replay previouslyrecorded attack support twodistinct usage mode attack emulation mode consists emulating real attack mean given do tool attack replay mode consists replaying do attack reliving network trac previous capture attacker node used follows attacker allows emulating real attack mean various do tool hosted kali linux node unused replay mode attacker instead allows replay attack reliving network trac previous capture stored pcap unused emulation mode therefore experimentation phase two attacker never simultaneously active worth noting operating modesthe web server exercised concurrently do trac either emulated replayed two mode respectively benign background http load generated httperf selected apache web server signicant case table node description address role operating system application victimubuntu lts apache webserver load generatorubuntu lts httperf attacker kali gnulinuxroling do tool attacker macos sierra proposed replaytool httpsgithubcomhttperfhttperf towards framework improving experiment do attack proposed assessment framework study given widespread show complete representation framework component congurations evaluation metric order emulate realistic experiment adjusted web server default parameter found etcapacheapacheconf typical linuxbased system may representative reallife produc tion server adjusted conguration set maxkeeplaliverequests number request connection unlimited threadlimit threadperchild maxclients crucial parameter making realistic assessment production server current focus do attack type attack often involves opening substantial number concurrent connection target default unixlike machine often ceiling allowed number simul taneously open le default hence maximum number ofcurrently opened socket available process set number ulimit launching attack number large enough avoid interference saturation eect operating system evaluationmetrics selected experiment load desired level load stress web server testing timeframe set value exploiting parameter supported httperf total connection http request per connection connection rate load submitted server measured http request per second reqs following catillo response time time taken serve request measured mil liseconds useful evaluating server performance completed http request response time fundamental index impact qos perceived application user conducted capacity analysis web server performing experiment order discover maximum load handled server attackfree condition detail capacity analysis omitted due space limitation however found normal dosfreeconditions server testbed without exceeding maximum load capacity experimental result experiment aim provide practical insight usage proposed framework replay do attack evaluation twofold replay fully controlled do attack generated within framework replay do taken stateoftheart public research dataset former intended demonstrate ability framework reproducing impact ado latter entail potential case framework assessing resiliency victim service leveraging existing thirdparty malicious trac experiment presented focus slowloris do attack aim saturate victim server opening connection never completing http request wellknown applicationlevel attack often eective strongly relevant context work replay controlled do mimic real slowloris do beforehand emulation done con trolled network attacking victim server wellconsolidated slowloris github tool hosted kali linux node attacker referred original attack throughout section moreover progression attack victim undergoes aconcurrent benign load reqss generated httperf whose response time monitored order ass impact do noted stage also record attack trac pcappacket data replayed later purpose framework figure marked series show varies progression original attack plot xaxis represents time since beginning experiment yaxis given log scale better appreciate uctuations around low value duration experiment large enough collect alarge sample observation order make statistical claim noted attack impact service operation whose attackfree condition occasionally cause httpsgithubcomgkbrkslowloris towards framework improving experiment do attack original attack replay yaxis log scale boxplot response time signicant degradation noteworthy seen typical maximum tolerable delay response web server order usefully deployed multilayer workows second part experiment consists replaying trac recorded original attack aim verify whether reproducesimilar eects server previous experiment victim server exercised load reqss progression replay however attacker represented replay node fed thepcaple recorded rather kali linux measured replay shown marked series superimposed original attack better comparison interestingly appearance time series similar replay seems reasonably well mimic original attack beside visual test conduct statistical analysis figure show paired boxplots response time original attack replay leftmost boxplot highlight sporadic outlier depicted marked point case original attack notably iqrs inter quartile range catch dispersion around median value strongly overlap table show sample mean standard deviation condence interval inter quartile range iqr boxplot dierence thirdand rstquartile catillo table summary statistic within original attack replay mean standard deviation condence interval original replay cicids slowloris yaxis log scale observation ltering outlier noted sample mean original attack within replay viceversa reasonably claimed impactof original attack replay statistically dierent data hand proposed replay framework produce attack statistically original term eects server replay thirdparty do present replay experiment done slowloris attack trac cicids worth noting cicids recent dataset gained massive attention community experiment done show potential framework handling unseen thirdparty trac given thepcappacket data available datasets webpage extract packet sent attacker victim cicids respectively within timeframe slowloris attack emulated author rewrite destination address victim server testbed pcapobtained fed replay framework run victim web server previous experiment victim undergoes concurrent benign load reqss monitored measure figure show varies replay cicids slowloris yaxis log scale surprisingly noted attack cause marginal uctuations normative response time httpswwwunbcacicdatasetsidshtml towards framework improving experiment do attack server attackfree condition another interesting outcome attack always signicantly lower msagain indi cation maximum tolerable delay response many practical setting remark scarse eectiveness attack quite surprising given large body literature anomaly detection capitalizes cicids closer look cicids slowloris trac revealed although somewhat relevant due abusive consumption network resource attack disruptive enough well tunedup serverresembling reallife conguration one testbed although beyond scope paper nding major practical implication come representativeness public datasets cybersecurity research investigated future noteworthy pro vides initial insight abovementioned challenge do research pertains potential limitation existing datasets conform representative operating condition particularly relevant context machinelearningbased research attack detection appears beamong major case public datasets far conclusion goal work meet several open challenge do cybersecurity experiment focus quality network capture datasets paper step towards design framework replaying do attack theimplementation tool allows relive previouslyrecorded network trac work driven observation research datasets might con form representative operating condition show validity proposalby evaluating replay fully controlled attack do taken stateoftheart public research dataset result show proposed frame work replay do attack obtaining statistical standpoint thesame eects server original attack framework stateoftheart datasets give valuable insight actual representa tiveness cybersecurity research analysis conducted futurein order provide concrete guideline construction rigorous datasets long term objective develop integrated set tool enable trac assessment structured way aim creating complete security experiment particular aim create readytouse framework researcher practitioner enables security experiment starting deep analysis data ending tuning detection algorithm future extend replay tool support additional attack scenario extend analysis datasets thosedesigned evaluate do attack attack victim platform catillo reference aaron bing tcpreplay tool httpstcpreplayappnetacom ahmim maglaras ferrag derdour janicke novel hier archical intrusion detection system based decision tree rulesbased modelsin international conference distributed computing sensor system ieee alizadeh data center tcp dctcp acm sigcomm comput com mun rev catillo rak villano discovery do attack zedids anomaly detector high speed netw cotroneo paudice pecchia empirical analysis validation secu rity alert ltering technique ieee trans dependable secure comput harris developmentlibpcapleformat march httpswikiwireshark orgdevelopmentlibpcapfileformat hong interactive internet trac replay valdes zam boni ed raid lncs springer heidelberg kshirsagar kumar identifying reduced feature based igthreshold do attack detection using part hung dsouza ed icdcit lncs springer cham lima filho silveira faf medeiros brito unior vargassolar silveira smart detection online approach dosddos attack detec tion using machine learning secur comm netw liu lang machine learning deep learning method intrusion detec tion system survey appl sci manta stakhanova gonzalez jazi ghorbani application layer denial service attack taxonomy survey int inf comput secur moustafa slay unswnb comprehensive data set network intru sion detection system unswnb network data set military communica tions information system conference ieee purwanto kuspriyanto rahardjo trac anomaly detection ddos ooding attack international conference telecommunication system service application sharafaldin lashkari ghorbani toward generating new intrusion detection dataset intrusion trac characterization international confer ence information system security privacy scitepress shiravi shiravi tavallaee ghorbani toward developing system atic approach generate benchmark datasets intrusion detection comput secur siam tcpreplay tool httpstcpreplayappnetacomwikitcpliveplay manhtml sikora gerlich malina detection mitigation slow rate denial service attack international congress ultra modern telecommuni cation control system workshop zargar joshi tipper survey defense mechanism dis tributed denial service ddos ooding attack ieee commun surv tutor cloud secdevops methodology design testing valentina casola alessandra benedictis massimiliano rak giovanni salzillob university napoli federico naples italy valentinacasolaalessandradebenedictis uninait university campania luigi vanvitelli aversa italy massimilianorakgiovannisalzillo unicampaniait abstract devops becoming one popular software devel opment methodology especially cloudbased application spite popularity still dicult integrate nonfunctional requirement security full application development lifecycle recent work security devops secdevops intro duced order enable adoption securitybydesign principlesin devops process novel secdevops methodology pro posed exploit integration security assessment test ing performed static approach paper propose toextend secdevops methodology adoption novel secu rity testing technique order dynamically test security property operational phase order validate proposed approach cloud application case study involving wordpress software module presented analyzed keywords secure development methodology secure cloud application security testing introduction devops methodology becoming popular especially development cloudbased application spite wide adoption hardly integrated security design methodology term secdevops security devops recently appeared researcher developer community management security devops life cycle still hard due lack automatic tool evaluate ass security design andthe operation phase author introduced novel securitybydesign development methodol ogy cloud application providing automated mechanism support developer securityrelated analysis design assessment phase develop ment process secure design software engineering mean software designed foundation secure aim alternate ccirclecopyrtspringer nature ed casola security tactic pattern thought among best selected enforced application designer used guiding principle developer approach proposed used model quan titative metric enable securitybydesign approach help developer take secureinformed choice moreover author showed easy beadopted devops team mainly developer tester security expert could easily integrated within common agile methodology scrum despite potential however methodology present limitation fact meant support developer design deployment phase secure application enabling perform preliminary security assessment take account possible security issue may arise deployment order ensure designed security feature correctly enforced deployment fact security assessment include dynamic security testing application operation overcome limitation paper propose extension secure devops methodology entail integration dynamic security assessment process operational phase provided adoption inno vative semiautomated security penetration technique demonstrate theextended methodology applied case study application showing possible launch guided security test detect possible aws design implementation phase would otherwise dicult identify justa static security assessment reminder paper structured follows sect extended secure devops methodology sect discus security testing phase methodology proposed enable semiautomation pene tration test sect illustrate application testing methodology case study cloud application sect report relevant work existing state art discus limitation current approach finally sect draw conclusion discus future work innovative security devops methodology anticipated introduction author proposed securitybydesign methodology development secure cloud application relying upon guided risk analysis process completely automated security assessment phase methodology meant support application developer throughthe execution three fundamental step securityaware development process identication existing security threat based application architecture implementation based type involved software component internal behavior component interconnection identication needed countermeasure mitigate existing threat term standard security control cloud secdevops methodology design testing assessment actual security control enforced application depending whether control integratedinto application implementation also enforcement con trols lower level level software hardware resource used application deployment whole methodology leverage security service level agreement sla model application security requirement identied risk analysis process security guarantee application able provide based assessment result security slas built compliancewith reference model introduced enables express security feature requested granted generic service term standard security control belonging standard security control framework paper inparticular refer nist security control framework collect dierent technical organizational security control belonging dierent family step carried semiautomated way requiring intervention developer team starting model application development suitably exploiting complex knowledge base threat catalogue collect several wellknown threat dierent domain particular regard application modeling author adopted macm formalism originally proposed model multicloud applica tions macm formalism enables easily describe highlevel architecture complex application term graph whose node represent main component building application whose edge represent compo nents interconnection shown table report component type currently supported macm formalism macm node model logic component together help realize application behavior also allow representation resource enable application deployment execution possible thirdparty provider resource regard supported node interconnection macm formalism dis tinguishes among dierent relationship provides identies service either iaa saas oered given csp host identies saas service deployed infrastructure resource usesidenties dependency among service finally worth mentioning macm formalism enables also model security feature component slas represented com pliance reference model presented mentioned whole methodology relies upon threat catalogue suitably map together dierent concept related asset component type wellknown threat aecting specic asset security control mitigate threat thanks catalogue possible elicit security requirement application based behavior internal structure performing guided risk analysis aimed identifying existing threat casola table macm node type node type description csp service provider oers generic cloudbased service iaasservice cloudbased infrastructure resource virtual machine saasservice software service either developed adhoc oered directly external csp need infrastructure resource deployment execution quantifying related risk moreover leveraging information included catalogue possible verify whether elicited requirement aremet application implementation even considering impact selected deployment conguration security assessment procedure carried mean composition process discussed detail leverage set predened composition rule suitably identied invoked based security control ass application model input output process assessed sla representing set securityrelated guarantee application nominally able provide data model supporting methodology shown allows link together dierent concept including vulnerability threat attack andcontrols used novel testing technique security modela cloud secdevops methodology design testing despite great potential summarized methodology limitation fact supported security assessment process statici sense consider actual application behavior runtime performs forecast based static information collected apriori deployment execution adding support dynamic assessment term ofsecurity testing runtime would sensibly improve eectiveness utility whole methodology especially order make better suited complete secdevops process reason came enhancementof methodology presented sketched extended security devops methodology shown gure included step security ass ment phase devoted security testing step application tested launching penetration testing campaign conducted basis information included threat catalogue model applica tion case cloud application test conducted private cloudenvironment core idea link detected security violation reported test result failing missing security control shown comparative analysis test report assessed sla built theend assessment phase provides feedback previous phase control belonging assessed sla detected failing test report mean probably somewhere implementation acomponent security assessment phase relies catalogue may complete report identify violation control included assessed sla mean control considered risk analysis therefore phase must repeated adding new requirement author presented preliminary technique enable automated penetration testing cloud application sketching main needed step identifying information collect automate much possiblethe test paper rene extend technique integrated methodology presented detail next section casola automating security testing phase security testing phase secdevops methodology relies upon automation penetration testing technique leveraging security sla security model used represent application architecture theidentied security control security property term applicable threat vulnerability weakness executing specic task enabling actual penetration testing activity security testing phase shown security testing consists three phase namely preparation scanning pentesting include modelbased activ ities systembased activity modelbased activity driven sla application model formalized according macm security model behind threat catalogue systembased activity insteadare carried launching publiclyavailable tool suitably selected congured based information derived model security testing start security assessment phase take input application model macm threat model risk evaluation resulting risk analysis phase sla produced end assessment phase interested reader detail preparation phase systembased activity include deployment cloud application testing environment much possible similar target production envi ronment note due security policy legal law direct executionof penetration testing activity may impossible illegal target production csps modelbased activity performed preparation phase consist enrichment application model detail relateda cloud secdevops methodology design testing deployment conguration needed correct planning penetration test information collected launching semiautomated way publicly available scanning tool able identify running service open port protocol etc scanning phase aim identifying weakness vulnerability aecting application test order verify whether existing threat actually exploited target system modelbased activity focus weakness identication still work progress current statesystembased activity focus detection existing vulnerability leverage wellknown tool seen previous phase finally pen testing phase weakness vulnerability eectively exploited adequate attack order evaluate actual security level application shown described phase based continuous reporting process allows log executed step generate report nal security report includes succeeded failed attack well exploited vulnerability threat tested asset according model illustrated successful attack exploit specic threat linked one vulnerability threat mitigated suitably enforcinga set control mean successful attack possible derive set broken missing control particular successful attack show broken application sla turn accounted backwards three root cause control enforced additional component added application design enforce implementation control correctlyidentied risk analysis phase iii control implemented correctly stated assessment often especially early stage development developer may totally unaware particular security problem class result missing proper countermeasure design namely missing imple mentationintegration dedicated security component since risk analysis phase iterative process must tuned several factor even slight modication wrong value considered risk parameter stronglyalter risk rate particular threat lowering level risk conse quence security control could considered case necessary reconsider threat new risk analysis process andimplement proper security control lower aected level risk lastly security testing process point mistakenly implemented security control promptly xed accordingly outlining error done thesecurity assessment casola case study designed simple multitier cloud application based wordpressto demonstrate advantage penetration testing process introduced secdevops wordpress one widely used opensourcecontent management system cm usually adopted blog showcase site ecommerce platform run top php support two common apache ngnix webservers us mysql database store webapplication data wordpress several feature including well structured plugin architec ture exible template system enables developer integrate tovirtually every existing backend system figure show macm representation case study web application built modeling stage deployment conguration consists four virtual machine red node provided iaa cloud service provider violet node two vms host twowordpress instance based apache nginx node respec tively one host mysql dbms node nally last host load balancer based haproxy node deployed equally distribute incoming request across two webserver instance ser vice depicted blu node note conguration load balancer exposed internet vms hosted insidea virtual private lan provided csp testing application macm model color gure online according methodology performed guided risk analysis produced threat list requirement sla expressed list ofsecurity control enforce asset red blue node httpswordpressorg cloud secdevops methodology design testing table threat load balancer component threat description security miscongurationan attacker may exploit unpatched aws accessdefault account unused page unprotected lesand directory etc gain unauthorized access knowledge systemt using component known vulnerabilitiesan attacker may exploit vulnerability component used application perform malicious actiont broken authentication attacker may steal user access credential forge session data gain unauthorized access towebsitest xml external entitiesxxe attacker may exploit vulnerable xmlprocessors extract data execute remoterequest server scan internal system perform denial service attack well execute attackst insecure deserialization application apis may vulnerable deserialize hostile tampered object supplied attackert sensitive dataexposure attacker may steal sensitive data intransit rest insucient loggingand monitoring attacker may rely lack monitoring andtimely response achieve goal withoutbeing detected broken access control attacker may exploit access control disclose modify disrupt data perform business function outside hisher limitst cross site scripting xssan attacker may inject clientside script webpage viewed user crosssite scripting vulnerability may used attacker bypassaccess controlst injection attacker may send hostile data aninterpreter steal sensitive data executemalicious command common injection sql nosql command object relational mapping orm ldap andexpression language object graph navigation library ognl injectiont macm representation table summarizes threat identied load balancer component lbnode table report subset security control recommended load balancer component casola table security control recommended load balancer component control control name access control policy procedure concurrent session control session lock session termination remote access information input validation manual override capability information input validation reviewresolution error information input validation predictable behavior information input validation reviewtiming interaction information input validation restrict input trusted source approved format information output filtering threat automatically identied based involved asset suitably querying threat catalogue security control interest automatically selected based threat result guided risk assessment process helped proper countermeasuresto enforce based current level risk risk analysis process executed static security assessment step enabled take account specic security feature involved deployment resource theinterconnections among component build nal assessed sla whole application step nally launched security testing phase aimed testing correct implementation recommended security control note current state penetration testing phase adopts greybox approach aware component network topology initially much detail one originally described macm model application moreover conducted security analysis theoutside private cloud virtual network particular service exposed load balancer basically emulated attack performed external threat agent altough intend consider additional threat agentsin future execute automated test preparation step involves deployment cloud application testing environment enrichment macm model extra information deduced deployed system additional information bea cloud secdevops methodology design testing obtained semiautomatically chaining execution publicly available scanning tool particular state art automation script relies onnmapand nikto end step obtained detailed description system able identify instance existence word press application service exposed load balancer node expressedin term open port service version besides information enriched macm model input scanning step existing weakness vulnerability target system identied theweakness identication model still work progress vulnerability recovered another set wellknown tool whose activation conguration guided extended macm model used particularvulscan nmap plugin nikto wpscan wordpress specic scanning tool using tool discovered following vulnerability cve socialwarfare plugin wordpress stored x exploited wild march aects social warfare social warfare pro wpvulndb unauthenticated remote code execution discovered functionality handle setting import vulnerability based improper sanity checking vali dation parameter directly passed eval php function word press plugin social warfare installed automatically adoptedtemplate started pentesting step produced actual testing plan verify exploitability identied vulnerability reported brevity reason example exploitability x vulnerabil ity veried forging text containing javascript code beautomatically executed plugins admin page must uploaded web server accessible target word press application order able perform remote inclusion attackon plugin extension visiting following address httpurl frontendwpadminadminpostphpswp debugload optionsswp urlurl evil text javascript specied last part urlwould included stored remotely wordpress plugins admin page second vulnerability also make remote vulnerable end point though specied url must contain actual system command executed remote machine test plan x vul nerability led display alert message every backend page referred aected plugin whereas second test plan enabled execute command remote host operating system take control opening reverse shell penetration tester machine direct consequence application database asset immediately compromised since credential stored clear wordpress conguration point attack attempted virtual machine casola discovered vulnerability linked x injection threat previously identied risk analysis phase andassociated security control selected mitigation respectively address information input validation information output ltering worth outline control identied risk analysis cover security requirement erroneously included assessed security sla since assessment involved wordpresscore automatically installed plugin social warfare instead found faulty testing phase conclude testing phase enabled security implementation control siand otherwise would hard discover general possibility launch semiautomated security test secdevops process enabled easily quickly identify main existing security aws support developer team taking proper remediation action without involving highlyskilled security personnel related work security engineering practice aim building system acceptably robust possible disruption threat hazard practice typi cally suggest adoption process must applied systematically target system carried entire life cycle even historically focused postdevelopment testing activity aimed vali date eectiveness already enforced security control identify existing weakness guide future security eorts investment however securitybydesign approach suggests adoption proac tive measure existing security threat implementation securebydefault paradigm conguration software componentsand access policy based principle several secure development life cycle sdl recently dened common one microsoft sdl owasp opensamm cisco sdl lifecycles include threatmodeling beginning development process continuous security testing assessment phase software product development main limitation approach cost typically imply factwhile solution exist aimed partially automating testing ass ment process several domain including iot assessment phase typically assumes involvement expensive team security expert whole development life cycle andor securityskilled developer interested reader referred additional information survey methodology last step always security testing expertguided activity despite need outlined state art exist standard devoted describe penetration testing activity thefollowing briey summarize known penetration testing methodolo gy security assurance techniquesa cloud secdevops methodology design testing worth noticing methodology fully exploit potentiality devops approach cloud paradigm recently morearmed enabling continuous deployment testing environment enabling mostly automated penetration testing reduces cost enable adoption agile practice one main goal proposedmethodology noted stable methodology exists penetration test ing example one proposed nist special publi cation penetration testing execution standard ptes open source security testing methodology manual osstmm however methodology time cost expensive focus ondiscovering technical vulnerability instead relating possible attack high level threat understandable end user approach propose contrary start enduser perception risk clearly oers feedback system designer developer order correct improve system countermeasure conclusion future work security testing cloud application one critical step existingsecure development methodology performed end development life cycle result may aect overall design mostly manual quality result depends tester experience paper addressed challenge integrating existing securitybydesign methodology technique aim automating pen etration testing phase result methodology compatible withagile devops paradigm enabling semiautomated penetration testing dedicated environment tested approach simple cloud application wordpress deployment integrates load balancer multiple frontends main result able identify exploit vulnerability even indicate security control declared incorrectlyor incompletely assessed oering clear feedback developer enabling fast identication resolution security issue furthermore thanks adoption proper security model security slas developedapplication able guarantee security featurers specied correctly assessed implemented stipulated agreement proposed solution new step direction fully automated penetration testing oers advantage assessing security control concrete way still need improvement testing plan webuild iterative way need additional formalization order enable full automation scanning phase vulnerability scanning aim extending methodology order identify possible design weaknessesusing existing knowledge base like mitre cwe correlating model challenge addressed future work casola reference anderson security engineering guide building dependable distributed system edn httpwwwclcamacuk rjabookhtml casola benedictis erascu modic rak automatically enforcing security slas cloud ieee trans serv comput casola benedictis rak villano methodology automated penetration testing cloud application int grid util comput casola benedictis rak villano novel securitybydesign methodology modeling assessing security slas quantitative app roach syst softw cavoukian chanliau privacy security design enterprise archi tecture approach httpswwwipconcawpcontentuploadsresources pbdprivacyandsecuritybydesignoraclepdf common criterion ccmb common criterion information tech nology security evaluation rev httpswwwcommoncriteriaportal orglescclesccpartvrpdf dejon caputo verderame armando merlo automated security analysis iot software update laurent giannetsos ed wistp lncs springer cham geer company actually using secure development life cycle computer herzog osstmm open source security testing methodology manual contemporary security testing analysis httpwwwisecomorg jayaram mathur software engineering secure softwarestate art survey purdue university scarfone souppaya cody orebaugh technical guide informa tion security testing assessment nist special publication knowles baron mcgarr simulated security assessment ecosystem penetration testing need standardisation comput secur httpsdoiorgjcose national institute standard technology rev recommended security privacy control federal information system organization technical report httpnvlpubsnistgovnistpubsspecialpublications nistsprpdf rak security assurance multicloud application security sla com position mha castiglione choo kkr palmieri kceds gpc lncs springer cham http doiorg ross mcevilley oren nist system security engineering consideration multidisciplinary approach engineer ing trustworthy secure system httpsnvlpubsnistgovnistpubs specialpublicationsnistspvpdf santos jcs tarrit mirakhorli catalog security architecture weak ness ieee international conference software architecture workshop icsaw cloud secdevops methodology design testing software assurance forum excellence code safecode fundamental practice secure software development essential element secure devel opment lifecycle program third edition verderame caputo migliardi merlo appiotte architecture security assessment mobileiot ecosystem barolli amato moscato enokido takizawa ed waina aisc springer cham accountability access control requirement mechanism farah dernaikab nora cuppensboulahiabf ederic cuppensb olivier raynaudb imt atlantique rennes france farahdernaikaimtatlantiquefr bey research geneva oraynaudextalmeryscom polytechnique montreal montreal canada noraboulahiacuppensfredericcuppens polymtlca abstract access control exible type access control policy violation deterred applying accountabil ity however denition accountability process frequently underestimated auditor usually pay attention detectingviolations paper dene accountability requirement mechanism serve access control keywords accountability access control sanction introduction setting right access control essential organization ensure conden tiality integrity availability information system implemented various way depending environment traditional access control model verify user privilege granting access information resource avoid misuse however prerequisite totake account organization us practice deployed security solution perceived constraint user signicant risk rejection therefore preventive access control inadequate inenvironments exception may occur impose undesirably high com putational cost regard exile access control appeared convenient access control relatively open breakglass mecha nism deployed user override access restriction without intervention administrator eective access control must based ecient monitoring mechanism detect potential violation security policy must also combined dis suasive sanction reparation policy user tempted violate ccirclecopyrtspringer nature ed accountability access control security policy said access control work deterring access violation rather preventing literature access control dened composed three critical component logging auditing accountability log ging ensures user action logged traced system toserve evidence case future suspicious violation next auditing process log solicited analyzed check consistency compliance dened security policy accountability severaldenitions given since used broadly variety eld instance gave following denition accountability accountability ability hold entity person organization responsible itsactions considered accountability punishing policy violator thus regardless sanction actually applied agree accountability way deter user committing violation constitutes threat punishment pressure user psychologically good number research treated access control focus ing mainly two component concerned detecting viola tions unfortunately underestimated importance developing accountability mechanism paper dene framework accountability decide whether user held responsible violation detected rest paper organized follows sect present accountability framework sect discus related work sect concludes accountability access control mentioned earlier access control user action moni tored assure compliance security policy consider security policy information system corresponds set rule dening access control requirement permission prohibition well usage controlrequirements obligation relating action user carry information system policy modeled according dierent access control model rbac abac orbac etc thus user performs action conform rule dened security policy action considered violation however exibility oers access control allows certain exception theactions user become permitted user becomes blameless rest paper consider violation event action opdone subject uon object oat specic time abuse security policy taking consideration exception connection security analyst derive dierent conclusion analyzing access log concernedsubject violate security policy case problem would arise either error system function external malice subject violated security policy legitimate reason justify thisbehaviour invalidates violation exclude respon sibility subject without sanctioning subject violated dernaika security policy mitigating circumstance could determined responsible punishable unauthorized action even environment user trusted always motivating reason convinces breach law serve selfinterest access data therefore evident leaving access open usersexposes system dierent security threat internalexternal maliciousnon malicious intentionalaccidental cause severe consequence fraud disclosure destruction information etc sincethe access control based trustworthy environment user knowledgeable right reality user usually notied responsibility validate signing condentiality charter weconsider detected access policy violation internal intentional thus possibility violation caused externally eliminated access policy violation presumed decision made determine whether violator punishable contrast accountability framework seen two dierent angle considered set requirement theory employed system enforce deterrence policy violation thought mechanism dene apply sanction violation arecommitted moreover argued whether increasing probabil ity punishment eectively deterrent increase severity punishment depends whether person tempted violate policy risk lover following discus requirement adopted deter policy violation propose accountability mechanism case access control accountability requirement deploying measure increase user perception accountability information system likely make user experience systematic process ing awareness increase conformance policy author presented accountability theory reduce access policy violationsthrough system artifact showed theory could increase account ability perception thus recall three discussed system dimension heighten accountability perception identiability evaluation social presence identiability ensures user action linked himher evaluation ass action according normative ground rule implied consequence social presence assumes user performance seen others indeed three criterion assured access control first logging make sure access traced hence subject identied addition monitoring auditing done analyzing log evaluate conformity access security policy finallyalthough always case one see others action especially environment sensitive data involved administrator auditor always peek regardless performing monitoring notaccountability access control three requirement information system decrease user intent commit access policy violation however unexpected circumstance could happen force user perform unauthorized action exceptional access take consideration latter consider fourth requirement justication obligation justication obligation obligation state case excep tion emergency push user perform action outside sphere access user must declare access justication ajusti cation reason purpose user performed unauthorized access access event one justication thus denote justication asj ri reason user performed unauthorized action opon object logged time also worth mentioning time case sudden emergency user time justify action therefore consider obligation done certain period time access time period usually dened bythe organization moreover consider justication logged modied later point might wondering requirement enforce deterrence policy violation fact respecting obligation violation hence probability applying punishment increase risk taking decrease enforced deterrence posterioripolicy violation integrate requirement access control accountability mechanism discussed previous section user held account able access control heshe violates security policy hence heshe responsible hisher action consequence however concept responsibility dierent meaning accountability regard responsibility liability access performed user aninformation system consider user liable blamed sanctioned undesirable action evident every liable user also responsible however latter necessarily sanctioned since assumed accountability process start violation detected user always responsible nevertheless distinguish following case user liable hence punished case static policy section treat case static security policy expression dened liable violated security policy justify violation follows violation uopo jjustification uopo jisliableuopo dernaika certain user liable case nonexistence justication since justication obligation violated case justica tion exists matter fact factor taken account reason access provided justication categorized allowed exception justication honest contrastin traditional rbac abac access control model leveraged dynamically adapt fringe case exception encoded therefore consider particular setting exception policy specie howthe right user access resource aected various exceptional situa tions complement security policy generally le constraining version security policy example hospital access control policy specie doctor access medical record hisher patient however patient heart attack doctor ward access patient medical record emergency figure show access control setting access control respect justication considered valid reason provided relevant permission dened exception policy refer inferring relevance access permission purpose therefore user also liable provided invalid justication violation uopo isinvalid justification uopo isliableuopo moving deciding justication honest problem becomes dicult must pointed honesty justi cation investigated latter valid previously mentioned theaccountability access control user time period hisher exceptional access justify moreover shown user tend lie pres sured time likely honest enough time answer interrogated consequence time period cho sen organization reasonable length eitherbe long user time plan lie nevertheless user might sometimes justify exceptional access dened time period heshe successive emergency simply heshe forgot therefore distinguish ontimejustication justication logged required time period latejustication justication given time period said weconsider user log ontimejustication heshe honest assumption made since user provided valid justication right time hence heshe respecting security rule hand qualifying latejustication confusing object mali cious dishonest user nonmalicious honest one solve problemwe examine impact damage data destruction result fol lowing exceptional access information system thus latejustication considered dishonest impact system besides whenalatejustication provided impact concerned user given awarning always responsible action violation uopo jisvalidlatejustification uopo iimpact uopo iisresponsible uopo warning furthermore user receives nwarnings classied malicious word thlate justication dishonest even honest respect justication obligation several time ni also dened organization condition put oppress user case honest even though violated way justication obligation warning give chance adapt behavior future hence serve reminder respect obligation nevertheless take great value probability sanctioned remains high ideally equal step accountabilitydecision model reason depicted consequence dene prole sanctionable user user provide justication provided invalid justication provided avalid latejustication unauthorized access impact system got warning issanctionable justification uopo isinvalid justification uopo jisvalidlatejustification uopo jiimpact uopo totalwarnings dernaika accountability decision module result user liable provoked violation sanctionable violation uopo issanctionable uisliableuopo notice derived decision made user accountability sanction remedy applied thinking sanction imagine amount money therefore consider sanction penalty calculated based whether user sanctionable value penalty chosen organization example equal salaryof employee however must noted dierent type sanction considered getting red prison etc dene boolean variable indicates user sanctionable thus user sanctionable otherwise consequence sanction value calculated follows spenalty addition remedy put place taking away right breaking glass ability perform prohibited action necessary remedy adopted organization loos con dence user latter caused several violation andbeen given multiple sanction case administrative policy security rule controlled administrative policy administrator also held accountable follow ing action normally responsible creating security rule permit prohibit regular user performing access moreover inaccountability access control order breakglass action user might ask administrator create himher specic rule perform action administrator also createremove rule hisher without prior demand user whatever reason rule creationremoval rule appropriate administrator abuse hisher right thus consider samesetting represented time security policy changed time administrator nevertheless expression exception policy remains static said security auditor scan blame administrator respect justication without exempting user hisher responsi bilities worth noting security auditor must dierent concerned administrator accountability decision biasedthat said user remains responsible since even admin istrators fault one performed unauthorized action hence participated violation case user given warning administrator held responsible violation uopo jjustification uopo jblame saopr isresponsible uopo warning uwisresponsible aopr contrast new regulation came force may general data protection regulation gdpr gdpr requires collected data used specic purpose therefore proposed framework design access control policy reference legal environment gdprin consequence suppose administrator right cre ateremovemodify specic rule hisher action lead gdpr compliant access control policy acp enforcing principle data protection designand default consequence administrator blamed hisher action simply commits violation thing check resulted acp performing action gdpr compliant case administrator liable sanctioned hand resulting acp gdpr compliant process return normal liability check connection justication obligation also imposed administrator thus condition applied sanctionable administrator result administrator liable performing operation security rule resulting acp gdpr compliant sanctionable follows violation aopr gdprcompliant aopr issanctionable isliableaopr functioning new version accountability decision module shown moving calculating sanction value nevertheless acp gdpr compliant sanction setaccording gdpr total global annual turnover million euro whichever higher gdprs normally imposed authority company however organization also charge dernaika administrator one representing value sanction normally made precise previously established agreement accountability decision module case evolutive policy related work one work address problematic access control author proposed language allows agent distribute data usage policy decentralized architecture designed logic allows audited agent prove action authorization posse particular data moreover showed logic allows dierent kind ofaccountability agent accountability data accountability demonstrated soundness logic vision accountability dierent agent pass accountability test provides proof rely usage policy attached data specie action done data proposal impose obligation user tojustify exceptional action evaluation accountability based justication another work access control logical framework policy enforcement combine trust management element audit logic provided moreover access con trol wide success healthcare domain instance outlined needed architecture apply auditbased access control electronic health record system eorts medical domain however none work proposed solution accountabilityaccountability access control conclusion future work paper proposed framework accountability access control showed accountability seen requirement mechanism integrating justication obligation process increase probability severity sanction current work highlight many insight treated future first accountability framework considers violation arealready detected investigation usually done analyzing multi ple log correlating might hard sometimes detect violation especially needed attribute dened thesecurity policy thus interesting provide accountability solution violation indecisive moreover accountability framework con sidered case expression security policy staticor subject change using administrative model nevertheless take consideration evolution exception policy also change depending context instance case crisis access permission updated assuring validity higher number justications fact nding valid justications treating violation wouldallow enrich contextualize exception policy therefore would like treat change policy along contextualization process inuence applicability sanction acknowledgment research funded bey research meyrin bdo atelaine geneve mark group bey dedicated research innovation reference alves fern andez framework analysis access control policy emergency management electron note theor comput sci azkia cuppensboulahia cuppens coatrieux reconciling ihe atna prole contextual access usage control policy healthcare environment sixth international conference information assur ance security ieee azkia cuppensboulahia cuppens coatrieux ontology based log content extraction engine security control stud health technol inform bartolini daoudagh lenzini marchetti towards lawful autho rized access preliminary gdprbased access internationalconference software technology icsoft prague czech republic byun purpose based access control privacy protection relational database system vldb cholvy cuppens saurel towards logical formalization responsibil ity proceeding international conference articial intelligence law dernaika corin etalle den hartog lenzini staicu logic auditing accountability decentralized system dimitrakos martinelli ed formal aspect security trust iifip springerboston dekker mac etalle auditbased access control electronic health record electron note theor comput sci kalam orbac mod ole dacc ba sur le organi sations cahiers francophones recherche ecurit linformation essaouini cuppens cuppensboulahia kalam specifying enforcing constraint dynamic access control policy twelfth annualinternational conference privacy security trust ieee etalle winsborough compliance control category subject descriptor feigenbaum accountability driver innovative privacy solution pri vacy innovation symposium ferraiolo cugini kuhn rolebased access control rbac feature motivation proceeding annual computer security application conference friesen certainty punishment versus severity punishment experimental investigation south econ guide attribute based access control abac denition consideration draft nist special publication jouini rabai lba aissa classication security threat infor mation system antseit lampson accountability freedom cambridge computer seminar cambridge shalvi eldar berebymeyer honesty requires time lack justi cation psychol sci smari clemente lalande extended attribute based access con trol model trust privacy application collaborative crisis management system future gener comput syst vance lowry eggett using accountability reduce access policy violation information system manag inf syst voigt von dem bussche general data protection regulation gdpr practical guide springer cham secure agile software development policy practice agile team carlos magnum bezerra suzana sampaiob marcelo marinho tempest security intelligence recife brazil carlosbezerratempestcombr department computer science federal rural university pernambuco ufrpe recife brazil suzanasampaiomarcelomarinho ufrpebr abstract recent year signicant shift tradi tional development towards agile agile adoption reported result ecient productive project information security isbecoming important entity organization cyber security major concern digital world however despite impor tance agile methodology hardly address security requirement inresult many security problem exposed recent year often leading nancial social loss software one compu tational asset exposed security threat imperative development process includes special attention security require ments scenario need arises include safety practice thedaily life agile team paper highlight security policy present practice suitable agile team order study synthesizes extant literature domain prioritizesthe agile security practice group practice policy based result workshop cyber security company evaluates policy based security agile specialist assessment econsidering feedback present nal security policy software development agile team keywords software security security secure software development agile secure software development policy agile methodology introduction nowadays organization looking method meet need adapt complex environment successive change order deliver software product eciently greater value customer many softwaredevelopment company migrated agile methodology scrum therefore became noticeable change world used methodology among software project ccirclecopyrtspringer nature ed bezerra worldwide however methodology imposes limitation inclusion security activity several security aws due lack security activity process cybernetic attack aim obtaining condential data hiding valu able information way retaliating government private initiativeactions case simple pleasure fullling overcoming chal lenge invading computer system whatever intention attack always generate nancial damage therefore currently search forcomputational security growing several initiative demonstrate growth concern google project zero open web application security project owasp data protection law lgpd brazil gpdr european union developing software security attribute way prevent attack essential growing need software security adoption way develop software eciently raise question regarding integration two concept reconciling two world development processis research problem several study context possible establish need research way include security activity agile process team bansal jolly highlight lack security requirement integrated view agile practice author depict importance integrating security practice process isolated action perspective isurgent look way integrate agile development model security practice policy therefore study aim address gap agile security practice policy study contributes current literaturein three way presenting synthesis identied security practice agile providing security policy practical practice security attribute agile team iii providing assistance agile team looking toenhance security practice rest paper organized follows sect present theoreti cal background section provides overview methodological approach section describes proposal detailing policy practice section evaluates proposal discus ndings last sect report nal consideration limitation future work theoretical background agile methodology due complex corporate environment agility become necessary con dition obtaining competitive market advantage market number software development company adopting method continues grow several framework created based concept scrum element methodology covered dur ing research product backlog list known requirement project pair programming method allows two developer tosecure agile software development implement collaborative manner project activity planning poker estimation game team reach consensus complexity value user story among others secure software development cyber security collection tool policy concept guideline risk manage ment action training practice technology used protect user environment organization asset security intended guaran tee maintenance organization computational property user asset relevant risk present internet necessary guar antee three main attribute condentiality integrity availability con dentiality property guarantee absence unwanted information disclosure integrity attribute ensures unautho rized change availability associated service information readiness punctuality provided system security must considered critical nonfunctional requirement need fully incorporated development methodology lack security requirement technical implementation failure lack security val idation lack experience care security aspect problem mindset include security requirement secure development process main mean implementing security practice secure cycle includes training requirement planning implementation verication delivery response process process must contain securityrelated practice among known secu rity process presented organization market microsoft security development lifecycle msdl comprehensive lightweight applica tion security process clasp open web application security project owasp although process practice suitable agile team despite counterpoint adapting security practice agile world important task next section analysis related study conducted area related work many study point lack support security activity agile development quantitative study evaluate security practice agile environment propose new agile process secure development ass compatibility security practice agile character istics study focus one process demonstrates integrate security requirement agile process present systematic analysis approach add security requirement process within agile methodology present practice contribute improving agile process security point view practice description benet presented study dierentiates adding opinion voice bezerra specialist prioritise practice group policy support secure agile integration analysis agile development process securityrelated activity based quantitative metric conclude security activity better integrate presented unlike paper work present qualitative point view presented practice seek demonstrate security practice inclusion software project compatible author focus security practice thetraditional world mindset practice presented discussed last conduct six interview organization agile methodology result author present extension agile method including securityactivities study go enrich possibility adding security specialist securityagile specialist point view seen several study address inclusion security activity agile methodology many argue much still need studied order balance safety agility moreover many focus theagile point view aiming lling gap work explores practice study compose policy able demonstrate apply considering life cycle agile project methodological approach section explains research approach presented research approach literature review study applied exploratory approach obtain understanding problem although exploratory step kitchenham charter guideline systematic literature review explained used allow replication study review aimed assessing security practice included agile software project therefore research question addressedby review security practice used agile team inclusion criterion included publication year must equal higher paper must written english iii must publishedsecure agile software development journal peerreviewed conference must directly related research question process used search engine ieee xploredigital library springer link science direct google scholar addition search process performed using following search string secu rity development agile lifecycle process andpractices policy challenge factor first title abstract article read second moment remaining set paper introduction conclusion last remainingpapers answered research question read evaluating article practice mapped resulting total practice although duplication similarity practice goal thereforethe repetition removed similar practice grouped reducing fortythree practice discussed briey next section practice prioritisation workshop specialist order focus relevant one practice le citation excluded twelve practice excluded among identify vulnerabili tie verify validate security dene cryptography standard thirtyone practice analysed using workshop specialist workshop section conducted agile team com pany specialized cyber security based recifebrazil process sought answer practice related agile methodology possible group one practice important theapplication practice secure software development development stage practice incorporated based workshop feedback fourteen practice prioritized fif teen practice excluded oering enough benet agile team among countermeasure graph dene monitor metric incident plandene cryptography standard threat modelling prac tice prioritizing security risk grouped protection poker risk analysis security master considered role practice last practice grouped software development phase policy secure agile software development created policy evaluation last evaluation aim presenting policy practice user order conrm eectiveness regarding security gain agile team ten interview conducted security expert agile team developer withsecurity experience expert agile method policy presented order answer following question think possible apply policy agile team aggregated practicesmake sense relation description objective policy iii challenge restriction see regarding policy would include practice policy bezerra finally based feedback policy adjusted concluded security policy agile team section present short version policy secure agile team policy considered literature review feedback agileand security specialist policy description practice implement supporting reference given security readiness policy main goal policy raise agile team awareness relevant characteristic information security empower share skill spread security knowledge among team member provide security training aim prepare educate agile team mem bers importance safety training essential address topic privacy policy major attack defense strategy threat modeling apply several way apply training online training platform hire specialist promote training within theproject environment best time introduce training beginning project update periodically contribute excellence technical awareness addition new team member must conduct basic safety training related work incentive security research establish promote practice encourage research related security many new vulnerability discovered time sothe team need date new form attack protection measure apply research happen several way search specialized portal owasp microsoft technical blog channel updating language tool operating system others microsoft secu rity response center golang blog social security discussion forum database vulnerability cve detail exploit database specic time todevelop security research possible determine period individ uals carry research work include activity project cycle meet specic demand related work security requirement policy dening security requirement clear objective consistent way important develop secure software mapping project security need reduces possibility disregarding adopting practice like security backlog evil user story support agile team map security activity moreover possible state security mechanism implemented dene security requirement aim identify securityrelated feature expressed explicitly within software project necessary ensuresecure agile software development requirement put aside due focus functional require ments included eort necessary develop application apply order apply team help client understand dene security requirement project known vulnerability helpin task requirement client may aware existence importance requirement updated revised every cycle reect change occur naturally agile project cycle alsoto consider change threat scenario related work security backlog contain list activity related security item pointed security backlog necessarily separate product backlog apply follow operating mode product back log already widespread agile team whether separate security activity decision product owner team accord ing need project raised updated project requirement denition cycle however nothing prevent new item added discussed prioritized moment implementedin following cycle related work evil user story describe security threat scenario demonstrating system aected attacker main objective based thesecurity backlog stress possibility threat scenario order detect possible system vulnerability weakness exploited apply evil user story documented much like user story necessary write good knowledge security get close possible real attack scenario artifact must dened parallel item product backlog security backlog iterative cycle project related work security design planning policy often security problem inserted project due design plan ning error evaluating risk associated functional requirement planning design phase special care architecture risk anal ysis monitoring project necessary order avoid security awschallenges main challenge mentioned agile team time cost restriction imposed practice addition conducting train ing entire team order raise level expertise sucientparameter application policy also seen challenge protection poker based planning poker intended help prioritize development activity according security risk associated withthem protection poker higher value given greater associated security risk practice collaborative way guide prioritization project security requirement bezerra apply planning poker activity voted explained everyone present round discussion precedes scoresnext everyone score activity step must repeated time nal score dened based consensus among risk associ ated activity conducted planning session next development cycle including activity selected implementation related work inperform risk analysis agile team analyzes security risk based requirement captured risk assessment document rened subsequent iteration also added canvas digital board available team apply development iteration must micro itera tions risk assessment treatment acceptance however initial phase project team demand accuracy analysis output must update security requirement related work establish security design requirement deal designing regarding security thus includes activity help requirement implementation safe manner many case security feature selection proved complicated design implementation choice likely resulted vulnerabilitiestherefore important applied consistently consistent understanding protection provide apply iteration initial architecture must dened architect go list initial product requirement try discover necessary architectural security feature important chosen architecture impose restriction possible security featuresthat may needed later addition general architecture decision iteration whenever requirement software raised team talk decision especially involve greater risk asassessed related work security implementation policy many developer aware correct way implement certain feature order avoid security breach order add mechanism avoid problem type policy proposes practice help developer toavoid identify correct aws even implementation phase security coding rule must established order avoid common mistake process focusing good practice related softwaresecurity rule specify important aspect handling user input avoiding obsolete function using cryptography standard care using third party software library apply many rule listed training research noted readiness policy besides programming guide practice cited literature also help dene standard denition anduse encryption standard approved tool rule must besecure agile software development followed throughout implementation process particular item associ ated high risk related work security code review allows team member observe possible secu rity problem code review including safety precaution process possible prevent known failure perpetuated theimplementation phase review also help distribute security skill since give receive feedback apply tool help make developed code available review allow indicate desired reviewer reviewer experience security contributes better result review person responsible code turn comment solves problem pointed thispractice applied throughout implementation phase software related work pair programming agile concept denes situation developer code pair solving revising problem together code written practice encourage team member security experience pas knowledge besides practice shape pro fessionals mentality heshe seek security practice apply two team member implement one activity cooperative way throughout sprint development cycle useful story high risk associate empower new team member useful evil story related work security testing policy wellperformed specialized test expose suciently secure code written automated test theory prove safety item considered implemented static code analysis tool unveil common program ming error possible problem even development security automated testing take advantage automatic test imple mentation include validation securityrelated feature security related check possible state code developed provide security willnot distorted future change correction made happen xed vulnerability happen apply programming language automated test module addition several library purpose writing automated test security ensure implement many scenario possible close possible real world scenario sprint parallel code development related test code implemented related work security code analysis ensures code analyzed tool looking security hole order validate implemented software security practice basically consists three verication methodology static code analysis fuzzy testing apply tool perform verication methodology cited need congured correctly owasp bezerra maintains list tool purpose conguration code verication tool must performed iteration project congured team must best time execute related work security specialized testing apply test performed security expert ensure existing security aws raised expertise attacker mindset allow aws ignored inserted development process apply specialized test usually requires security expert availabil ity therefore one way apply approach hire company independent professional oer service critical scenario anteam professional hired carry task however might non available conguration using test applica tion launch major release includes several new feature could option related work evaluation discussion section discus feedback ten practitioner table depicts interviewee prole current role experience agile cyber security table interviewee prole idcurrent role exp agile exp cyber security exp esw developer esecurity consultant esoftware engineer esoftware engineer esoftware engineer ecyber security analyst ecyber security analyst eteam leader esoftware engineer esoftware engineer lack experience one main factor inuences lack secure project dealing security aspect vital secure security readiness policy considered essential enable change team security mentality leading eective decrease security breach policy take lot time educates agile team member deal security aspect esecure agile software development regarding research practice reservation raised team may prepared perform activity even training research consume project time well directed become awed investment according must specic focus new defense way tool order bring expected result however demonstratedthat associated benet keeping team date one interviewee stated consuming material safety team daily life help engage professional practice security requirement mapping give visibility team client although time performing activity within team little security experience challenge thesecurity backlog good way keep developer aware security story implemented evil user story challenge since attacker mentality necessary write characteristic hardly present developer team could struggle write evil user story lack attack knowledge lack attack mindset generating fewer insucient scenario expert advice security role team could mitigate problem applicability security design planning policy threaten com plex time consuming characteristic security risk analysis practice according establishing security design beginning project essential since foundation remain secure fastensecurity requirement integration furthermore denitive impediment agile world raised although demand adaptation doubt relevance benet security implementation showed biggest acceptance interviewee agree brings great value secure agile easy adopt within agile team mainly already ceremony deal itamong practice pair programming seen extra advantage perpetuating knowledge within team addition helping development complex security requirement way already practiced agile team finally security test cherished policy specialized test essential complex threat scenario however demand time resource project development although free tool also consensus security code analysis security specialized testing face restriction due lack nancial resource either acquire tool specif training consultant train team moreover benet agile team project obvious overcomes constraint result obtained show security readiness policy security imple mentation policy coherent ready suitable agile team within security test policy aside security specialized testing demand great cost time mandatory policy ready used agile team three policy better accepted specialist opinion bezerra converge conrm despite reservation plausible incorporate policy agile development process final consideration need integrate agile methodology security requirement still anopen problem mainly caused due fact security activity mostly conceived traditional model software development lead several challenge mainly linked dierences betweenthese model research contributes partially gap presenting poli cies allow secure development within agile world work proposes security policy agile team security readiness policy security requirement policy iii security design planning policy security implementation policy security test policy add subset practice brought literature review prioritised preliminary assessment group expert last specialist also user many practice contribute evaluate eectiveness regarding security gain agile team furthermore possible observe two crucial need secure agile software development meet team training need make available project time space process securityrelated activity another issue arose interview developer mindset focused protect product cause many attack scenario unnoticedmoreover order policy need least one specialist security spread knowledge besides lesson learned known attack could help creation security requirement test scenario designcontext practice could added process however would cause overload reducing agility addition mentioned totally safe virtually impossible reach however preparing teamis best way start dealing security even though step systematic review followed important article may gone unnoticed may lead incompleteness set thepractices interviewee prole diversity number may sucient make complete analysis proposed policy order need secure development global world address cybersecurity issue within increasing number agile team propose following future work conduct multinational work security practice agile team elaborate survey analyse quantitative study carry analysis threat modeling practice application agile world conduct empirical case study analyse cost eort return ofinvestment adopting security policy within agile team last analyse security scenario agile team evaluate time restriction inclusion security practice agile projectssecure agile software development reference annual state agile development survey httpsexploreversiononecom stateofagilethannualstateofagilereport accessed dec adelyar norta towards secure agile software development process international conference quality information communication technology ieee agile alliance httpswwwagileallianceorg accessed nov azham ghani ithnin security backlog scrum security practice malaysian conference software engineering ieee baca carlsson agile development security engineering activity international conference software system process acm bansal jolly encyclopedic approach realization security activ ities agile methodology international conference conuence next generation information technology summit conuence ieee barbosa sampaio guide support enhancement security measure agile project brazilian workshop agile methodswbma ieee bartsch practitioner perspective security agile development international conference availability reliability security ieee beck extreme programming explained embrace change addisonwesley professional boston bernhart mauczka grechenig adopting code review agile software development agile conference ieee beznosov kruchten towards agile security assurance workshop new security paradigm acm bodden state system security international conference software engineering companion proceeding acm bostr ayrynen bod beznosov kruchten extending practice support security requirement engineering international workshop software engineering secure system acm bowen hinchey janicke ward zedan formality agility security evolution software development computer oliz vila moreira independent security testing agile software development case study software company international conference availability reliability security ieee choudhary rakesh approach using agile method software develop ment international conference innovation challenge cyber security iciccsinbush ieee common criterion httpswwwcommoncriteriaportalorg accessed nov comprehensive lightweight application security process clasp httpswwwowasporgindexphpclasp concept accessed nov essa labed ghezala towards comprehensive view secure soft ware engineering international conference emerging security information system technology ieee bezerra franqueira bakalova tun daneva towards agile security risk management beyond workshop empirical requirement engi neering empire ieee general data protection regulation gdpr httpsgdprinfoeu accessed nov kanniah mahrin review factor inuencing implementation secure software development practice int comput syst eng keramati mirianhosseinabadi integrating software development secu rity activity agile methodology international conference computer system application ieeeacs kitchenham charter guideline performing systematic literature review software engineering technical report ebse technical report ebse kothari research methodology method technique new age inter national lei geral prote cao dado lgpd httpwwwplanaltogovbrccivil atoleilhtm accessed nov microsoft secure development lifecycle httpswwwmicrosoftcomen ussecurityengineeringsdlpractices accessed nov munetoh yoshioka railroadmap agile security testing framework webapplication development international conference software testing verication validation ieee nicolaysen sasson line jaatun agile software development straight narrow path secure software int secure softw eng ijsse oueslati rahman ben othmane literature review challenge developing secure software using agile approach international con ference availability reliability security ieee open web application security project owasp httpswwwowasporg indexphpmain page accessed nov oyetoyan cruzes jaatun empirical study relationship software security skill usage training need agile setting international conference availability reliability security ieee project zero httpsgoogleprojectzeroblogspotcom accessed nov singhal integration analysis security activity perspective agility agile india ieee siponen baskerville kuivalainen integrating security agile devel opment method annual hawaii international conference system sci ences ieee sodanil quirchmayr porrawatpreyakorn tjoa knowledge transfer framework secure coding practice international joint con ference computer science software engineering jcsse ieee stoica mircea ghilicmicu software development agile traditional informatica economica sutherland schwaber denitive guide scrum rule game scrumorg secure agile software development terpstra daneva wang agile practitioner understanding secu rity requirement insight grounded theory analysis international requirement engineering conference workshop rew ieee villamizar kalinowski viana fern andez systematic mapping study security agile requirement engineering euromicro conferenceon software engineering advanced application seaa ieee von solms van niekerk information security cyber security com put secur vulnerability scanning tool httpswwwowasporgindexphpcategory vulnerability scanning tool accessed nov wang gupta niu mining security requirement common vul nerabilities exposure agile project international workshop onquality requirement agile project quarap ieee williams meneely shipley protection poker new software security game ieee secur priv privacybydesign architecture indoor localization system paolo barsocchi antonello calabr antonino crivello said daoudaghb francesco furfari michele girolami eda marchetti cnristi pisa italy paolobarsocchiantonellocalabroantoninocrivellosaiddaoudagh francescofurfarimichelegirolamiedamarchetti isticnrit university pisa pisa italy abstract availability mobile device led arising devel opment indoor location service collecting large amount sensi tive information however without accurate veried managementsuch information could become severe backdoor security privacy issue propose paper novel locationbased service lb architecture line gdprs provision feasibility purposesand considering representative usecase reference implementation based popular telegram app also presented keywords access control system gdpr indoor localization system locationbased service privacybydesign introduction wide availability mobile device led arising development indooroutdoor locationbased service lb improving user daily life work specically high number stakeholder exploiting suchsystems providing commercial solution selling product tracking facility social apps service previously cited system supposed acquire store personal data address user localization history location visited well timestamp visit result nal user disseminate kind digital crumb might potentially disclose sensitive information without aware actual risk beyond snowden recent adoption may general data protection regulation gdpr people sensitiveness personal privacy fortunately increasing however context indoor localization system il still missing standardized reference architecture take care security privacy enforcement paper describe novel lb architecture line gdpr provision able strengthen right individual personal data make organization accountable regarding regulation ccirclecopyrtspringer nature ed privacybydesign architecture indoor localization system provided solution relies innovative idea integrating gdprbased access control system inside localization architecture argue thatthe represents promising technique developing adequate grained mechanism taking account legal requirement data usage purpose management user consent well enforcing thedata retention period thus main contribution paper schematize indoor localization system il reference architecture dene purpose data management management user consent right related privacy data protection correctly enforced guarantee privacybydesign gdpr compliance best knowledge solution proposal integrates three keyaspects design smart easytouse il architecture access control system resource data management inside localiza tion environment iii enforcement gdprs provision inside localization system article structured follows next section overview back ground related work presented sect describe proposed privacybydesign solution sect present application example finally sect concludes paper background related work section briey describe indoor localization gdpr basic knowledge related work considering il main peculiarity positioning local ization functionality several proposal presented last decadefor il one showing dierences term method data source main ready market solution indooratlas indoor google map anyplace even il generally accepted crossdomain solution still lack generic standard architecture importantly agnostic privacy principle exposed risk location privacy violation gdpr denes personal data information relating iden tied identiable natural person called data subject mean data subject natural person living human whose data managed byacontroller gdpr applied processing personal data whether automated even partially denes among others following principle demand purpose data collected deter mined explicit legitimate purpose processed later purpose accuracy processed data must accurate todate regularly retention data must deleted period subject explicit consent data may collected processed data subject given explicit consent httpswwwindooratlascom barsocchi concerning design usually implemented access control mechanism acm system providing decision authorization request typically based predened access control policy acp extensible access control markup language xacml widely used language provides reference architecturein environment xacml policy specic statement allowed basis set rule rule dened term condition attribute subject resource action environment bycombining algorithm establishing order among existing rule notwithstanding importance role system integration localization system architecture still emerging topic result achieved far focused either using access control mechanism physical protection within virtual perimeter using location information automatically authenticate customer specic security attribute fully cover gdpr requirement paper enhances current research proposing time referencearchitecture includes location topologyaware access control system guarantee compliance gdprs provision privacybydesign solution section schematize possible reference architecture indoor localization system includes gdprbased system proposalextends integrates previous solution presented figure show main component proposed reference architecture user agent cooperates behalf user indoor infrastructure estimate user location typically deployed smart device smartphone tablet smartwatch shown charge managing user interaction automatically detecting theexistence il discovery service enabling localization device positioning service rendering device position map mapping service managing user consent andsendingreceiving access requestsresponses device gui localization infrastructure localization infrastructure indoor distributed infrastructure charge determining user locationit relies wifi signal collected provides three main component map manager manages updating storage internal map discovery server charge sending url available il dierent enhanced indoor localization system eils core component relies two database collecting required information personal data specically eils characterized three main component thecommunication interaction orchestrator charge managing communication eils gdprbased access control system rule resource data access iii il engine ina privacybydesign architecture indoor localization system reference architecture implement interaction user throughout network infrastructure charge estimating user agent location turn il engine return back timestamped coordinate according map referencesystem wgs reference system il engine gdprbased access control system designed cooperate since dierent people data owner administrator supervisor dierent service booking service advertisement service navigation service may ask data access dierent moment specif ically last component charge evaluating single data accessrequest allowing denying access according collected consent data validity period specic usersservice right access control policy established inside overall localization infrastructure extending previous solution described gdprbased access control system provides facility gather privacy requirement collected con sent identify privacy attribute author gdprbased policy test gdprbased policy deploy gdprbased policy eils manage data access interaction component gdpr based access control system provides facility perform step specically gdprbased access control system charge preparing consent subscribed user extracting useful personal data fromthe signed consent storing secure protect database also translates consent processable structure enforceable barsocchi gdprbased access control policy easily manage gdpr provision refer previous work detail paper refer xacml access control policy able encode gdpr principle taking account user consent gdprbased access control system provides also facility validating derived policy storing thedatabase finally gdprbased access control system also charge managing access personal data online il step list adapting extending current version xacmlreference architecture refer detail proximity marketing application example section simple example proximity marketing service inside mall presented describing proposal case suppose infrastructure could provide several feature navigation servicefor optimizing path completing shopping list checkout management service notifying user checkout discount notier advertise user heshe proximity special oer two relevantaspects need evaluated data collected user localization might used improve userexperience shopping mall opti mal placement product appealing facility indoor positioning make available set personal data misused exploited way dierent user expectation example possible implementation developed extending telegram app case user start localization process looking service available mall telegrammenu consequently retrieves information available localiza tion infrastructure discovery service service performs periodic bluetoothwifi scan retrieve information encoded payload advertising message technology current implementation encoded url payload eddystone beacon turn url used retrieve meta information il example section il engine implement localization algorithm map server provides map indoor environment localization algorithm leverage wifi signal received periodically scan wifi probe emitted wifi access point nearby analyzes received signal strength r message r collected available wifi aps transferred il analyzes estimate device position turn il return back timestamped coordinate show map currentposition implementation user also receives gui specic textual consent associated selected service detailed information usage personal data purpose suchas data owner data processed purpose iii time detention proposal according toa privacybydesign architecture indoor localization system gdpr demand user personal data device position time tamp well acps area kept database ruled thegdprbased access control system moreover collected data stored time needed provide user required service table example attribute classication identied attribute attribute category gdpr category category alice customer data subject subject marketing service service provider controller subject read processing access action notication processing send action smart device indirect personal data resource gps data location data personal data resource wifi signal data location data personal data resource onboard sensor data location data personal data resource current position location data personal data resource advertising purpose specic purpose resource described sect data extracted proximity marketing service accepted consent used automatically mapping personal data access control attribute instantiating rule structured representation combining gdprbased acps refer detail example considering art gdpr table report mapping attribute following scenario alice customer data subject provides smart device gps data wifi signal data onboard sensor data information sent proximity marketing service controller advertising notications proximity ashop alice time exercise right access pursuant art precisely column identied attribute table contains identied attribute column attribute category show classication specic category column gdpr category map attribute regulation concept nally column access control category map access control entity figthe derived gdprbased access control policy written xacmllike language provided specically policy applicable subject aliceand contains two rule rule ruleid equal readrule represents rule associated art guarantee alice read herprovided personal information second rule called defaultrule denies allowed explicitly art gdpr data subject shall right obtain following information purpose processing category rsonaldata conce rne tofacce ythe datasubje barsocchi policy root elementrulecombiningalgorithmpermitoverrides target subject alice rule leid readrule eect permit target resource resource resource resource resource onboard sensor data resource current position resource advertising action read condition operator stringoneandonly typeoneandonly function resource stringequal typeequal function resourceowner subject rule leid defaultrule eect deny default deny allowed explic itly example xacmllike policy conclusion future work present paper architecture indoor localization able guaran tee gdpr compliance integration specialized gdprbased access control system architecture reply user need pro tected unauthorized unconscious privacy data collection analysisindeed according gdrp regulation privacypreserving architecture delegate endusers control provided personal data show feasibility proposal considering proximity marketing service insidea mall even simple case evidenced architecture could increase privacy consciousness endusers using indoor envi ronment service following research line plan extend workwith realworld data collection campaign evaluate scalability platform realistic condition acknowledgment partially supported cyberseceurope grant agreement privacybydesign architecture indoor localization system reference barsocchi calabr ferro gennaro marchetti vairo boost ing lowcost smart home environment usage access control rule sensor bartolini daoudagh lenzini marchetti gdprbased user story access control perspective piattini rupino cunha garc rodrguez guzm erezcastillo ed springer cham bartolini daoudagh lenzini marchetti towards lawful access preliminary gdprbased access proceeding icsoft prague czech republic july basin debois hildebrandt purpose necessity compliance gdpr meiklejohn sako ed lncs springer heidelberg calabr marchetti moroni pieri dynamic scalable solution improving daily life safety proceeding appis daoudagh marchetti life cycle authorization system development gdpr perspective proceeding fourth italian conference cyber security itasec ancona italy february regulation european parliament council general data protection regulation ocial journal european union may furfari crivello barsocchi palumbo potort next indoor localisation taxonomy protocol pattern advanced location based service proceeding ipin ieee gellman gribbons edward snowden say motive behind leak expose surveillance state georgiou constambeys laoudias petrou chatzimilioudis zeinalipouryazti anyplace crowdsourced indoor information service proceeding cmdm ieee greave coetzee leung access control requirement physical space protected virtual perimeter furnell mouratidis pernul ed trustbus lncs springer cham greave coetzee leung comparison indoor positioning system access control using virtual perimeter yang sherratt dey joshi ed fourth international congress information communicationtechnology aisc springer singapore httpsdoi org haofeng xiaorui wifi secure access control system based geofence proceeding iscc konstantinidis chatzimilioudis zeinalipouryazti mpeis pelekis theodoridis privacypreserving indoor localization smartphones ieee trans knowl data eng oasis extensible access control markup language xacml version jan uary httpdocsoasisopenorgxacmlxacmlcorespecosenhtml potort crivello girolami barsocchi tracante localising crowd wifi probe hoc netw barsocchi ramadan salnitriy str uber urjens giorgini secure business process modeling designlevel security verication proceeding model ieee september ranise siswantoro automated legal compliance checking security policy analysis tonetta schoitsch bitsch ed safecomp lncs springer cham ict verication validationreverse engineering android application reimpact marco gon calvesand ana paivab faculty engineering university porto rua roberto frias porto portugal upapaiva feuppt inesc tec rua roberto frias porto portugal abstract reverse engineering may helpful extracting informa tion existing apps understand better ease mainte nance reverse engineering may performed static analysis theapps code code available dynamic approach may useful paper present tool allows extracting dynamically complete blackbox approach explored activity androidapplications extension impact testing tool combine reverse engineering dynamic exploration testing extracted information later used construct hfsm hierarchical finite statemachine three distinct level abstraction toplevel show interaction needed traverse activity mobile appli cation middle level show screen traversed specicactivity bottom level show screen traversed exploration information help understand better application facil itates maintenance error xing paper provides completedescription tool architecture result case stud y conducted mobile apps publicly available google store keywords reverse engineering android crawler software testing android testing mobile testing introduction according ieee reverse engineering process analyzing subject system identify system component interrelationship create representation system another form higher level ofabstraction reverse engineering may useful know software sys tem analyzed may contribute improve system help itsmaintenance especially system lack uptodate adequate doc umentation research work apply reverse engineering extract information mobile apps type reverse engineering performed ccirclecopyrtspringer nature ed gon kind information extracted varies reverse engineering may static look code without executing dynamic software executed orhistorical looking change performed order gain information evolution system given mobile application eventbased static approach best approach hand dynamic hybrid approach suitable used mobile application developing android apps possible combine multiple fragment single activity build multipane reuse fragment multiple activity relating captured activity inner screen may helpful understand better app structured far know dynamic approach able extract activity related screen android apps based complete blackbox approach without access code app phase reverse engineering process paper present reverse engineering approach reimpact extends impact tool testing tool android mobile application reim pact approach able extract hfsm hierarchical finite state machine dynamic blackbox exploration android app able extract theactivities inner screen traversed user event available screen navigation path performed along exploration generated hfsm composed three distinct level abstraction top level present activity traversed middle level present screen traversed activity explored bottom level present screen traversed exploration paper present related work regarding reverse engineering mobile application sect section present motivational example reimpact approach described sect specications app roach architecture presented sect section describes case study sect discus threat validity finally conclusion sect state art last year lot research work software reverse engineering many approach developed extracting model desktop web application however although le quantity also reverse engineering work performed mobile application goal still analyze sim ulate user interaction obtain descriptive model trimdroid performs static analysis android apps code order extract finite state machine state activity app dynamic reverse engineering technique presented exercise user interface io mobile application extract information regarding run time behavior generatingextracting user interface state model httpsdeveloperandroidcomguidecomponentsfragments reverse engineering android application reimpact application behavior despite dynamic approach need access code combine reection code injection track method call example hybrid approach presented approach consists initial static phase identies possible event red second dynamic phase explores application automatically ring eventsidentied analyzing eects application goal extract fsm state dierent screen named visual observable state another reverse engineering approach presented goal reverseengineer application lifecycles mobile platform testing although several approach area mobile reverse engineer ing none extract information activity applicationusing blackbox dynamic exploration technique relate activity inner dierent screen motivational example currently million apps available google play store crowded market application necessary quality donot behave desired quickly replaced identical application ensure application quality work expected nec essary intensively test application sometimes developer even tester encounter problem application test several situa tions dicult associate problem specic activity becauseof may dicult locate source failure inside code app one activity fragment left two activity one fragment right httpswwwstatistacomstatisticsnumberofavailableapplicationsinthegoogleplaystore gon behaviour user interface may represented fragment frag ment belongs activity may reused dierent activity also dierent fragment may combined single activity example show activity two fragment left fragment belonging two dierent activity right therefore knowing activity fragment belongs helpful interesting reduce amount code search defect source failure impact tool us reverse engineering technique dynamic black box testing technique automate testing recurring behavior pat tern presented android apps like tool market tool developed based two google apis us api automatorto interact device api uiautomationto read extract information screen device impact tool decomposed three dierent component explorer pattern finder reverse engineering tester component work iterative phase explorer component crawl ing application finder component try identify presence uipatterns pattern identied tester component applies associated test pattern test strategy check pattern well implemented tool work based catalog pattern corresponding test pattern dened able test pattern within catalog applying corresponding test pattern test pattern dened goal pattern vi input pattern corre sponding value ai sequence action perform order identify presence pattern ci set point check pattern exists pi precondition established state action occur infer presence pattern currently impact tool several pattern pattern catalog able test catalog dened based good practice android programming example test backgroundforeground pattern impact tool capture information screen sends application test aut background clicking home button impact tool brings application foreground selecting inthe application manager capture information screen httpsdeveloperandroidcomtrainingtestinguiautomator httpsdeveloperandroidcomreferenceandroidappuiautomation httpsdeveloperandroidcomdistributebestpractices reverse engineering android application reimpact compare information previously captured information captured dierent test fails another example call test pattern test call test pat tern two emulator needed emulator call emulator impact tool exploring emulator impact tool save screenstate receiving call disconnect incoming call save screen state screen state dierent receiving call test fails counterpart impact tool fact able testing pattern catalog exploration testing end user press home button behaviour exploretest outputresult key factor testing tool help standing xing problem detected impact tool two distinct output log file finite state machine fsm log file save information pattern identied exploration list theones passed test correctly implemented one failed test wrongly implemented fsm node arrow node node screenshots aut arrow describe action takento navigate screen screen impact tool able identify presence pattern compare two screen able identifying activity applicationunder test traversed exploration extension presented paper reimpact improves reverse engineering component allowing extract information activity inner screen presentingan hfsm structured three level abstraction understand better app analysis reverse engineering tool reimpact approach presented paper extends impact tool additional reverse engineering capability reimpact component able extract information activity state traversed dynamic explo ration android application approach may useful create navigation map explored application check navigation application one expected provide information activity inner screen application addition noticed approach allows extract dynam ically activity apps complete blackbox approach without access code neither apk application analysis besides useful comprehend better application analysis approach may help software testing context failure found typical problem found random testing tool able detect gon crash application since provide kind help dicult source problem within code tool thetester may add information activity failure detected help developer source failure within code architecture approach seen architecture reverse engineering approach reimpact output reimpact hfsm hierarchical finite state machine composed three distinct level abstraction similar structure used desktop application highest level abstraction first level representation activity traversed dynamic exploration algorithm impacttool level necessary know activity explored order exploration sequence activity explored navigation activity represented arrow number arrow two activity describes user action allow navigating origin activity destination activity action departure statescreen source activity reach statescreen target distinct activity number useful sequence action middle level abstraction second level possible visualize activity screen traversed action allow navigation level necessary know activity screen belongs action traverse screen belong activitythis level hfsm show inner navigation activity explored application bottom level abstraction third level possible visualize screen traversed exploration third level built using already existing feature impact tool allows building nal state machine fsm application test level necessary toreverse engineering android application reimpact access print screen sequence action traverse screen build fsm level hfsm show general navigation betweenscreens hierarchical finite state machine hfsm level detailed activity consider app set dierent activity set dierent screen set possible user action app uaua gon exploration app sequence user action traversing screensstates app sox dsosds xua consider ma set possible exploration app set possible path complete behaviour app automaticexploration process executed impact tool path mof type bottom level hfsm given middle level hfsm activity ashows sub sequence tthat traverse state belonging activity consider function fthat get state within tand give activity belong consider also set state traversed obtained user action exercised obtained tua middle level hfsm activity subsequence may described sequence action state belonging activity ssstsuatua top level hfsm show activity exercised fsou sdso tsuatua fso fsd extraction information regarding activity traversed conducted parallel normal execution impact tool parallel exploration algorithm exercise application analysis reimpact component run process impact tool present computer check current activity application every second time interval may customizedreverse engineering android application reimpact adb shell command output reimapct us adb android debug bridge command line tool allows communicate device command output package name name current activity application analysis moment seen adb shell dumpsys window window grep mcurrentfocus information collected along execution reimpact stored text including name activity exact time information collected besides information traversed activitiesthe tool also gather screenshots explored screen time screenshots taken red action change one screen another metric based information collected time activitiesactions screen possible determine screen within activity construct hfsm displayed using java library called mxgraph case study order validate approach developed performed experiment apps available google play store process followed select android mobile apps analyze execute reimpact tool apps selected record percentage activity detected period time obtain screen activity level hfsm selection android mobile application study performed android mobile application found google play store nal set android mobile application selected randomly set apps met following criterion rating higher ensure minimum quality must least time must gradle build application must gui order tested impact tool must english portuguese android apps selected belong dierent category gon reimpact tool execution apps selected run reimpact tool list previously chosen android mobile application example presented reimpact tool output minute test performed ametroorg android application present level hfsm present second level activity citylist application present third level hfsm level hfsm application orgametro hierarchical finite state machine hfsm level detailed activity citylist third level hfsm application orgametro analysing gures presented possible verify thatreverse engineering android application reimpact dynamic exploration possible extract three distinct activity aplist citylist citylist activity composed screen screen tra versed event screen element aplist activity exploration captured four dierent screen shot bug exploration apps percentage activity explored order calculate percentage activity explored necessary know total number activity exist application number ofactivities explored using reimpact approach possible obtain number activity explored possible obtain total number activity application blackbox approach wasnecessary perform static analysis source code apk given chosen application opensource necessary parse apk several platform allow downloading apks package name also possible get package name googleplay store get apk application possible analyze apk functionality android studio analyze app get androidm anif estxml analysis androidm anif estxml possible know many activity application calculate percentage activity explored exploration algorithm may inuence result achieved reim pact explorer able exercise complete behavior appli cation analysis reverse engineering component able todetectextract complete hfsm application discussing compar ing dierent crawler goal work however description new crawler developed impact tool may found result apps tested time period min found table apps tested exploration application wlingua able get activity worst result belong nba application explored activity total average numberof activity explored whole apps approximately noticed reimpact tool fully blackbox need get access androidm anif estxml accessed androidm anif estxml perform experiment ass percentage explored activity gon table percentage activity extracted app name activity min ametro paris metro easybus porto prociv madeira forest fire portugal newspaper sapo newspaper google news wlingua geochallenge math trick myresults nba wallet expense manager homeworkout pedometer medication alarm moodpath eboox average threat validity important remember threat validity associated result presented study performed apps set size could bigger however mitigate threat selected reliable apps dierent category diversify subject used case study current approach us time unit synchronizerelate information regarding screen activity susceptible error also activity declared androidm anif estxml related screen app activity detected reimpact becauseit get activity focus device exclude activity related screen percentage activity detected would higher mitigate threat tested app two time got execution per app testing app two time end spending min testing app spend day experimentreverse engineering android application reimpact conclusion paper presented reverse engineering tool reimpact able extract hfsm blackbox dynamic exploration android application hfsm structured three level top one show navigation among activity middle layer show navigation dierent state android application activity bottom layer show screen traversed exploration hfsm formalized illustratedin real example main dierence reimapct tool relation others complete blackbox nature need access code doesnot instrument code architecture tool presented detail case study performed real apps google play store goal check possible apply approach real scenario gather metric percentage activity possible detect dynamic exploration process error experimentwe intend carry additional case study injecting error applica tions checking reimpact tool help detect easily also aim perform experiment industrial environment access theapplicability utility ease context reference canfora penta cerulo achievement challenge software reverse engineering commun acm francescomarino marchetto tonella reverse engineering busi ness process exposed web application proceeding european conference software maintenance reengineering csmr ieee computer society washington csmr ferreira paiva acr android testing crawler piattini rupino cunha garc rodr guez guzm erezcastillo ed springer cham franke elsemann kowalewski weise reverse engineering mobile application lifecycles working conference reverse engineeringpp october httpsdoiorgwcre hackner memon test case generator guitar research demon stration track international conference software engineering icse ieee computer society washington joorabchi mesbah reverse engineering io mobile application working conference reverse engineering october httpsdoiorgwcre memon gui ripping reverse engineering graphical user interface testing proceeding working conference reverse engineering gon mesbah van deursen lenselink crawling ajaxbased web application dynamic analysis user interface state change acm trans web mirzaei garcia bagheri sadeghi malek reducing combinatorics gui testing android application proceeding international conference software engineering icse acm new york morgado paiva acr impact tool testing pattern mobile application ieeeacm international conference automated software engineering ase november ase morgado paiva impact tool android testing proc acm hum comput interact eics morgado paiva acr testing approach mobile application reverse engineering pattern ieeeacm international conference automated software engineering workshop ase workshop lincolnne usa november httpsdoiorgasew morgado paiva acr mobile gui testing softw qual httpsdoiorgs morgado paiva acr faria dynamic reverse engineering graphical user interface int adv softw paiva acr gon calf barros testing android incoming call ieee conference software testing validation verication icst xian china icst paiva acr gouveia jmep elizabeth delamaro testing mobile apps background come back foreground ieeeinternational conference software testing verication validation work shop icst workshop xian china httpsdoiorgicstw paiva acr tillmann faria jcp vidal rfam modeling testing hierarchical gui proceeding international workshop abstract state machine asm paris france march sacramento paiva acr web application model generation reverse engineering pattern inferring international conference quality information communication technology september httpsdoiorgquatic yang prasad xie greybox approach automated guimodel generation mobile application cortellessa varr ed fase lncs springer heidelberg approach prototype tool generating executable iot system test case dario olianasb maurizio leotta filippo ricca dipartimento informatica bioingegneria robotica ingegneria dei sistemi dibris universit genova genova italy darioolianasdibrisunigeit maurizioleottafilipporicca unigeit abstract internet thing iot system becoming ubiquitous assuring quality paramount importance especially safetycritical context unfortunately quality assurance proposalsare present literature paper propose approach semiautomated model based generation executable test case oriented systemlevel acceptance testing iot system approach supported prototype tool taking input uml model system test additional artifact produce output test suite check ifthe behavior system compliant model empirical evaluation approach executed mobile health iot system diabetic patient involving sensor actuator smartphone remote cloud system show test suite generated tool able kill mutant articial bugged version system test keywords iot testing modelbased test generation empirical study introduction internet thing iot system composed interconnected physical device share data often include central remote control server cloud spread system signicant impact aspect thesociety year changed life billion people ensuring iot system secure reliable compliant requirement fundamental task since often safetycritical however testing kind system dicult due wide set disparate technology used build hardware software lack ing consolidated testing approach added complexity comeswith big data three huge volume high velocity wide variety paper propose evaluate toolsupported approach semi automated acceptance testing iot system acceptance testing type ccirclecopyrtspringer nature ed olianas blackbox testing based test scenario sequence action performed user sensor system acceptance testing chosen ourproposal since according many organization assembling iot system testing whole simple eective way ensure quality proposal classied modelbased approach since test case derived model system represented uml state machine class diagram case goal automated test generation toolimplementing approach generating test suite composed executable test case test script req complete enough exercise scenario system test corresponding path state machineand req correct respect semantics provided model satisfy requirement prototype tool relies graph exploration algorithm generates set path starting target model uml state machine class diagram algorithm guarantee every transition state machine traversed least considering thegenerated path satisfy second requirement proposed approach relies searchbased algorithm transform previously generated test path feasible path searchbased software engineering branch software engineering applies metaheuristic search technique software engineering problem proposed approach empirically evaluated determine eec tiveness generated test suite detecting bug well established auto mated validation framework based mutation testing used support empirical evaluation mutation testing technique consists exercising test suite slight variation mutant original code simulating error developer could introduce development maintenance activity automatic test case generation state machine wellknown problem many existing technique tool existing work cover dierent aspect test generation problem like criterion state machine coverage test generation algorithm used implement prioritization relevant test case one likely bug minimality generated test suite generating minimum number test case able satisfy desired coverage criterion transformation abstract test case executable code however best knowledge scientic work address explicitly problem generating test script model iot system proposes prototype tool proposal paper organized follows sect describes diamh case study section describe proposed approach section report empirical evaluation approach sect concludes paper case study diabetes mobile health iot system diamh simplied diabetes mobile health system monitor patient glucose level sends alarm patient smartphone dangerousan approach prototype tool generating executable iot system glucose trend detected regulates insulin dose consequently diamh already used case study work concerning testing ofiot system however manual approach derive test case model behavior system proposed contrast automated generation proposed work shown diamh system composed aglucose sensor insulin pump attached patient patient smartphone wirelessly connected sensor pump used receive alarm case dangerous glucose value analysis control system diamh core running cloud receives glucose reading analyzes pattern command theproper action diamh required behavior glucose sensor measure glucose level patient given timed interval every min sends smartphone mobile app display value forward remote diamh core core component system store last glucosereadings received patient smartphone depending many reading exceed given threshold command insulin injection necessary send alarm patient receiving value analysis andcontrol system decides state assigned user normal value among last exceeded threshold action required insulin required value among last exceeded threshold insulin injection performed problematic value among last exceeded threshold insulin injection performed alarm displayed smartphone prevent performing many injection allow insulin make eect every time insulin injection performed following glucose reading ignored injection required patient conrmit app require pump inject insulin dose prevent missing injection pump failure pump sends feedback smartphone injection performed successfully receiving thisfeedback app show total number injection performed current session testing execution environment work focus testing level ofacceptance using partially emulatedvirtualized version diamh sensor pump virtualized nodered ows mobileapp running android emulator note code mobile app used real diamh system architecture diamh corresponding testing environment interaction shown olianas nodered httpsnoderedorg visual owbased programming tool built javascript serverside runtime environment nodejs allowsdeveloping application interconnected node developer us webbased editor place dierent type node deploy execution model based node andmessages node functional unit delegated specic task message json object exchanged node perform action property received network generated node diamh component testing execution environment relation test script overview approach starting describe approach let give denitions accord ing denition ieeeisoiec system software engineering vocabulary test case mean set input execution condition expected result developed particular objective exercise par ticular program path verify compliance specic requirement test path mean ordered sequence state machine transition starting initial state represents test case call executable test path feasible path path traversed state machine never meet false guard test script mean executable code implement test path approach step approach composed step automatically produce test script test engineer design model iot system implement wrapper mock class following modelan approach prototype tool generating executable iot system dene orgenerate conguration le execute test generation prototype tool runthe generated test script iot system workow along involved artifact relation among shown next section provide detail various step even space reason provide full stepbystep guide application approach usage tool interested reader detail approach tool source code thecomplete model artifact diamh case study available http githubcomquaticiottestgenerationiotexecutabletestcasegeneration approach workow input data preparation section describe three step approach dealing preparation various artifact required test script generator model design system test starting existing artifact describing system component behav ior test engineer design testing model system composed uml class uml state machine diagram note serious indus trial iot system reasonably assume accurate description thesystem component required behavior exists used starting point test engineer follow approach test engineer create class diagram con taining class component iot system class expose three kind member method operation perform action olianas may return value operation generating call event used event state machine latter operation return valueand eld store value used system uml state machine describing required behavior iot system modeled transition labeled triggering eventaguard action call enabled transition transition true guard execution state machine happens context object instance class class diagram declared execution owof state machine always start initial pseudostate black circle figure report state machine designed diamh three state representing generic patient condition normal moreinsulin problematictogether detail describing required behavior diamh component appcloudsensor pump wrapper mock class implementation phase model used derive two set class wrapper class andmock class former class used test script interact iot component latter class used test script generation tool evaluate state machine guard executable test path generated simulate component behavior test generationin phase may required add utility method method reset component state default executed beginning test case may useless real system required testing orto modify class interface example adding parameter method wrapper mock class must manually implemented one language chosen implementing test script latter python sincethey executed tool implemented python reduce eort required developer wrapper class may provide framework oering common functionality iot testing like example sending receiving message dierent communication protocol mock class since must emulate behavior sut require carefully designedby developer make sure behavior compliant suts one however modelbased code generation technique employed generate model example report sketch wrapper class fordiamh insulinpump component method eld insulinpump erogatedinjections store number injection done current session reset restore pump internal variable default valuesan approach prototype tool generating executable iot system diamh state machine diagram following portion python code cloud mock class provided class cloud def getcriticalcount self re xinself glucosereadings ifx self threshold re return re getcriticalcount return number glucose reading exceeding thresh old received cloud far invoked every time test generationtool traverse transition guard check number value threshold conguration file denitiongeneration interface wrapper mock class although derived model signicantly dier original component actual system testto gap model implementation conguration le bedened approach four conguration le make imple mentation detail explicit olianas implementation denition associate every class model actual implementation want test script diamh itcontains json object class model associated concrete wrapper class implementation mobileapp mobileappappium cloud cloud sensor glucosesensor pump insulinpump prototyping stage must dened manually realworld scenario may generated tool let developer choose implementation want test script wrapper class conguration map interface class model interface implementation automatically generated wrapper class variable denition contains information required instantiate variable state machine generated test script appvariable app type mobileapp option modier static vi ibility protected prototyping stage must dened manually realworld scenario information type access modierof variable may integrated model language conguration map construct pseudocode state machine actual code test script state machine declare object varname class java must type varname new class since depends target language pseudocode provided test generation tool supported target language java python chose four le instead saving information one allow changing independently generating test script example want dierent implementation need change implemen tation denition wrapper class conguration compiled manually generated automatically wrapper class written java prop erly annotated dened two annotation modelname specie model name class method annotates omitted used annotate parameter wrapper class reported model test script generation point input required test generation tool ready nowthe tester required run tool providing input executionow tool summarized described detail following section step conguration builder step inspects wrapper class using reection creates wrapper class conguration lethen tool analyzes state machine step generates set path traverse starting initial state step path thanks code written state machine label implementation detail stored inconguration le transformed tool executable test script step given target language implementation currently support java pythonan approach prototype tool generating executable iot system tool architecture execution test path building generation wrapper class conguration le step tool read state machine par code step nd initial set test path using algorithm guarantee transition coverage step every transition state machine traversed least considering generated path proposed algorithm step designed follows take input directed multigraph directed graph permitted multiple edge edge source target node represented set vertex vthe state diagram set edge ethe transition diagram initial state assume every state vi reachable element econtains edge boolean mark edge visited yet element vcontains state path reach saved time visit state vertex vand edge eoers following method vhasoutedges return trueif vertex outgoing edge falseotherwise vunvisitedoutedges return list outgoing edge vnot yet visited egettarget return destination vertex egetsource return source vertex pseudocode initial path generation algorithm list findpathsforedgecoverageves queue edgetovisit list finalpaths edgetovisit push unvisitedoutedges true edgetovisitpop vertex egettarget evisited true ifvpath empty first time visit node olianas path reach created concatenating current edge path bringing urce state vpath getsource pathe current state outgoing edge added unvisited queue ifvhasoutedges edgetovisit pushv unvisitedoutedges outgoing edge path finalized else finalpathsaddv path else finalpathsaddegetsource pathe already visited node finalize path ifedgetovisit empty break return finalpaths algorithm produce add set potentially nonexecutable test path see output step new path two case time visit already visited node visit node without outgoing edge since unvisited edge node added queue node visitedfor time assume every node reachable starting node every edge appear least one produce path moreover since nal path always taken edgetovisit queue since duplicate edge queue edge added node visited time algorithm also guarantee every produced path end dierent transition path executability handling test path generated previous step built looking graph structure state machine without checking transition guard areenabled therefore transformed immediately executable test script case state machine properly designed particular used variable declared transition outgoing theinitial state analyze path using symbolic execution check nonexecutable transition add loopie sequence tran sitions starting ending state transition enable startsbefore enable step test path ordered sequence transition execute mean execut ing starting transition code included transition label event guard action entry action target state code state machine refers class declared class diagram andthat need aforementioned mock class without would able execute test path phase choose transition traverse make predicate true must introduce notion branch distance described time korel branch distance metric computed boolean predicate tell close make given predicate true original versionof korel handled relational predicate equality inequality extended tracey support negation usu ally input data generation searchbased test generation technique branchan approach prototype tool generating executable iot system distance used tness function component tness function metaheuristic search algorithm like hillclimbing simulated annealing orgenetic algorithm scenario big potentially innite search space input value maximize minimize tness function case input want loop xed max imum length enables specic transition action contained transition composing loopwill enable transition interest see fol lowing example step search space enabledoutgoing transition current state search algorithm quite straightforward let make example diamh state machine see given moment need enable transition normal mor einsuline state context already received reading threshold critical enable transition guard cloudgetcriticalcount tracey report branch dis tance boolean predicate kind eeisifeeotherwise thus current distance dis algorithm need analyze eect branch distance guard interest executing transition cloudreceiveover increment value criticalcount cloudreceiveunder modify value criticalcount remain ing selftransition state normal executed since maxreadings equal obtained reading far reduce thedistance dto goal enabling transition normal tomoreinsu line algorithm chooses cycle twice selftransition labeled cloudreceiveover indeed way dchanges cycle second cycle point criticalcount becomes equal transition moreinsuline executed test script building point almost information required build executable test script contained executable test path see input step need additional implementation detail languagedependent stored conguration le detail language conguration used translate pseudocode used state machine theprogramming language used actual test script variable denition used correctly instantiate variable simple loop traverse path print code found traversed transition state relying theaforementioned language conguration generate test script correct syntax generating java test script junit framework generate test method annotated test annotation using public void modiers test script diamh prototype tool generated test script diamh composed line code locs longest test script com posed locs shortest average locs standard olianas deviation locs high standard deviation due business logic diamh enable transition must send glucose value cloud submission requires least two line code state machine point view see every state transition traversed least considering generated test path test input generation provide detail test input data managed approach support arbitrary input coming auser environment input value must either xed computed execution test generation tool arbitrary input mean input whose value depend system something externallike user environment another system since usually system accept kind input diamh make exception value coming sensor example arbitrary input solution must found relied onequivalence partitioning software testing technique divide input data program partition value produce equivalent behavior diamh threshold note strategy beadopted input many partition otherwise would impractical add much transition represent input completely empirical study goal empirical evaluation determine eectiveness proposed approachprototype thus research question investigated following rqare generated test suite able detect bugsfaults iot system test answer research question must able quantify bugdetection capability generated test suite mutation testing possible solution validate eectiveness test suite apply mutation testing technique consists exercising test suite slight variation original code simulating error developer could introduce development maintenance activity variation named mutant used identify weakness test arti fact determining part software poorly never tested mutant test script run least one test script fails mutant detected killed prof eectiveness test suitein detecting kind fault introduced mutant test fails mutant detected survives prof test suite weakness detecting kind fault introduced mutant thus goal tobuild generator able build test suite killing highest number gener ated mutant metric evaluate overall test suite quality given percentage mutant killed total higher betteran approach prototype tool generating executable iot system validation framework best knowledge test suite validation framework based mutation testing iot system exists thus decided implement sup porting tool meant generate mutant diamh mutantrun generated test suite collect result detail execu tion presented starting point source iot system test tool extract code function node system ows save generates mutant extracted code andfor mutant mof node generates copy nodered ows min place javascript mutator subcomponent relies stryker httpsstrykermutatorio mutation tool javascript sup port various mutation operator unary binary logical update instruction boolean substitution conditional removal array declaration block statement removal mutant manager test runner component communicate nodered server generated mutant node red start nodered server executing mutated run generated test suite sut save result stop server result diamh total mutant generated precisely sensor cloud pump note execution validation framework table diamh mutation testing preliminary result considering generated mutant component mutant survived killed sensor cloud pump total olianas mutate mobile app implementation table show number killedsurvived mutant execution generated test suite rstcolumn indicates component mutated mutant indicates number generated mutant component survived column indicates many mutant detected generated test suite killed many detected table evident generated test suite able killdetect mutant overall mutant localized cloud component detection rateis even higher reaching analyzed detail mutant discovered table report result analysis surviving mutant undetectable since manifest exactly expected behavior original diamh equivalent mutant therefore detected blackbox testing technique equivalent mutant greatest majority mutant survivor aected log print statement nodered server console others mutant equivalent redundant statement mutant survivor instruction performed function node usually loading global variable assigning value attribute messageare performed identically subsequent node modifying assignment aect execution result table diamh mutation testing survivor mutant detailed manual analysis component survived equivalent behavior dierent behavior print statementsredundantstatements notmodeled bvarequired sensor cloud pump total four mutant equivalent behavior marked modify expression generate glucose reading sensor two expression generate value respectively threshold mutant change operator expression modied expression still generates valuesin right range survivor mutant change behavior diamh minor aspect documented requirement thus themodel modeled thus dier original system way checked generated test script example insulin pump mutant prevent pump replying ping coming smartphoneif mobile app started receive response ping redan approach prototype tool generating executable iot system fail message appear pump status info mobile app test script check status info since designed state machineno assertion method check generated test detect mutant majority detected pump finally two mutant bva required column kind mutant need specic input detected bva boundary value analy sisis testing technique focus value around boundary decision point two mutant category changed two node check many reading threshold stored cloud memory appreciate dierence original system sent input sequence contain precise threshold valuesummary generated test script able detect mutant overall however analyzing detail surviving mutant discovered several change external behavior diamh system equivalent increase real capability approach finally additional mutant survivedsince changed behavior diamh minor documented aspect excluding also mutant since limit input model approach mutant detection rate approach arrives conclusion future work paper presented approach semiautomated modelbased test generation oriented acceptance testing iot system approach supported prototype tool automatically generates test script aninput model representing behavior system approach empirically evaluated using mutation testing test suite generated approach able detect considered mutant majority mutant modifying behavior diamh detected due incompleteness model however representing complete behavior iot system single state machine quite hardtask possible solution intend dierent state machine describe behavior system test every state machine focus one specic aspect system behavior main functionality reliability connectivity clearly approach payo small iot system like diamh since application complex however believe becomes costeective complex iot system ten hundred test script must generated tool better understand aspect extending experimentalpart complex iot system inspired smart santander httpwww smartsantandereu public parking management system parking lot monitored sensor allows user ask free parking theirsurroundings smartphone finally preparing guide able teach follow various step required approach learn tool olianas reference endtoend testing iot integrity technical report httpsalmparasoftcom endtoendtestingforiotintegrity isoiecieee international standard system software engineering vocabulary httpsdoiorgieeestd ammann outt introduction software testing cambridge university press cambridge friedman hartman nagin shiran projected state machine cov erage software testing sigsoft softw eng note gantait test case generation prioritization uml model pro ceedings international conference emerging application information technology eait ieee grun bjm schuler zeller impact equivalent mutant pro ceedings international conference software testing verication validation workshop icstw icstw harman mansouri zhang searchbased software engineering trend technique application acm comput surv jia harman analysis survey development mutation testing ieee trans softw eng tse king symbolic execution program testing commun acm korel automated software test data generation ieee trans softw eng leotta acceptance testing approach internet thing system iet softw httpsdoiorgietsen outt untch mutation uniting orthogonal wong mutation testing new century adbs springer boston stallbaum metzger pohl automated technique riskbased test case generation prioritization proceeding international workshop automation software test ast tracey clark mander mcdermid automated framework structural testdata generation proceeding ieee international conference automated software engineering ase ieee utting legeard practical modelbased testing tool approach mor gan kaufmann publisher inc applied statistical model checking sensor behavior analysis salim chehidab abdelhakim baouya saddek bensalem marius bozga university grenoble alpes cnrs verimag grenoble france salimchehidaabdelhakimbaouyasaddekbensalem mariusbozga univgrenoblealpesfr abstract analysis sensor behavior becomes one essential challenge due growing sensor making decision iniot system paper proposes approach formal specication analysis behavior starting existing sensor trace model embodies sensor measurement time formof stochastic automaton built temporal property feed statistical model checker simulate learned model perform analysis ltl property employed predict sensor reading intime check conformity sensed data sensor trace order detect abnormal behavior keywords iot sensorstochastic automaton statistical model checking ltlbip introduction internet thing iot become one recent technology mostly used various domain health environmental monitoring construction energy management smart vehicle building consists collection entity interacts user fulll common goal sensor critical device iot ecosystem allows measure state information time monitor physical component data gatheredfrom dierent sensor used make decision promote automation iot system providing ecient intelligent service whereas corrupted data transmission malfunction sensor due natural event orother cause inuence correct operation entire system indeed massive increase issue growing number deployed sensor push towards sensor behavior analysis checking sensed data analysis sensor behavior detecting erroneous reading attracted great attention many approach proposed based several method statistical method probabilistic method clusteringbased method predictionbased method governed ccirclecopyrtspringer nature ed chehida standard learning requirement approach rely metadata structure sensed data paper propose modelbased approach involving formal veri cation sensor behavior analysis approach aim make analysis process sensed data rigorous automatic scalable meaningful figure show step approach first start collecting sensor trace data preprocessing required build approximate model sensor behav ior apply formal verication technique analyze model thencheck new measurement compliant learned model generic approach sensor behavior analysis model checker allow checking conformity system model expressed formal notation set property expressed logical language study apply type model checker called statistical model checker smc verify whether sensor model expressed stochastic automaton satises given logical property probability based model simulation quantitative property expressed lineartime temporal logic ltl predict sensor reading time qualitative ltl property check quality sensed data compliance provided tracesseveral smc tool proposed prismsmc uppaalsmc bip language sbip used paper behavior mod eling smc analysis apply approach industrial case study ofthe cecebre dam spain equipped wireless sensor measure water contribution dam paper organized follows build sensor behavior model sect analysis result sensor model presented sect finally present related work sect draw conclusion sect sensor behavior model work bipbehavior interaction priority componentbased language rigorous design system bip component nitestateautomata transition labeled port state denote control location see start data preprocessing extraction statistical information needed build behavior model sensor httpswwwverimagimagfrtoolsdcsbipdoclatesthtmlindexhtml applied statistical model checking sensor behavior analysis data preprocessing case study consider three sensor deployed dam cecebre city coruna spain sensor used measure water height rain precipitation water output flow asshown data collected sensor used control opening spillgate order ensure water reach maximum level dam anomalous behavior sensor inuence thecorrect operation dam system objective build formal model specify normal behavior sensor model used control sensor reading detect failure anomaly dam infrastructure trace time series data recorded sensor per day since collected reorganized original trace creating separate csv per sensor new contains sensor reading per day year shown data preprocessing done three step data cleaning lter remove faulty sensor data lter deletes nan data data make sense negative inconsistent data data discretization convert continuous quantitative data discrete qualitative one paper present several method proposed time series data discretization study ewd equal width discretization method simplicity consists mapping numerical value predened xed interval equalwidth bin level associated distinct discrete value work relied data visualization using histogram determine number oflevels water height sensor level data discretization generation distribution data discretized extract sta tistical information generate sensor distribution counting occurrence level water height day chehida preprocessing sensor data specication sensor model figure present behavior model water height sensor expressed bip language behavior model water height sensor bip support several formal modeling formalism based discrete continuous time markov chain dtmc ctmc generalized semi markov process gsmp work stochastic automaton express behavior model sensor stochastic semantics dened variable based probability distribution model select day distribution based sensordistribution generated theapplied statistical model checking sensor behavior analysis previous section according distribution water high level dened model specify behavior sensor dened using pattern sensor model number level change depending sensor data using model simulateand analyze behavior dierent sensor period year sbip frameworkhas graphical userinterface permitting edit compile simulate model automates dierent statistical analysis shown input tool system model sexpressed bip language like property expressed lineartime temporal logic ltl andor metric temporal logic mtl using sbip perform two type analysis quantitative estimate probability system ssatises given property qualitative test whether probability given property sat ised system si greater equal certain threshold sbip statistical model checker decide whether ssatises written ssbip refers simulation based technique probability estimation quantitative property hypothesis testing qualitative property quantitative analysis work stochastic bounded variant ltl express property ltl path formula dened using four bounded temporal operator namely nextn keventually always ki integer value specie length considered system execution httpwwwverimagimagfrbipsmcastatisticalmodelcheckinghtml langen chehida trace called state formula boolean predicate evaluated system state sbip allows check parametric property xi parameter ranging nite instantiation domain also provides summary analysis result generates specic curve andor plot result present fourexamples quantitative property property probability water height level ltl fwhllday result given level likely level le likely however level never observed onthis day prediction concerning water height sensor estimation sensor help manager dam infrastructure adjust spillgate level probability water height level property probability level water height week january may ltl braceleftbigg pfwhlldaytt figure show smc verdict property see level rarely observed week january however level likely week may opposite level possible week january rare week may ltl property predict evolution water height level period year property probability water height level stay level last week mayapplied statistical model checking sensor behavior analysis probability water height level week january may ltl braceleftbiggpgwhllday whlldayt high possibility water height level remain level last week may property probability water height change level january level next day ltl braceleftbigg pwhl day whllday figure show change level likely little chance change level result property result property qualitative analysis qualitative analysis sensor behavior rate sensor reading based probability following chehida observed red never seen year rare orange observed twice within year possible yellow observed time year possible green observed time table denes possible probability based consideration express qualitative property allow testing compliant sensor reading learned model table sensor state rate state observed rare possible possible probability property check whether probability water height reach level higher ltl pfwhl daytt figure show result provided sbip property allows calculat ing set dlvpof day level water height possible probability water height level possible way calculate set dlvpdlvpdlvpdlvp level possible based calculation dene function isv erypossibe isv erypossibe whlday whl daydlvpwhl daydlvp whl daydlvpwhl daydlvp whl daydlvp also dened function ispossible israre isnotobserved allow respectively check data collected sensor possible rarely observed never observedapplied statistical model checking sensor behavior analysis dened function used build model allows eval uating conformity water height sensor reading regarding providedtrace model help distinguish anomalous correct sensor reading sensor state model sensor state model used check quality sensed data existing trace discover possible reading green point possible reading yellow point rare reading orange point month may shown figure rare readingsare detected beginning may score water height sensor data may color gure online chehida sensor state model also allows checking new observation figure present test result may see unusualobservation found observation avril possible observation may highly possible score water height sensor data may related work time series analysis one active area research due application dierent eld context iotbased system sensor timeseries data predicting next measurement detecting erroneous reading relevant task paper present several approach proposed purpose statistical approach method proposed build windowbased forecasting model past observation classies sensor reading anomalous based given prediction condence inter val probabilistic approach probabilistic model bayesian network bns measure probability sensor reading however approach scale well proximitybased clusteringbased approach distance sensed data detect erroneous reading high dimen sional data approach work well predictionbased approach machine learning method predict sensor reading based model trained past observationshowever training timeintensive approach generate stochastic automaton specify sensor behavior past observation apply smc simulate learned model express ltl property predict sensor reading analyze sensor behavior time smc powerful technique handle scalabilityand requires le memory time paper provides survey existing smc tool sbip tool used work applied analysis various system approach dierent approach presented allows build behavioral automatabased model data analyze model using formal verication technique among work directionapplied statistical model checking sensor behavior analysis author extended finite automaton residual technique detect deviation behavior inhabitant smart home froma log binary sensor event paper model log scada system using timed automaton applies uppaal model checker express set logic property fordetecting attack targeting system us markov decision process modeling behavior elastic cloud application based past log introduces probabilistic model checking perform cloud elasticity decision using pctl property specie stochastic model deterministictime markov chain architecture description managed system considering dierent metric related cloudinfrastructure execution trace prism model checker used optimize selfadaptation decision conclusion presented approach formal analysis sensor behavior formal model expressed stochastic automaton derived sensor time seriesdata quantitative ltl property expressed model used pre dict sensor reading also qualitative ltl property used dening second automatabased model allows checking new measurement compliant past observation applied approach analyzing behavior three sensor dam infrastructure dierent time ourapproach provides several advantage including bip formalism allow rigorous specication analysis sensor behavior componentbased approach supported bip facilitates por traying sensor behavior reusability maintainability feature developed prototype automatically generates sensor behavior sensor state model existing trace statistical model checker consume le memory check model large state space future planning enhance proposed approach analyzing consistency behavior set sensor expressing inter sensor property acknowledgment research leading result supported european union brainiot project heu grant agreement author would like thank emalcsa company data col lected dam infrastructure chehida reference agha palmskog survey statistical model checking acm trans mod eling comput simul alturjman malekloo smart parking iotenabled city survey sus tain city soc alur henzinger realtime logic complexity expressiveness inf com put httpsdoiorginco basu rigorous componentbased system design using bip frame work ieee softw beaulaton said cristescu sadou security analysis iot system using attack tree albanese horne probst ed gramsec lncs springer cham breunig kriegel sander lof identifying densitybased local outlier acm sigmod rec daissaoui boulmakoul karim lbath iot big data analytics smart building survey procedia comput sci http doiorgjprocs david larsen legay miku cionis poulsen uppaal smc tutorial int softw tool technol transf dougherty kohavi sahami supervised unsupervised discretiza tion continuous feature prieditis russell ed machine learning proceeding morgan kaufmann san francisco http doiorgb franco correia barbosa zenharela schmerl garlan improving selfadaptation planning software architecturebased stochasticmodeling syst softw httpsdoiorgjjss giannoni mancini marinelli anomaly detection model iot time series data arxiv ab deng discovering clusterbased local outlier pattern recogn lett httpsdoiorgs erault lassaigne magniette peyronnet approximate probabilistic model checking steen levi ed vmcai lncs springer heidelberg hill minsker amir realtime bayesian anomaly detec tion streaming environmental data realtime bayesian anomalydetection water resource re kwiatkowska norman parker prism verication probabilistic realtime system gopalakrishnan qadeer ed computer aided ver ication springer heidelberg malhotra vig shro agarwal long short term memory network anomaly detection time series esann applied statistical model checking sensor behavior analysis mediouni nouri bozga dellabani legay bensalem sbip statistical model checking stochastic realtime system lahiri wang ed atva lncs springer cham mercaldo martinelli santone realtime scada attack detection mean formal method ieee international conference onenabling technology infrastructure collaborative enterprise wetice ieee napoli italy june httpsdoiorgwetice naskos gounaris mouratidis katsaros online analysis secu rity risk elastic cloud application ieee cloud comput httpsdoiorgmcc nouri bensalem bozga delahaye jegourel legay statistical model checking qos property system sbip int softw tool technoltransf httpsdoiorgs nouri mediouni bozga combaz bensalem legay per formance evaluation stochastic realtime system sbip framework intj critical computbased syst park kim jeong inuencing factor risk perception iotbased home energy management service telematics inform pnueli temporal logic program annual symposium foun dations computer science ieee computer society usa october httpsdoiorgsfcs saives pianon faraut activity discovery detection behavioral deviation inhabitant binary sensor ieee trans autom sci eng httpsdoiorgtase shahid naqvi qaisar oneclass support vector machine analysis outlier detection wireless sensor network harsh environment artif intell rev httpsdoiorgsx tao advanced wavelet sampling algorithm iot based environmental mon itoring management comput commun httpsdoi orgjcomcom yang webb discretization method maimon rokach ed data mining knowledge discovery handbook springer boston xie shunzheng largescale hidden semimarkov model anomaly detection user browsing behavior ieeeacm trans network httpsdoiorgtnet younes hl simmons probabilistic verication discrete event system using acceptance sampling brinksma larsen ed cav lncs springer heidelberg zhu wan time series outlier detection based sliding window prediction math probl eng preliminary experience requirementsbased security testing joao miranda ana paivab alberto rodrigues silva faculty engineering university porto porto portugal upapaiva feuppt inesc tec porto portugal inescid lisbon portugal instituto superior ecnico universidade lisboa lisbon portugal albertosilvatecnicoulisboapt abstract software requirement engineer tester generally dene technical document natural language practice lead inconsistency documentation consequent systemimplementation previous research shown writing requirement test structured way controlled natural language like rsl help mitigate problem study go discussing newexperiments carried validate rsl complementary tool called itlingo studio applied dierent system technology namely possibility applying approach integrate test automation capability security testing preliminary conclusion indicates combining tool itlingo studio robot framework possible integrate requirement andtest specications test automation would bring benet testing process productivity keywords test automation security testing test case generation requirement engineering rsl introduction vast majority requirement specications written natural language however natural language may lead problem ambiguity incompleteness inconsistency incorrectness documentation turn lead implementation error addition dene acceptance test tester rely reading document document clear complete test case also experience problem nalsystem dierent intended one approach mitigate issue using controlled natural language like itlingo rsl requirement specication language provides structured way writing requirement test case rsl provides capability specify case case test many construct common language ccirclecopyrtspringer nature ed preliminary experience requirementsbased security testing recently maciel discussed approach aim integrate combine requirement test case specication test automation tool toimprove process dening executing acceptance test particular discussed integrate itlingo studio eclipsebased ide support rsl language robot framework however software application example used illustrate approach simple thus goal work ass applicability approach dierent setting first aim ass applicability webapplications developed using technology namely based spa single page application architecture second aim preliminary check possible extend approach perform security testing paper structured section section present proposed testing process section describes experiment performed discus result achieved section refers discus related work finally sect present nal conclusion open issue proposed testing process proposed testing process intends combine requirement test specications dened tool like itlingo studio test automation supported tool like robot framework section briey introduces tool considered research overview proposed process suported tool itlingo studio robot framework itlingostudio eclipsebased tool desktop ide authoring technical documentation requirement test rsl language project management plan psl language platform independent application specications asl scope paperwe consider itlingo rsl rsl brevity rsl controlled natural language help production requirement test specica tions systematic rigorous consistent way rsl includes rich set construct like case goal user story also case test data entity actor stakeholder many others detail itlingo language implemented xtext frame work httpseclipseorgxtext specications rigorous automatically validated transformed representation formatsfigure depicts itlingo studio test case specied rsl robot framework language robot framework short generic open source automation frame work used test automation robotic process automation open extensible architecture integrated tool create exible automation solution robot framework provides textual language keywordbased easy syntax machine human readable capability extended library implemented python java miranda rsl specication test script robot scope research test case dened rsl generated test script test script executed rf engine key advantage high modularity extensibility platform agnostic thanks driver plugin architecture core framework require previous knowledge system test process figure show approach originally proposed considers end toend integration requirement test case test script namely combining tool like itlingo studio rsl specications robot frame work keywordbased test script approach consists sequence task varies specica tion requirement execution test follows requirement specication task specify requirement manual requirement elicited documented requirement engineer using rsl language may also involve stakeholder like tester domain expert validation purpose task favor systematic specicationof requirement done manually itlingo studio eclipse ide authoring rsl spec excel template test case specication validation task specify test case semi auto us requirement dened previous step generate test case namely considering mapping case case test denedin task rene test case manual allows test engineer rene complete previously generated test case relevant test scenario step etc also test generated previous task maybe subject manual validation could result new test case arepreliminary experience requirementsbased security testing added nal specication test case validation also human intensive timeconsuming task proposed testing approach originally dened test script generation specication validation test case completed task generate test script auto consists generation test script executed test automation tool like therobot framework generation based mapping established rsl specication concrete syntax robot framework map element user interface web application involves several element properly support test automation based acceptance test generic element mapped concrete variable dened test script act related element dur ing test case execution establishment map purpose task miranda map gui element keywords semiauto however using web scrap per browser extension selenium webdriver httpswwwseleniumdev project possible automatically capture generate script suc cessfully map element test script unfortunately case depend proper keywords mapping hard fullyautomated execute test script task execute test auto take consideration test script previously generated variable mapped concrete element execute system test sut test automation task produce artifact test report includes logdetails execution security testing based rsl section describes two set experiment conducted explore dierent objective one aim apply rsl testing approach web application dierent characteristic one considered originally dierences technology used develop automation practice website used previous study owasp juice shop automation practice developed php owasp juice shop devel oped using angular angularmaterial library styling usage angular many case prevented correct mapping element respective keywords happens mainly unspeciedelement identiers element generic standard overlay issue prevented correct map input button dropdown ton found second set experiment aim evaluateif rslbased testing approach used well test security aspect application used experiment juice shop web application opensource web application entirely written javascript listed owasp vwa vulnerable web application directory juice shop includes large number hacking challenge vulnerability useris supposed exploit suggested juice shop mimic ecommerce website sell juice vegetable good application example acceptance security testing first experiment set experiment aim check applicability rsl testing approach step experiment dene requirement specication dened data entity user product others actor visitor cracker case signup signin respective test case second step dene test case check behavior appli cation related authentication functionality namely sign signpreliminary experience requirementsbased security testing screenshot juice shop application spec sign attempt simulating brute force attack spec test case consist user trying signup signin ward goal brute force attempt deliberately sending wrong password last time submitting correct password specication test case rsl engine generates automat ically respective test script dened robot framework robot le support establishing mapping keywords ele ments gui used two tool one developed previous work web scraper technique select element used robot framework web scraping achieved mapping specic element web page xml path xpath cs selector generally speaking xpathis trustworthy possible achieve certain element selection precisely xpath given element constructed xml absolute path additional selector allow take shortcut ona document structure order reach element solution adopted overcome technical problem resort xpath mapping instead cs mapping however xpath based approach also issue namely webscrapping tool support path free free webscrapping extension supported xpath wasnot accurate leading unnecessary rework free webscrapping extension used default try xpath using special selector may include cs class relative selector thus opted always theabsolute xpaths miranda signup test case idea signup try test user registration informing thecorrect parameter check user successfully created test extended verify web application allows user registered twice etc test result successful although mapping issue custom element angular material select input detected xed usage xpath signin test case idea signin test check previously registered user signin according documentation providing email respective password result test success even though presented issue previous test successful login attempt made user iscorrectly authenticated spec show signin test case specied rsl language spec show equivalent specication robot framework language usecasetest ucsignin sign test case valid usecase signin actorinitiates visitor description visitor want sign testscenario signin main isconcrete dataentity user withvalues euser email euser password userawdrt net qwer step system execute openbrowser system open browser http juice shop herokuapp com step actor callsystem element dismiss visitor click dismiss button step actor callsystem element account step actor callsystem element signin visitor click signin button step actor preparedata postdata readfrom user email visitor writes email step actor preparedata postdata readfrom user password visitor writes password step actor callsystem element confirm signin visitor click sign button step actor callsystem element account visitor click account button step system execute check elementonscreen text user firstname myaccount appears user name spec user sign test case rsl spec setting documentation basic test library seleniumlibrary variable email wypizsbdbmiazqybizawdrt net password qwer test case signin test documentation visitor want sign open browser http juice shop herokuapp com elementpreliminary experience requirementsbased security testing button contains class mat focus indicator raised button following sibling button element mat toolbar row classmat toolbar wbutton element navbarloginbutton input text input contains class mat input element mat form field autofill control email input password input contains class mat input element mat form field autofill control password element div idlogin form button element button contains class mat focus indicator menu trigger page contain element simple snack bar classmat simple snackbar star inserted span email spec user sign test robot framework spec multiple invalid login attempt test case test aim try check repetition kind protection multiple incorrect login attempt blocking account lockingetc attempt try emulate incorrect submission usernamepassword combination attempting login correct password check useraccount blocked repeated submission request determined application could also identied potential denial service attack application protection attack could alsoblock malicious user attempt number login attempt main point test check attempt request invalid password system present kind lock captcha blockmalicious attempt signin test result showed web application countermeasure brute force attack attempt possible keep retrying password correct usecasetest ucbruteforce signinbruteforce valid usecase suc bruteforce signin actorinitiates cracker description cracker want brute force sign variable user attribute email string attribute password string attribute wrong password string testscenario bruteforcesignin main isconcrete variable user withvalues user email user wrong password user password userawdrt net qwert qwer step system execute openbrowser system open browser http juice shop herokuapp com step actor callsystem element dismiss visitor click dismiss button step actor callsystem element account step actor callsystem element signin visitor click signin button step actor preparedata postdata readfrom user reg email visitor writes email step actor preparedata postdata readfrom user reg wrong password visitor writes wrong password step actor callsystem element confirm signin visitor click sign button step actor callsystem element confirm signin visitor click sign button step actor callsystem miranda element confirm signin visitor click sign button step actor callsystem element confirm signin visitor click sign button step actor callsystem element confirm signin visitor click sign button step actor preparedata postdata readfrom user reg password visitor writes correct password step actor callsystem element confirm signin visitor click sign button step actor callsystem element account visitor click account button step system execute check elementonscreen text user firstname myaccount appears user name spec multiple invalid login attempt test case rsl spec result set test showed although possible perform validation using rsl itlingo studio may repetitive time consuming task language currently support iteration operator thus requiring manual implementation invalid sign attempt case juice shop application attempt wrongpasswords test login correct password successfully authen ticated thus show juice shop application protected brute force signin attack second experiment goal second set experiment check possible apply proposed approach security testing analyzed documentation owasp juice shop identify understand involved exploit exploit referred follow ing vulnerability sql injection x vulnerable component sensitive dataexposure broken authentication broken access control many exploit require tool combined itlingo studio namely include feature browser developer mode external program inspect request penetration testing tool preliminary study explored following vulnerability sql injectionsand x based input sql injection attack abuse login administrator goal test check possible execute sql injection attackon system requires previous knowledge system architecture general knowledge available spec show rsl specication abuse login administrator test case test simple example sql injection attack goal test break login query sending special sequence character string return true allows login therst user application database happens administrator user test possible detect important system vulnerability since possible incorrectly login administrator thus login withhigher privilege accessing information supposed topreliminary experience requirementsbased security testing test resulted successful login administrator real scenario would allow attacker execute action normally beavailable regular user usecasetest ucsqlinject invalid usecase suc sqli admin user actorinitiates cracker description cracker want login administrator using sqli variable query attribute login stringattribute password string testscenario sqlinjectionadministratorsignin main isconcrete variable query withvalues query login query password step system execute openbrowser system open browser http juice shop herokuapp com step actor callsystem element dismiss visitor click dismiss button step actor callsystem element account step actor callsystem element signin visitor click signin button step actor preparedata postdata readfrom query login cracker writes query step actor preparedata postdata readfrom query password cracker writes random data step actor callsystem element confirm signin visitor click sign button step actor callsystem element account visitor click account button step system execute check elementonscreen text query login myaccount appears user name spec rsl test step sql injection embed iframe call another website screen test consists creating address would return specic set ofcharacters inputting iframe reference address submit search query test system render input data html test aim check possible input eld iframe redirecting new location belong application test indeed possible conrm vulnerability since search input form system redirected new location however test required thelocal execution owasp juice shop needed access local api preliminary study possible conclude proposed app roach tool like itlingo studio robot framework adopted totest security vulnerability nevertheless need extended combined additional functionality cybersecurity specic tool related work greatest problem using natural language documenting requirement usually lead wellknown problem ambiguity incompleteness miranda inconsistency incorrectness ambiguity particularly serious prob lem allows multiple interpretation requirement issue make automation subsequent activity software development process dicult even unfeasible one way overcome ambiguity problem structured language andor model test case generation one le treated phase software development project test ing validation phase therefore good way combat trend would increase automation testing activity aim improving nal quality software development project one test activity candidate automation generation test case common research work generate test case model system development model adopted data used dierentapproaches may vary signicantly besides also possible work try generate test case requirement specied natural language requirement specication natural language common however gen erating automatically test case challenging oftenwritten nonstandardized way work presented us natural language processing tool gen erate automatically test case functional requirement written natural language process followed based three step namely func tional requirement specication applying natural language processing technique analyze requirement extract data necessary construction test case generate test case extracted data enable generation test case requirement document must written according certain level standardization otherwise result areproduced approach based model presented test case gen erated roundstrip strategy extended case work functional requirement may treated graph state machine allows apply pathnding algorithm path used test case com plement author categorypartition method case identify subset domain executing concrete piece behavior author generate test case user execution trace user interaction web application saved work regression test case application suer update context mainte nance original trace extended applying mutation operator thatwere designed generate dierent sequence interaction ultimately exer cise behavior web application test one challenge approach deal identify user interface element act upon executing nal generated test script application test sometimes mapping concept specication level either model element textual keywordspreliminary experience requirementsbased security testing element established manually may require eort although keyword mapping still done manually itlingo studio requirelanguage processing capability since specication structured simple get keywords must mapped element test script execution conclusion moment rsl itlingo studio dependency work wellin specic scenario future approach extended improved provide simplied user experience one aspect considered improvement allow working type application based dierent technology addition changing cs mapping generic xpath mapping allow cs xpath mapping selection element thischange combined browser extension capable inferring absolute path necessary second step oering cs alternative may allow direct way mapping element user interface desiredkeywords regarding language noticed entire approach would benet rsl extension particular considered extending rsl language ability make direct reference entity may useful dening test scenario another aspect extend rsl amechanism supporting iteration inside test scenario problem noticed dening brute force test case spec regarding overall approach think would benet adding test data generation technique would ease denition test case addition itlingos usability would improve component integrated single environment requires dierent technologiesand dierent ides successfully run necessary script finally related security test tool limitation perform type test however mentioned problem may overcomeif implemented scripting engine reference ansari shagufta sadaf fatima tehreem constructing test case using natural language processing proceeding ieee international conference advance electrical electronics information communication bioinformatics aeeicb httpsdoiorgaeeicb barbosa paiva acr campos test case generation mutated task model proceeding acm sigchi symposium engineering interactive computing system eics acm miranda almeida ferreira silva rslingo information extraction app roach toward formal requirement specications ieee international work shop modeldriven requirement engineering modre httpsdoi orgmodre guti errez arag mej dom nguez mayo ruiz cutilla automatic test case generation functional requirement ndt grossniklaus wimmer ed icwe lncs springer heidelberg introduction xpath get started httpsblog scrapinghubcomanintroductiontoxpathwithexamples maciel paiva silva requirement automated accep tance test interactive apps integrated modelbased testing approach enase proceeding international conference evaluation novel approach software engineering moreira rmlm paiva acr nabuco memon patternbased gui testing bridging gap design quality assurance softw test verication reliab httpsdoiorgstvr owasp owasp juice shop demo testing instance httpsjuiceshop herokuappcom paiva acr restivo almeida test case generation based mutation user execution trace softw qual paiva acr maciel silva requirement automated accep tance test rsl language damiani spanoudakis maciaszek ed enase springer cham robotframeworkfoundation robot framework httpsrobotframeworkorg rwemalika kintis papadakis traon lorrach evolu tion keyworddriven test suite proceeding ieee international conference software testing verication validation icst http doiorgicst selenium automation practice httpautomationpracticecomindexphpid cmscontrollercms silva linguistic pattern linguistic style requirement speci cation application case rigorous rslbusinesslevel language proceeding european conference pattern language program silva rigorous specication case rsl language international conference information system development id silva paiva acr silva ver test specication language information system based data entity case state machine ham moudi pires selic ed modelsward springer cham silva paiva acr silva ver towards test specication lan guage information system focus data entity state machine test inproceedings international conference modeldriven engineering software development modelsward insticc scitepress http doiorgpreliminary experience requirementsbased security testing silva paiva acr restivo garcia automatic test case genus tion usage information international conference quality information communication technology ieee computer society httpsdoiorgquatic wschool xml xpath httpswwwwschoolscomxmlxml xpathasptesting chatbots charm sergio bravosantos esther guerra juan larab modelling software engineering research group computer science department aut onoma madrid madrid spain sergiobravosestherguerrajuandelara uames httpmisoes abstract chatbots software program conversational user interface typically embedded web messaging system like slackfacebook messenger telegram many company investing chat bot improve customer support led proliferation chatbot creation platform dialogow lex watson howeverthere currently little support testing chatbots may impact nal quality alleviate problem propose methodology automates generation coherence sturdiness precision test chat bot exploit test result improve chatbot precision methodology supported tool called charm us botium backend automated test execution moreover report experiment aimed improving dialogow chatbots built third party keywords chatbots testing botium dialogow introduction chatbots also called conversational agent software program inter act user via conversation natural language many company developing chatbots provide access service automate customer support increasingly used automate software engineering task booming require installing dedicated apps embedded social network like slack telegram twitter mobile device talking colleague growing interest chatbots many tool develop ment appeared google dialogow ibms watson assistant microsofts bot frameworkor amazon lex cloudbased lowcode development environment greatly facilitate main chatbot con struction step application processing nlp identifying httpsdialogowcom httpswwwibmcomcloudwatsonassistant httpsdevbotframeworkcom httpsawsamazoncomenlex ccirclecopyrtspringer nature ed testing chatbots charm user intent chatbot deployment social network however tool barely provide support testing chatbots even testing essential ensurethe chatbot quality oer console developer manually test chatbot reacts properly input help development proper software process requires systematic automatable testingmechanisms address need chatbot testing tool starting emerge notably botium tool successfully automates chatbot testing process moreover permit synthesizing initial set test case derived training phrase chatbot however generated test case consider basic conversation ows need extended hand aim isto automate manual process much possible paper propose methodology chatbot testing extends test case synthesizer botium cover complex case context dependent conversation generated test case two aim testing robustness nlp engine precision chatbot identify theuser intent purpose test include variation chatbot train ing phrase constructed via fuzzing mutation function moreover test result used improve chatbot precision method supportedby tool called charm evaluated experiment chatbots developed third party remainder paper sect provides background chatbots testing botium sect present approach test synthesis sectdescribes methodology tool support sect report initial evaluation sect compare related work sect present conclusion line future work background chatbots testing section overview working scheme chatbots sect tested botium sect whats chatbot chatbots program conversational user interface illustrates interaction start user writes sentence utterance label chatbot try match utterance appropriate intent among predened set label example upon receipt user utterance type pizza chatbot food delivery would recognize user intent obtaining information availabilityof kind food would reply list pizza type identify intent corresponds utterance intent denitions include sample phrase dierent way express intent used trainingthe chatbot httpswwwbotiumai bravosantos user phrase intent intentn chatbot match intent intenti chatbot response external service build response store context extract params reuse chatbot working scheme upon matching intent chatbot may need extract information utterance label previous example may need know query target type pizza piece information called parameter typed entity either predened date chatbot specic food type entity dene list possible value pizza noodle synonym platform like dialogow allow fuzzy matching overcome misspelling mistake parameter mandatory utterance include chatbot may ask followup intentmoreover chatbots sometimes need store information conversation desired type pizza reuse subsequent intent dialogow conversation state stored context label finally chatbot may need invoke external service infor mation system food delivery shop handle user intent label ultimately responds user label text medium element widgetsspecic deployment platform button telegram testing chatbots botium botium suite opensource component automated chatbot testing communicates chatbot test via connector available many chatbot platform like dialogow watson lex new onescan added botium executes test case found given folder chatbot follows behaviourdriven development approach similar cucumber test case consist convo le hold global structure test conversation utterance le contain phrase used conversation example listing show convo user provides utterance order drink utterance phrase listing chatbot bot expected match intent orderdrink overall convo would httpscucumberio testing chatbots charm executed three time per utterance result botium report number passed failed test reason failure confusion matrixwith percentage test matched expected intent latter matrix allows detecting loosely dened intent order drink utterance bot intent orderdrink listing convo leorder drink utterance iced latte get small iced cappuccino low fat milk listing utterance test case created hand botium also support auto mated generation chatbot specication specically generates one convo one utterance per intent latter containing intent training phrase generated test simple consider conversa tions context chatbot response hence developer need createadditional test tackle scenario next section propose extension test synthesis capability test synthesis charm extends set test case generated botium two way first produce convos test behaviour uncovered synthesized test setthis process explained sect second charm augments utterance le mean mutation technique introduced sect convo generation charm produce convos test following aspect chatbot response botium produce convos specify intent matched see example line listing charm extends convos include ass expected chatbot response well required parameter intent may required parameter chat bot response may depend value lack value hence charm extends base convos tackle dierent parameter value context charm generates new convos testing context previously stored information aim every intent us context variable creates possible convo combination variable lead intent example listing show convo generated charm intent con text two required parameter type drink delivery method convo emulates interaction user utterance omits delivery method line trigger followup question chatbot asking line user reply delivery line chatbot recap order detail bravosantos asks conrmation line requires retrieving ordered drink delivery method previous context thus generate convocharm need statically build conversation feed context necessary information done line order drink nodeliv utt bot intent orderdrink order drink nodeliv response delivery bot intent orderdrink order drink conrmation order drink nodeliv utt bot intent orderdrinkyes order drink conrmation listing convo testing intent contextme two medium cappuccino bot would like delivery pickup delivery bot want two medium cappuccino delivery right bot nice day listing conversation example listing show instance execution convo concrete utterance line number listing facilitate traceability utterance generation starting utterance set generated botium charm creates new utter ance variant applying mutation operator shown table distin guish following four kind mutation operator applied customizable probability character operator emulate typing error according given probabil ity specically swapchar swap character another one swapcharclose swap one character another one close keyboard delete chardeletes one character language operator translate utterance list userdened random language result translated back initial language goal creating utterance equivalent meaning dierent form word operator change word adjective noun adverb synonym antonym aim creating utterance accepted intent original utterance number operator substitute number equivalent word vice versatesting chatbots charm table mutation operator utterance mutation description example character swapchar swap character character hello hkllo swapcharclose swap character another one close keyboard hello hwllo deletechar deletes character hello hllo language translationchain translates list language hello holahi word wordtosynonym change adjective adverb noun synonym trouser wordtoantonym change adjective adverb antonym hot tea cold tea number numbertoword change number equivalent word two pant wordtonumber change word number two pant testing methodology tool support section introduce proposed methodology testing chatbots sect overview supporting tool charm sect testing process figure show chatbot testing process tool charm support three kind test coherence sturdiness precision chatbot charm mutagon mutagon train coherence test precision test ugerances failed test extended convo ugerance le mutated ugerances mutated ugerances character number mutagons language word mutagons botium sturdiness test botiumconvo ugerance le charm testing process bravosantos first charm invokes botium create base convo utterance le extends convo le explained sect depending kind test charm creates new utterance applying subset muta tion operator detailed sect stage may require intervention tester conrm new utterance preserve original utterancesemantics finally test case executed atop botium result interpreted according test kind coherence test simplest test executes extended convo le perform utterance mutation test typically per formed detect coarsegrained defect like duplicated training phrase dierent intent similar intent entity sturdiness test test ass good chatbot dealing typing mistake dierent writing style purpose charm applies character mutation emulate typing mistake number muta tions utterance written dierent way number word type test actually evaluates robustness nlp engine theunderlying chatbot platform result deemed bad platform allow netuning intent matching process enabling fuzzy match ing precision test precision test evaluates ability chatbot predict correct intent utterance dierent formulation intent training phrase charm produce new utterance using language wordmutations test mutated utterance fails utterance used training phrase improve chatbot precision testingimprovement cycle repeated chatbotprecision deemed adequate tool support charm implemented python us botium backend tool freely available httpscharmtoolgithubiocharm permit generating convo le parameterizing distribution probability mutationoperators programmatically addition provide web application implemented django react enables charm webbased user interface figure show web application accessed webpage charm main page label show left top chatbot currently activeif chatbot selected gure user select one list available chatbots upload new one latter done using page label user also delete existing chatbots currentlysupport dialogow chatbot denitions plan support format future user upload handmade convos generate convos using botium page label finally main page contains button execute presented coherence sturdiness precision test example page label show result sturdiness test displayed report generated botium testing chatbots charm webbased user interface charm main window chatbot manage ment page page uploading generating convos result sturdiness test report obtained botium evaluation section report result experiment aimed answering following two research question rqs charm uncover problem chatbots default test case gen erated botium detect iterative testing process charm improve chatbot quality experiment setup experiment considers three dialogow chatbots shown table one built two thirdparty chatbots found github baselinechatbot neither context entity chat bot response depend parameter value previous conversation state nutritionchatbot entity entry httpsgithubcomcharmtoolcharmblobmasterchatbotsmisotestzip httpsgithubcomviberapiainutritionsample bravosantos denes several intent required parameter conversation become complex roomservicechatbot intent dependant another via context us predened entity chatbotspecic entity table chatbots test chatbot intent entity context baseline nutrition roomservice experiment set maximum utterance per utterance moreover mutation operator applied utterance certain probability sturdiness test application probability swap charclose deletechar numbertoword wordtonumber swapchar precision test gave probability translation chain word mutation operator value decided calibration based quality resulting test experiment execution run type test every chatbot next extended chatbot training set utterance failing case precision test per forming two improvement cycle table summarizes result chatbots obtained perfect score coherence test ndcolumn mean chatbots evident error specication default botium test detect fault table result experiment coherence cyclesturdinessst cycle sturdinessfuzzy matchingprecision cycleprecisionst cycle precisionnd cycle new trainingprecision cycle new training pas fail pas fail pas fail pas fail pas fail pas fail pas fail baseline nutrition roomservice test sturdiness character number mutation operator produced additional test utterance chatbots failed test case column activate fuzzy matching problematic entity thcolumn httpsgithubcomdialogowdialogowjavaclientv testing chatbots charm result baseline change entity result ofnutrition improve roomservice worsens latter chatbot denes entity room name entry aband charm generated utterance dierent room name chatbot incorrectly took valid show fuzzy matching appropriate intent precision test produced number utterance sturdiness test though using language word operator moreover manually ltered generated test utterance meaningless fromthe remaining test case chatbots failed thcolumn trained chatbots utterance failed case test succeeded thcolumn next applied precision test new mutated utterance obtaining fewer error cycle thand thcolumns discussion overall answer positively charm produced test revealed fault also helped improving quality chatbots ever need perform experiment complex chatbots tostrengthen assessment observed charm synthesized convo le test context chatbot roomservice charm generate test detect chatbot defect still manual step lter meaningless utterancesin precision test instance experiment remove around automatically generated utterance get intuition synthesized test table show utter ances generated charm together mutation operator produced last column table indicates whether generated utterance manually discarded example removed last utterance table sample generated utterance chatbot utterance mutated utterance operator discarded baseline going say come say hellotranslationchain baseline meetingswhen themeetings translationchain baseline good luck good muck swapcharclose nutrition nutrition analysis food analysis wordtosynonym nutrition calorie steakcalories four ozof steak numbertoword nutrition many calorie one big machow many caloriesin big mac wordtonumber nutrition kiwi contain vitamin anot one kiwi fruitcontains vitamin translationchain roomservice room free tomorrowany room free translationchain roomservice room mondaydo roomsfor thismonday deletechar bravosantos shown chatbot nutrition translation chain produced sentence almost opposite meaning original related work many tool chatbot development support testingis scarce development platform like dialogow lex watson pro vide web chat console permit informal manual testing chatbots approach based programming language like rasa built atop python rely debugging testing support oered pro gramming language platform like dialogow oer debugging facility inspect matched intent related information additiondialogow includes check chatbot quality like detecting intent similar training phrase company developed chatbot testing tool example haptikai provides testing toolthat automates interaction chatbot via simple script integrated automation server jenkins botium also integrated testing ows using jenkins however tool require manual building extension test suite work aim automate regarding academic proposal author planning technique generate test traversing conversation similar meta morphic chatbot testing approach applies mutation operator replac ing word synonym number another one set utterance produce followup test case match intent sim ilar vein botest creates divergent input word order error incorrect verb tense synonym initial utterance set also rely mutation addition classify mutation operator obtain dierent type test test either robustness nlp engine precision intent denitions provide automation top botium methodology chatbot improvement reduce human cost chatbot testing bottester simulates user interact chatbots collect interaction metric like answer frequency response time precision intent recognition bottester target chatbots created inhouse technology charm based onbotium test chatbots major chatbot creation platform moreover testing process cover dierent chatbot aspect provides cycle chatbot improvement charm focused testing aspect chatbot non functional aspect need tested well like communication external service chatbot security example alma chatbot httpsrasacom httpshaptikaitechautomatingbottesting httpchatbottestcom testing chatbots charm help evaluating messenger telegram bot across seven category per sonality onboarding understanding navigation error management intelligenceand response time alma based question chatbot user support automated testing one decisive aspect chatbot acceptance usability heuristic bot usability proposed actionable usability pattern possibly integrated within chatbot development tool automated mean usability evaluation needed conclusion future work increasing chatbots varying activity make necessary technique ensure quality paper contributes solve need proposing set technique automated chatbot test synthesis methodology supporting three dierent type test supporting tool us botium test automation future would like extend set mutation operator example enable adversarial text generation support new type test improve functionality charm service enable integration charm continuous testing integration workows acknowledgment would like thank anonymous reviewer comment work partially funded spanish ministry sci ence project massive rtibi programme madridproject forte ptcs reference bozic tazl wotawa chatbot testing using planning aitest ieee bozic wotawa security testing chatbots medinabulo merayo hierons ed ictss lncs springer cham bozic wotawa testing chatbots using metamorphic relation gaston kosmatov gall ed ictss lncs springer cham erlenhov oliveira neto scandariato leitner current future bot software development proceeding international work shop bot software engineering botseicse ieee acm jin jin zhou szolovits bert really robust strong baseline natural language attack text classication entailment aaai erezsoler guerra lara collaborative modeling group decision making using chatbots social network ieee softw ren castro acu lara evaluation technique chatbot usability systematic mapping study int softw eng knowl eng httpshaptikaiblogusabilityheuristicschatbots bravosantos ruane faure smith bean carsonberndsen ventresque botest framework test quality conversational agent using divergent input example iui companion acm shevat designing bot creating conversational experience oreilly sebastopol sol wang study characteristic behaviour driven develop ment euromicro conference software engineering advanced application seaa ieee computer society vasconcelos candello pinhanez do santos bottester testing conversational system simulated user ihc acm zeller gopinath ohme fraser holler mutationbased fuzzing fuzzing book saarland university httpswwwfuzzingbookorg htmlmutationfuzzerhtml accessed june dataset regression web application detected endtoend test oscar sotos anchez michel maesbermejob micael gallego francisco gort azar rey juan carlos ostoles spain oscarsotomichelmaesmicaelgallegofranciscogortazar urjces abstract endtoend test present many challenge indus try however academic addressing little workon kind test running test hard time consuming therefore believe availability dataset containing regres sion bug test documentation log might help easing thepath towards researching paper present dataset test regression bug web application using spring framework java welldocumented synthetic regression bug datasetalso includes tool needed reproduce error keywords dataset testing endtoend test introduction empirical study software testing research require project sub ject study framework infrastructure reposito ries dierent researcher collected added manually documented existing bug dierent project available researchersallowing study compared using bug dataset reference project considered usually open source project ea ily available theyre usually library rather application theresearch datasets include test reveal dierent bug however test mostly unitary many investigation limitation due specic characteristic nonunitary test integration endtoend orperformance test study access complex test like integration performance endtoend test thus researching isdicult usually library unitary test nonunitary test usually available part complex project usually complete application expose frontend interact user backend handle request database information persisted example application tend endtoend test allow revealing failure introduced ccirclecopyrtspringer nature ed sotos anchez simulating interaction user application test allow study carried broader scope including real applicationssome problem faced industry based nonscalability continuous integration system term dealing everincreasing code base test memon report google every day build million test run performed project computational eorts due functional test integration endtoend require minute hour execute much computational resource memory cpu unitary test paper present dataset regression bug revealed test support software testing research regression bug dened nir asa bug cause feature worked correctly stop working certain event system upgrade system patching daylight saving time switch etc contribution paper follows repository comprised complex application multiple component project consists git repository dierent branch allow explore dierent change project undergone well buggy version documented regression bug tool build project run test using docker docker compose tool allow researcher reproduce version code simple way check application output version work correctly contain error extensive documentation regression bug accompanied resource help identify log case test pas fail visual dicomparative log video test paper structured follows previous work presented sect characteristic regression bug presented sect dataset detailed sect finally sect concludes paper related work several attempt building dataset bug regression test early siemens corporate research conducted exper imental study led building dataset containing set error introduced manually researcher project written attempt found proposes dataset real bug software research proposed subjectartifact infrastructure repository infrastructure project documentation bug real rest introduced hand project bug introduced single commit complicated treat individually dataset oriented study execution code priority oriented make static analysis code like httpswwwdockercom dataset regression web application detected endtoend test test case prioritization tcp using approach based similarity test case spacco collect bug produced student tool marmoset upload code checked server automatically includes dierent project carried individually student resultingin total project include error test also build error project bugsjar largescale dataset research automated debugging patching testing java program contains total bug patch large open source java project ibugs project provides repository real bug java project contains bug one test reveals bug includes mechanism get corrected version bug well previous version comparison also allows execution test version defectsj extensible framework provides real bug enable reproducible study framework contains real bug realworldopen source project written java bug included dataset contains information commit bug xed includes least one test reveals bug plus failed commit compare bugshave origin source code reproducible failed xed version xcommit include change unrelated bugsjs large benchmark real manually selected validated javascript bug popular serverside program like defectsj facilitates reproducibility execution test specically repro ducing environment docker image generation regression bug main dierence dataset one mentioned sect complete program test comparison unit test used datasets best knowledge datasets including test section describes methodology used generate thebugs well characteristic bug main objective make process close possible actual project introduce new regression bug methodology approach generate new branch git includes multiple com mit simulating change would occur real project introducing regression one call commit introduces regression commit regression regression introduced regression must detected test must pas satisfactory way commit previous creation branch cbranch context continuous integra tion common test executed commit sotos anchez regression detected example try merge branch master branch call commit error detectedthe error commit error verifying cerrorfails test pro ceed introduce commit cfi x regression test pass merge master example structure canbe seen cfixcbranch cerrorcregression simplied example commit history characteristic carefully designed regression bug following char acteristics bug reproducible regression bug must able repro duced execution test always generates output bug related source code bug related build system conguration test le instead root cause thebug must related change source code application change realistic commit bug introduced must contain change bug branch bug placedmust contain commits dierent change application imitate natural change occur application regression usually appears test endtoend test detect regression check functionality user would dataset regression bug subject application realization dataset selected application student subject development web application project simulate real applicationsa dataset regression web application detected endtoend test webapp application consists backend developed java spring frontend developed angular typescript application social network lm series book webapp application consists backend developed java spring frontend developed angular typescript application platform online course webapp application consists backend developed java spring frontend developed moustache using spring application web page library webbapp webapp single page application spa whereas webapp mvc application three application complex one composed several part decided creation dataset give idea kind regression bug introduced one bug introduced webapp related correct visualization part webpage bug introduced part application allowed create list stop rendering page test check list created bug type introduced related security erroneous information displayed component shown dataset thus created contains three project total regression bug shown table figure show commit history webapp containing two branch two regression bug branchexposes dierent regression bug table application number regression bug available dataset application regression webapp webapp webapp master xedfooter refactorindexcharts gure see webapp git history graph application present two regression bug sotos anchez dataset content dataset composed set application one applica tions series bug regression properly documented log video detailed information commit regression introduced well commit bug xed included interesting thatany researcher able obtain log running test dierent highlighted commits purpose docker image provided allow deployment execution test simple way conceptualmodel dataset observed conceptual model dataset artifact dataset detailed source code dataset provides git code repository source code three application used creation regression bug document bug document provided describing regression bug explaining work regression bug introduced test detects bug log correct execution dataset contains text le correct execution output including backend log frontend log log exposed frontend part application browser testlogs log regression bug execution dataset provides text le regression bug execution output including backend log frontend log test log log comparison dataset provides comparison correct execution regression bug execution comparison library dimathpatch make myers algorithm httpsgithubcomgoogledimatchpatch dataset regression web application detected endtoend test video dataset contains two video test video corre sponds correct execution application second video corresponds regression bug execution docker image dataset provides docker image project dependency needed order run application along script build image commit history order able collect information related application execution used elastest tool allowed author execute test capture log video produce log comparison dataset public available github repository httpsgithubcomeetestsdataseteetestsdataset application endtoend bug software research strongly believe test subject study practitioner continuously expressing frustration due several problem kind test environment section present case bug included dataset may useful researchingdierent problem dataset could used compare dierent proposal test case prioritization tcp subject studied extensively literature proposal usually subject simple programsapplications prioritiz ing unit test low execution time le since time metric work ignored literature despite main reason whytests prioritized execute test tend fail adjusting proposal dataset realistic test complex application would extend applicability industrial project running atest another could save minute even hour automatic repair another subject dealt literature requires collection documented bug order build dierent pro posals researcher eld often simple program example dataset provides repairable bug present challenge since error obtainedin another component dataset complex proposal would gen erated applicable application real world bug localization another research eld explored glass test using dataset could used measure eect le information search bug bug classication possible research done dataset using data source oers limitation threat validity author see mainly two threat validity dataset described paper one threat face related external validity specically representa tiveness selected subject project arise academic eld sotos anchez real application tried implement functionality application pretend imitate without property anycompany making perfect candidate investigate number regres sion bug due time take develop context change project document properly eorts madeto introduce similar real industrial project threat come limitation number project bug author aim increase number project bug manuallyand automatically dataset signicant size provided another threat contemplated apply dataset taken account creating dataset expanding thatin testing many smaller bug may hidden behind revealed inadvertent bug conclusion future work paper present dataset java application bug detected test dataset includes source code application thetests also extensive documentation bug log dierent piece composing application comparison video recording execution test work intends starting point create sophisticated dataset allows researcher work type bug usually considered part development numeroussoftware project plan expand dataset new project error starting methodology presented paper acknowledgment work supported government spain project bugbirth rtib regional government madrid project cloudbigdata sice cofunded fse feder european commission european project micado reference bertolino calabr angelis gallego garc gort azar testing get tough tough get elastest proceeding thinternational conference software engineering companion proceeedings acm catal mishra test case prioritization systematic mapping study softw qual dallmeier zimmermann extraction bug localization benchmark history proceeding twentysecond ieeeacm international conference automated software engineering ase acm new york httpdoiacmorg dataset regression web application detected endtoend test dao zhang meng execution information help informationretrieval based bug localization ieeeacm interna tional conference program comprehension icpc may httpsdoiorgicpc demarco xuan berre monperrus automatic repair buggy condition missing precondition smt proceeding international workshop constraint software testing verication analysis acm elbaum rothermel supporting controlled experimentation testing technique infrastructure potential impact empirical softw eng durieux martinez monperrus sommerard xuan automatic repair real bug experience report defectsj dataset gort azar elastest platform supporting automation endtoend testing large complex application gortaz gallego garc carella paul gheorghepop elastestan open source project testing distributed application failure injection ieee conference network function virtualization software dened network nfvsdn ieee gyimesi bugsjs benchmark javascript bug proceeding ieee international conference software testing verication validation icst hao zhang mei testcase prioritization achievement challenge front comput sci httpsdoiorgs hutchins foster goradia ostrand experiment eective ness dataowand controlowbased test adequacy criterion proceeding international conference software engineering ieee jalali ernst defectsj database existing fault enable controlled testing study java program proceeding inter national symposium software testing analysis issta acm new york http doiacmorg goues nguyen forrest weimer genprog generic method automatic software repair ieee trans softw eng memon taming googlescale continuous testing proceeding international conference software engineering software engineering practice trackicseseip ieee press piscataway httpsdoiorgicseseip myers ano dierence algorithm variation algorithmica neelofar javed mohsin automated approach software bug classi cation sixth international conference complex intelligent software intensive system july httpsdoiorgcisis nir tyszberowicz yehudai locating regression bug yorav hvc lncs springer heidelberg http doiorg sotos anchez pingclasai hata matsumoto classifying bug report bug request using topic modeling asiapacic software engineering conference apsec december apsec long achour rinard analysis patch plausibility correctness generateandvalidate patch generation system proceeding ofthe international symposium software testing analysis acm saha lyu lam yoshida prasad bug jar largescale diverse dataset realworld java bug ieeeacm international conference mining software repository msr ieee spacco strecker hovemeyer pugh software repository mining marmoset automated programming project snapshot testing system acm sigsoft software engineering note acm xuan nopol automatic repair conditional statement bug large scale objectoriented program ieee trans softw eng underreview yoo harman regression testing minimization selection prioritization survey softw testing verication reliabil zhou zhang bug xed accurate infor mation retrievalbased bug localization based bug report international conference software engineering icse june http doiorgicsetowards failure prediction scientic workows using stochastic petri net dynamic logic bruno lopesband daniel oliveira instituto computa cao universidade federal fluminense niter brazil brunodanielcmo icuffbr abstract scientic workows model composed activity parameter data dependency whose goal implement com plex computer simulation scientic workows commonly managedby workow management system wfms several existing workows demand many computing resource since process massive volume data way highperformance computing hpc environmentsallied parallelization technique applied support execution workows although hpc environment oer several advantage failure reality rather possibility due high number compute node involved execution thus wfms able calculate probability failure occurs order tospare resource paper propose usage dynamic logic tailored reason stochastic petri net verify predict failure scientic workows keywords scientic workow stochastic petri net logic introduction scientic workows henceforth name workows may dened formal specication scientic process represents step exe cuted within silico scientic experiment step ieactivities commonly associated program andor service invocation performa series transformation scientic data iedata selection data aggre gation ltering summarization etc workow formally dened directed acyclic graph wfadep node nare activity edge deprepresent data dependency among activity ina thus given aiin set pppp mrepresents possible input parameter egvalues pointer etc activity aithat dene behavior let also dene activation smallest unit work processed parallel consumes specic data chunk consider work partially sponsored cape cnpq faperj ccirclecopyrtspringer nature ed lope oliveira acacacac ka set activation workow wfe aciis associated specic activity ajthat represented actaciaj acti vations also present data dependency thus inputaciiandoutput acio dependency two activation aciandacjcan represented depaciacjrinputacjroutput acidepactaciactacj let also dene pvipvipvipv mias parameter value egvalues consumed activation aciduring execution workows commonly mod eled enacted monitored complex engine called workow managementsystems wfms support specication workow term exe cutable artifact program service wellknown wfmss pegasus swiftt among others majority wfms addition execution activity activation capture historical data workow called provenance data scientist commonly vary input parameter data evaluate hypoth esis parameter exploration commonly data computeintensive requires parallel execution using highperformance computing hpc environment produce result timely manner environment failure reality rather possibility due high number processor machine thus far trivial identify possible failure workowexecution especially workow composed several activation exe cuted parallel hpc environment provenance data play important role failure prediction task since provide historical information thatcan used identify common failure pattern calculate probability failure occur however still arduous task identify pattern used existing wfms predict failure inform scientistthat given activation iconsuming certain set parameter value pviis likely generate execution error produce undesired result paper propose usage dynamic logic tailored reason stochastic petri net spn check predict failure workows based provenance data collected wfmss well known workows benet petri net check workow execution lead desired result regardless may execute according aalst advantage using comparison traditional petri net approach predicting failure workows expressive power increased combining petri net logic model take advantage stochastic approach specially dealing case high computational cost weevaluate approach using astronomy montage workow running virtual cluster deployed amazon aws logic logic dynamic logic program stochastic petri net among advantage proved sound complete decidable deductive system recover denitions orig inally presented lope required paper language consists oftowards failure prediction scientic work flow propositional symbol set proposi tional symbol place name egabcd transition type atbtabtcand tatbce transition unique type petri net composition symbol sequence name sepsilons epsilonis empty sequence notation ssprimeto denote name occurring salso occur sprime ad program pair composition transition ring relation fsbsreceives input sequence spn return sequence corresponds result ring net denition frame tuple fangbracketleftw mangbracketrightwhere wi nonempty set state mws stochastic petri wangbracketleftddd nangbracketrightis sequence ring delay program world wwrespectively program inductively dene binary relation petri net program srwviusuch simuand wriuandwi min wandurvwhere sifsi denition model pair mangbracketleftfvangbracketrightw fis ands frame vi valuation function probability mwangbracketleftsbangbracketrightis let smw prmwangbracketleftsbangbracketrightw bsummationdisplay bfsbnegationslashepsilonw say mwangbracketleftsangbracketrightthen mean program begin ning markup shas probability running greater one probability ring happens greater zero stop hold current state system design section present couple logic spn framework existing wfms implemented within component named lope oliveira fowl failure prediction workow based logic architecture com posed main component etl component extractor fowl componentthe wfms provenance database component invoked etlextract transform load component extract information provenance database theworkow specication sent fowl component worth noticing theetlcomponent customized dierent type provenance database egrelational rdf etc current version implemented python script extract information provenance database represents xml etl component convert information invokes fowl component program read producedxml us logic reason stochastic petri net verify predict activation failure input workows failure identied associated probability fowl informs wfms order avoid stop execution activation paper extended scicumulus swfms load list activation present high probability failure since scicumulus databaseoriented wfms data stored relational database simple inform wfms activation present high failure probability using sql update command eactivation table activation represented tuple eactivation table eld informs failure probability provided fowl information scicumulus provenance schema please refer oliveira experimental evaluation modeled montage workow scicumulus using montage astronomy toolkit assembling astronomical image custom mosaic using suit able format large scale data processing sky toolkit comprises set component provides astronomy image mosaic service buildmosaics flexible image transport system fit format fit mat respect common astronomy coordinate system arbitrary image size rotation world coordinate system wcs map projection themontage workow us dierent astronomical image blend custom mosaic considering necessary geometric transformation montage workow composed nine activity added extra activity original montage workow extract fit image processed activity considered petri net since simple activation list le processed way activity list fit extract several fit le compressed obtained external astronomy repository mass input fit several attribute dened attribute relation workow algebra used scicumulus second activity projection computes projection astronomypositioning reference specic plane extraction httpswwwipaccaltechedumassreleasesallsky towards failure prediction scientic work flow attribute propagation previous attribute following activity join fit projection le associated mosaicextraction attribute create uncorrected mosaic activity creates mosaic without overlap interference color correction result creates jpg image activity montage workow dened toconsider overlap interference color correction order create corrected custom mosaic detail montage please refer jacob montage workow stochastic petri net figure present translation montage workow specication stochastic petri net translation montage workow specication aspn considers node place denes transition dependence workow using model one verify standard desired property absence deadlock liveness etc possible improve model failure handling also extend basic translation include failure prediction using provenance information past failure may model presence offailures several activation workow exponentially distributed random variable widely used literature model failure provenance data identify activation failure dene transition thatrepresent reaction iethe action performed failure occurs ege ande estimate parameter maximum likelihood nsummationtextn hence possible predict activation failure simula tion ordinary petri net model also using model angbracketleftw mvangbracketrightl correspondent spn program propositional symbol mean failure occurred processed verify possible failure may occur check transition eis enabled supposing verify probability failure occurring state may compute prm wangbracketleftssepangbracketrightew epsummationdisplay sepfssepnegationslashepsilonwsep result discussion experiment considered execution montage instance presented workow generator site execution arti cially inserted failure execution order activation failure detect iethe execution failure rate httpsconuencepegasusisiedudisplaypegasusworkowgenerator lope oliveira montage workow petri net montage work petri net failure handling articially inserted failure activation execution execution activation failed due data dependen cies activation hand activation failed due data dependency activation using possible estimate parameter random variable petri net dene ring rate verify two activation may execute parallel egfroms verify result ring function verify probability successfully processing let whole petri net compute compute mwangbracketleftmwst sangbracketrightlatticetop result computingwstssummationdisplay bfmwbnegationslashepsilonw experiment achieved value also logically prove entire workow may fail egmmw stslatticetop using model checking technique implementation tool considered future work section ongoing work actiontowards failure prediction scientic work flow workow aforementioned equation hold interesting possibility formally proving required also possible aprobabilistic result possible due high computational eorts required logical method petri net two failure handling transition idea wfms perform modications workow specication scheduling order redo necessary computation case failure achieve desired result related work relation scientic workows petri net widely discussed petri net may used design language complex work ows wide framework analysis correctness verication usage lead possibility verify conceptual property absenceof deadlock liveness etc zhao propose modeling method based cc describe behavior activity workows add constraint dependency parameter activation expression also provide aspecication language establish formal model approach evaluated case study using developed prototype relating scientic workows logic also already present lit erature logical framework powerful computational com plexity satisability theorem proving may lead impracticable scenario sat problem complexity ctl known exptimecomplete liang zhao propose verication method scientic workows based propositional logic logicbased workow verication approachpresents advantage logical formalism ability handle generic activitybased process model showed approach capa ble detecting process anomaly workow model considerprobabilities theds logic system tailored reason stochastic petri net despite high complexity satproblem stochastic component make possible stochastic reasoning logical approach may impracticable conclusion future work paper present initial eort combining logic formal method probability model reason failure largescale scientic workowswe show model scientic workows petri net logic reason activation failure using montage workow dened experiment cal culated parameter spn presented compute desired property focusing failure prediction iewe able discover prob ability activation failure based provenance data lope oliveira future work includes sophisticated experiment instance montage new workows integration tool automatize reasoning ongoing work step towards workow system able certify andor predict failure automatically reference curcin ghanem guo analysing scientic workows compu tational tree logic cluster comput deelman gannon shield taylor workows escience overview workow system feature capability fgcs deelman mehta singh vahi pegasus mapping large scale workows distributed resource taylor deelman gannon shield ed workows escience springer heidelberg freire koop santos silva provenance computational task survey cse jacob montage astronomical image mosaicking toolkit liang zhao verication unstructured workows via propositional logic icis liu pacitti valduriez mattoso survey dataintensive scientic workow management jogc lope benevides haeusler extending propositional dynamic logic petri net elec note theoret comput sci ogasawara oliveira valduriez dia porto mattoso algebraic approach datacentric scientic workows proc vldb endow oliveira ogasawara oca bai mattoso adaptive par allel execution strategy cloudbased scientic workows ccpe salimifard wright petri netbased modelling workow system overview ejor ter hofstede ahm orlowska rajapakse verication problem con ceptual workow specications data knowl eng travassos barros contribution virtuo silico experi ments future empirical study software engineering workshopon empirical software engineering future empirical study software engineering van der aalst wmp application petri net workow management circ syst comput zhao liu modeling method based cc workow icuimc zhao swift fast reliable loosely coupled parallel computation ieee congress service ieee mdd agilefrom rigorous requirement user interface specications software business application ivo gamitoband alberto rodrigues silva inescid instituto superior tcnico universidade lisboa lisbon portugal ivogamitoalbertosilvatecnicoulisboapt abstract software application developed multiple program ming language specic software library framework deployed var iou software hardware infrastructure paper introduces discus asl language short application specication language combinesconstructs two previous language itlingo rsl ifml asl specica tions strict rigorous sentence allow dene requirement user interface aspect software application consistent integrated wayalike rsl differently ifml asl controlled natural language textual concrete syntax furthermore proposed approach includes modelto model modeltocode transformation may considerably improve quality productivity requirement specication development software application keywords requirement engineering modeldriven engineering web engineering itlingo rsl ifml itlingo asl introduction currently developer expressive programming language software library framework help develop multitude software application however developer master detail tool technology com plex require long learning curve raise challenge like need create appealing crossplatform user interface need deal crosscutting concern likescalability performance security others scope importance requirement engineering crucial development management software reduce software error theearly stage development process crucial role different stage software engineering provided variety approach practice essential give broad understanding problemdomain starting anysort effort toward design development deployment given solution well prevent rework cost also also crucial success project dealt sociotechnical challenge like adoption elicitation techniquescommunication difculties conicting ambiguous requirement springer nature ed gamito silva system requirement description service feature system shall provide well quality attribute constraint requirement reect need different stakeholder like customer endusers also software engineer system requirement often broadly classied functional fr non functional requirement nfrs constraint statement feature andservices system shall provide may dene system responds user input output generate fr may dened multiple nfrs like case scenario hand nonfunctional requirement dene crosscuttingquality attribute system availability performance usability security finally constraint requirement affect product involved development process dened technology legal process constraint propose paper approach improve process mitigating problem namely concern specication validation require ments also modeldriven approach approach considers model documentation artifact also central artifact software engineering area allowing automatic creation software application starting modelsmodeldriven engineering mde involves adoption language transformation engine address diversity complexity software platform framework scope mde consider model abstraction system often used replace system study mde aim raise abstraction level software specications increase automation software development using exe cutable model transformation model transformed another lower levelmodel transformed generated programing language artifact directly executed interpretation engine context introduce discus asl specication language application specication language thatcombines construct two language detail next section itlingo rsl ifml like itlingo rsl asl specications asl model strict rigorous sentence however asl comprehensive enoughto specify user interface aspect based concept found modeling language like ifml asl gather characteristic advantage rsl ifml like wise rsl differently ifml visual modeling language asl controlled natural language textual concrete syntax reason named specication language instead modeling language also rigorous systematic specication software application show possible take advantage specications semiautomatically generate software applica tions following mde approach mean appropriate tool asl usercan create web application generated automatic transformation technique asl rigorous specications background section briey introduces itlingo rsl ifml language asl based onfrom rigorous requirement user interface specications rsl itlingo rsl rsl brevity specication language created mitigate problem arise writing requirement rsl controlled natural language thathelps writing requirement test specications systematic rigorous consistent way rsl includes rich set construct logically arranged view according concern exist different abstraction level stakeholder actor dataentities case goal case test rsl construct logically classied according two crosscutting dimension abstraction level specic concern according abstraction level construct used dene business application software even hardware system according concern dimension construct classied following aspect active structure behavior passive structure requirement test relation andsets others spec illustrates simple example rsl specication denes actor blogger participates usecase manage blog post involves management data entity blog post actoraublogger blogger user dataentity epost blog post document attribute post integer isnotnull isunique attribute state post state dataenumeration enumpoststate attribute title post title string isnotnull attribute body post body text usecase ucmanagepost manage blog post entitiesmanage actorinitiates aublogger dataentity epostactions create read update delete ifml interaction flow modeling language ifml standard modeling language eld software engineering ifml allows dene platform independent model graphical user interface gui software application ifml describes structure behavior application perceived endusers ifml brings benet development process application frontends namely support specication application frontends different perspective connection business logic data model graphical presentation layer isolates frontend specication implementationspecic detail iii separate concern role interaction design enables communication ofui design nontechnical stakeholder ifml developed webratio inspired previous webml notation well experience web modeling eld ifml intends solve problem mentioned introduction variety hardware device software platform consequently complexity designing developing software application ifml support specication following perspective structure content specication event event transition specication gamito silva parameter binding structure specication consists container content specication focus data contained event specication consists denition event may affect specication event transition denes change apply event occur finally specications parameter binding consist denition inputoutput dependency betweenview component view component action figure left show simple example ifml model asl language asl language combine main aspect rsl ifml language support specication software application systematically rigorously theseapplications also classied business application data core asset support several business activity like planning forecasting control coordi nation decision making operational activity popular class software busi ness application ecommerce erp enterprise resource planning crm customer relationship management scm supply chain management section introduces asl architecture discussion supported simple running example named mytinyblog application described follows mytinyblog simple web application allows blogger setup manage blog blogger may add category post blog blog post title body creation date author also post classied given category one following state draft published published post visible blog audience reader reader add read comment publishedpost edit delete comment figure andillustrate model mytinyblog application domain model usecases model main feature application involves managing blog post typical create read update delete crud operation postenumeragon post state published dragblog category commentuserauthor mytinyblog data model uml class diagram data entity asl adopts extends denition dataentity construct dened initially rsl dataentity construct used dene domain concept informationfrom rigorous requirement user interface specications mytinyblog manage post blogger readeradministrator manage categoriesmanage user update post update comment read post readerread commentdelete post delete commentcreate post create commentread postsread post blogger owncommentsvalidade post share post extendextend extendextendextend extend extend extendextend extendextend mytinyblog case model uml case diagram entity good people business transaction dataentity denotes indi vidual structural entity might include specication attribute foreign key data constraint dataentity classied type subtype type following parameter include data specic industry business reference simple reference data required operate business process master data asset business usually reects complex data egcustomers vendor project document worksheet data might converted transaction later invoice transaction operational transaction data business paid invoice mytinyblog example dene following data entity also suggested blog blog post category comment user see spec gamito silva dataentity eblog blog parameter attribute name blog name string constraint notnull unique attribute slogan blog slogan string constraint notnull dataentity epost blog post document attribute post integer constraint notnull unique attribute state post state dataenumeration enumpoststateattribute title post title string constraint notnull attribute body post body text attribute date post date datetime defaultvalue currentdatetime attribute category post category string constraint notnull foreignkey ecategory attribute author post author string constraint notnull foreignkey euser attribute lasteditauthor last edit author string constraint foreignkey euser dataentity ecategory category reference attribute categoryname category name string constraint unique dataentity ecomment comment document attribute postid post integer constraint notnull foreignkey epost attribute text comment string constraint notnull attribute date comment date datetime defaultvalue currentdatetime constraint notnull readonly attribute author post author string constraint notnull foreignkey euser attribute like boolean defaultvalue true dataentity euser blog user master attribute username string constraint notnull unique attribute registrationdate datetime defaultvalue currentdatetime tag name user value user dening data entity dataentityclusters dened dataentity cluster construct denotes cluster structural entity present logical arrangementsamong commonly used context case example dene three data cluster specic role involved data entity main role represents primary data entity involved thechild role represents part child data entity us role represents logical dependency entity furthermore tag inline value stacked ecpostcomment cluster used extended property inuencemodeltomodel modeltocode transformation respect denition application dataentitycluster ecblog blog parameter main eblog dataentitycluster ecusers user parameter main eusers dataentitycluster ecpost post document main epost us ecategory us euser dataentitycluster eccategory category reference main ecategory dataentitycluster ecpostcomment document master epost child ecomment us ecategory tag name inline value stacked case case dened sequence interaction actor system consideration give value actor case popular technique modelling user task complemented informal storyboards freeform scenario likewise rsl asl includes usecase constructfrom rigorous requirement user interface specications allows dene several property involved dataentitycluster actor initiate usecase participating actor action may beperformed case scope crud action mytinyblog example see spec dene contextactor blogger creates manages blog post case manage blog post initiated bythe blogger involves management data cluster blog post ecpost crud action validation action contextactor auadmin administrator user contextactor aublogger blogger user contextactor aureader reader userusecase ucmanageusers manage user entitiesmanage actorinitiates auadministratordataentity ecusersactions acreate aread adelete aupdate usecase ucmanageposts manage blog post entitiesmanage actorinitiates aubloggerdataentity ecpost action acreate aread adelete aupdate avalidate usecase ucmanagecategories manage post category entitiesmanage actorinitiates aubloggerdataentity eccategory action acreate aread adelete aupdate usecase ucreadposts read blog post entitiesbrowse actorinitiates aureaderdataentity ecpostactions aread ashare aaddcomment usecase uccreatecomment manage comment post entitiesmanage actorinitiates aureaderdataentity ecpostcommentactions acreate aread adelete user interface element seen using asl dene data entity data entity cluster case context actor construct needed specify application may also dene element namely following ifml terminology container component part rule express element asl aligned withthe ifml denition component supported asl following type list detail form dialog menu component classied different subtypes like listmultichoice listtree listtable etc suggested table gamito silva table supported type used uiviewcomponent denition type list detail form dialog menu subtype multichoice simple success main tree masterdetail error contextual table warning nested info message aslbased approach figure suggests approach proposed systematically rigorously dene soft ware application based asl language approach includes possibility automatically generating software application specic software platform aslbased approach specify par model datausecasesvalidate par model datausecasesgenerate model paral model datausecases generate code complete modelparal model datausecasesvalidated par model datausecases complete model datausecasesui soware arfacts specify complete model data usecases uivalidate complete model datausecasesuicomplete model validated aslbased proposed approach proposed approach consists main task represented task start developer specifying data case model task automatically validates partial model model valid asl may run tool support mayrun modeltomodel transformation generate asl specications task auto matically task developer still add change generated model preference repeat process illustrated gure thesake legibility hybrid set manual automatic task complete model shall validated task running modeltocode transformation task producing source code artifact target software infrastructurefrom rigorous requirement user interface specications modeltomodel transformation proposed approach follows idea initially introduced xi approach idea smart dummy modeling approach according approach thedesigner dene domain business entity actor case view based xi terminology user interface view automatically generated based modeltomodel transformation predened set uipatterns integrate smart approach asl approach allows gener ate specications referred task generated asl le includeui specications depend data entity case previously dened instance considering usecase dened spec case manage blog postsucmanagepost generates element support crud action poststhe databinding mention epost entity feature action like listing ltering searching epost manually customized search component uicosearchepost detail databinding epost searchattributes eposttitle epostid suggested spec specication list table subject customization like denition data attribute considered lter search feature even customize property data attribute search post ifml model left right modeltocode transformation transformation referred task generates asl specications tar get software application mytinyblog yet developed deployed however complete specication application consideration used producethe target application different number software framework proof concept developed modeltocode transformation django web frame work django opensource highlevel python web framework encourages rapiddevelopment clean pragmatic design gamito silva djangodb import model datetime import datetimefrom djangocontribauthmodels import user enumpoststatechoices publishedpublisheddraftdraft class eusermodelsmodel user modelsonetoonefielduser ondeletemodelscascade username modelscharfieldmaxlength registrationdate modelsdatetimefielddefaultdatetimenow blanktrue class epostmodelsmodel modelsintegerfield state modelscharfieldmaxlength choicesenumpoststatechoicestitle modelscharfieldmaxlength body modelstextfield date modelsdatetimefielddefaultdatetimenow blanktrue category modelsforeignkeyecategory ondeletemodelscascade relat ednamepostcategory author modelsforeignkeyeuser ondeletemodelscascade relat ednamepostauthor lasteditauthor modelsforeignkeyeuser ondeletemodelscascade relat ednamelasteditauthor class eblogmodelsmodel name modelscharfieldmaxlength slogan modelscharfieldmaxlengthstate modelscharfieldmaxlength choicesenumpoststatechoices class ecommentmodelsmodel postid modelsforeignkeyepost ondeletemodelscascade relat ednamepostid text modelscharfieldmaxlength date modelsdatetimefielddefaultdatetimenow blanktrue author modelsforeignkeyeuser ondeletemodelscascade relat ednamecommentauthor like modelsbooleanfield simple example modeltocode transformation spec illustrates corresponding django data model mytinyblog code generated mainly data entity dened asl see spec transformation generates modelspy take account data entity attribute data constraintsincluding foreign key constraint generated python denes domain model application data structure allows create update respective database developer cancustomize rene model still add information default django us sqlite database store data user given permission create read update delete blog post using django admin site site read metadata model provides simple modelcentric interface perform crud operation need register model adminpy created default django project started however replace new setting shall contain model registered constraint generated asl specications le spec option visible generated application suggested rigorous requirement user interface specications mytinyblog post list actor permission implemented modeltocode transformation also speed process man aging user permission see table concept mapping asl django python interpreter allows create group assign permission usershowever django admin provides builtin authentication system allows feature simple intuitive interface table asl django concept mapping asl django context actor group instance context actor name user case action permission mytinyblog application blog administrator oversees task turn blog editor able create read update delete post asl toolgenerates python script insert group user database script also assigns user group different permission quickly validate authorization feature script add one user user group setting later directlymanaged superuser using django admin site logged superuser user create edit delete object well modify groupspermissions gamito silva djangocontribauthmodels import group djangocontribauthmodels import permissionfrom djangocontribauthmodels import user aubloggergroup groupnameaubloggergroup aubloggergroupsave useruserobjectscreateuseraublogger passwordpassword userisstafftrueusersaveaubloggergroupusersetadduser permissioncreatepost permissionobjectsgetcodenameaddepost aubloggergrouppermissionsaddpermissioncreatepost related work approach tool either improved accelerated community produced software application either developed industry mendixoutsystems webratio research setting emf rail adm xi itlingo rsl mendix commercial platform designed enable different group people create software delivers business value founded early belief software development could improved paradigm shift mendix build wide range transactional eventdriven adjacent application kindsof industry mendix perspective becoming harder keep date evolving number programming tool language across spectrum reduce development effort improve feedback loop mendix follows amodeldriven approach includes tool like mendix studio mendix studio pro tool provide visual draganddrop feature data logic navigation using nocode lowcode development outsystems another commercial platform lowcode rapid application devel opment advanced capability enterprise mobile web apps starting outsystems recognized vast majority software project failing due multiple reason therefore outsystems software integrated development environment cover entire development lifecycle namely development qualityassurance deployment monitoring management mendix outsystems platform surpass asl transformation providing user friendly interface allows development application feature customization aspect asl provides good start many situation due exibility extensibility using lower codelevel challenging people usu ally work programming language tool still may simplify thecommunication software application vision generated application still control necessary code scale web application emf rail proposes approach combine mde automation frame work web development like spring roo us atl rulebased declarative model transformation language transformation specied mapping objectfrom rigorous requirement user interface specications pattern source model pattern target model like asl acceler ate generation crud operation data model difference project emf rail transformation impact visible asl pro mote better understanding requirement start nal specications interface usecases specications adm ariadne development method another approach primary goal accelerating development web system like asl offer construct specify system making labyrinth tool allows specication ofall component web system includes pattern language pattern organized according nature problem solve make development solution easier lessexperienced web developer webml web modeling language domainspecic language designing complex distributed multiactor adaptive application deployed web serviceoriented architecture using web service webml provides graphical yet formal specications embodied complete design process assisted visual design tool extended cover broader spectrum frontend interfacesthus resulting interaction flow modeling language ifml adopted standard omg formerly known webml ifml longer web development also used mobile apps xi research project developed evaluated mechanism tool produce business application efciently productively done xi intends reduce cost improve fulllment requirement software production xi approach defends signicant effort project shall implementation phase activity shall performed almost automatically based highlevel platformindependent specications deningthe right specications shall main effort developer xi also defends modeldriven approach designing interactive system platformindependent level considering modeling language xi language denedas uml prole approach discussed paper gather benet tool approach mentioned example like ifml sup port platformindependent description graphical user interface like rsl contrary ifml concrete syntax asl spec textual consequently natural rigorously dened validated asl adapts xi smart approach model generated highlevel model unlike xi asl allow specify automatize process creating different type user assigning distinct role respective permission due platformindependent andhumanfriendly textbased syntax asl specications open easier manipulated interoperated comparing option referred namely commercial solution one relevant work explore future verify aslcould suitable support interoperability model developed lowcode nocode platform conclusion paper discus new approach combine discipline requirement engineering web engineering approach intends address following issue gamito silva better specify requirement business application user interface integrated way increase productivity developer automatizing theproduction artifact like technical documentation software code discus existing solution namely mostly related rsl ifml language asl language design based asl allows rigorouslyspecify requirement namely case relationship actor data entity also specify user interface element application show language combined tool support modeltomodel modeltocode transformation thus considerably improve quality productivity requirement denition development application support discussion simple effective example considering popular class webapplications blog application top popular pythonbased framework django framework future research shall consider improving customization either specication generation business application shall specify develop multiple case study integration popular software nodejs javascript framework net lowcode framework mendix outsystems genio also considered bring exibility solution research shall discus consider deal crosscutting quality attribute asavailability performance usability security acknowledgment work supported fund fct uidcec saict reference ousterhout philosophy software design yaknyam press palo alto martin clean architecture craftsman guide software structure design edn prentice hall upper saddle river alfedaghi developing web application int softw eng appl ferreira silva rslingo information extraction approach toward formal require ments specications ieee international workshop modeldriven requirementsengineering ieee computer society sommerville software engineering edn pearson boston shah patel review requirement engineering issue challenge various software development method int comput appl schmidt modeldriven engineering ieee comput silva modeldriven engineering survey supported unied conceptual model comput lang syst struct silva rigorous specication case rsl language proceeding information system development isd conference ai omg interaction flow modeling language specication version httpswwwomgorg specifml accessed apr brambilla fraternali interaction modeling language modeldriven engineer ing web mobile apps ifml silva saraiva silva martin xi uml prole extreme modeling interactive system proceeding mompes ieee computer society rigorous requirement user interface specications pinkham django unleashed edn pearson indiana rubio beginning django web application development deployment python edn apress california mendix evaluation guide httpswwwmendixcomevaluationguide accessed apr outsystems evaluation guide httpswwwoutsystemscomevaluationguide accessed apr stair reynolds fundamental information system edn cengage learning lpezlanda noguez guerra lara emf rail icsoft pro ceedings international conference software paradigm trend genio plataforma httpsgenioquidgestcomplataforma accessed jun silva linguistic pattern linguistic style requirement specication application case rigorous rslbusinesslevel language proceeding europlop acm montero daz aedo requirement implementation modeldriven app roach web development ejis httpsdoiorgpalgraveejis stefano fraternali bongio web modeling language webml modeling lan guage designing web site comput netw silva paiva ana silva valter test specication language information system based data entity case state machine hammoudi spire selic ed modelsw ard springer cham paiva acr maciel silva requirement automated acceptance test rsl language damiani spanoudakis maciaszek ed enase springer cham ribeiro silva xismobile dsl mobile application proceeding annual acm symposium applied computing ribeiro silva evaluation xismobile domain specic language mobile application development softw eng appl seixas ribeiro silva modeldriven approach developing responsive web apps proceeding enase scitepress django httpswwwdjangoprojectcom accessed jun human factor agile software tester lucas paruch viktoria strayb raluca florea department informatics university oslo oslo norway lucaspstrayralucamf ifiuiono abstract although extensive research technolog ical aspect software tester little investigation conductedwithin human factor determinant software testing role cur rent paper explores human factor software tester working agile project qualitative study focusing perceptiono na team member tester developer designer additionally observed meeting observed team work result showthat following six trait pivotal software testing role seen working agile software professional able see whole picture good communication skill detailedoriented structuredcreative adaptable based result propose organi zations may think recruiting agile software tester trait may used reference considering software testing career keywords human factor character trait soft skill human quality software testing agile software development introduction currently agile software development widely adopted practice company seeking improve industrial competitiveness advantageous may working agile environment brings challenge parallel information collaborative work opportunistic technology lackof alignment among team human factor play vital role agile project development facet software product requirement elicitationstakeholder meeting development testing release personality trait developer investigated going far back tester recent study example one study found abundance soft skill shaping software testing role greater diversity particular agile tester kanij utilized big five taxonomy psychology eld explore personality trait software tester however study human factor software testing tester mindset needed ccirclecopyrtspringer nature ed human factor agile software tester explore human factor agile software tester conducted quali tative study software service company aimed answering followingresearch question human factor software professional working agile project perceive signicant software testing role background agile software tester one seven istqb testing principle state quality assurance activ ities started early possible lifecycle avoid additionalcost time agile noticeable divergence traditional develop ment method entail involving tester beginning development increment early involvement allows tester identify dierent test environment scenario early thus increasing overall productivity test validity agile expected developer perform unittests additionally developer may also testing task reviewing userstories creating test condition therefore dedicated tester may able implement myriad test technique exploratory testing usability testing improving test coverage developer work environment knowledge transfer also happens frequently naturally amongst developer tester testing development happen con currently iteration new team member may benet theactive feedback agile tester also focus even eliminating misunder standing confusion development tight coupling tester rest team enables fast learning understanding software designer programmer role intrinsically con structive sense create product tester job often ofa destructive nature involving many repeated attempt break software constructed kanji argue eectiveness tester role somehow related personality ndings suggest tester havea signicantly higher level conscientiousness software engineering role conscientiousness closely related disciplined hardworking dedicated although highly conscientious individual important anyprofession kanji suggest quality might particularly cru cial tester following destructive nature tester job automation testing seen safetynet tester reduce confrontation theycan refer automatic test failing florea found automation testing rising demand denite shift tester towards technical profession itkonen investigated knowledge type tester utilized exploratory software testing came three knowledge type domain knowledge system knowledge act knowing system mechanism logic interaction generic software engineering knowledge knowledge usability system ability interpret error message paruch livonen investigated characteristic high performing tester characterized either high defect detection rate possessing characteristic seen important manager tester found four theme important experience ability reect motivation personality important personal characteristic high performing tester werethoroughness carefulness patience conscientiousness two study focused purely soft skill required software tester matturro investigated soft skill software company uruguay required author analyzed advertisement investigate frequency soft skill within software testing majority advertise ments asked skill like teamwork initiative analytical problemsolvingskills similarly florea stray analyzed advertisement speci cally software tester across country popular trait asked communication skill analytical problemsolving skill teamplayer independentworking skill article suggest denite need teamwork communication skill analytical problemsolving skillsand proactiveness trait also degree conrmed study research method study software professional perception human factor char acteristic agile tester conducted support collaborationof software service company nance banking sector employing specialist across europe company motivation participat ing research understand better support employee inthe software testing role better understand trait focus hiring new software tester besides company aimed giving soft ware testing professional autonomy think dierently creative furtherimprove testing skill conducted semistructured interview software professional six tester developer two interaction designer see table inter viewees located oslo norway addition interview observed many participant working attended eight daily standup meeting two test status meeting one domain expert workshop also accessto participant slack well access common channel tester observation note slack log mostly used arm ndings interview respondent consented recording dialogue pub lication result necessary furthered understandingof participant response followup question conrmed captured response entirely unambiguously steered interview direction clear understanding objective pursued asking slack electronic communication tool trademark slack technologiesthe human factor agile software tester table overview interview interviewee software eld work experience interview length software testing month min software testing min software testing min software testing min software testing min software testing year min software development min software development min software development year min software development min software development year min interaction design year min interaction design min targeted question giving appropriate feedback respondent encour aging talk reecting remark probing remark atthe time interview great extent protected interrup tions outside competing distraction asking inhibiting question atmosphere interview relaxed invited communica tion furthermore took note relevant information captured impression interview carried interview rangedapproximately min held solely employee service provider company employed semistructured individual interview allowed gain insight participant view softwaretesting human factor based work experience question asked follows tell role typical task assignment attribute think software tester need dedicated tester degree feel connectedassociated team much time spend interaction others complete task team member team coordinate assume found bug testing would present team someone say bug case bug slipped testing onto production happen challenge working others team much knowledge team member eld could imagine switch something current role paruch case reprioritize task something unplanned workday keep going work analyzed data using thematic analysis coded collected data grouped code theme see purpose used nvivo enabled organize code explore relationshipsbetween easily analysis total dierent code emerged grouped dierent trait analysis suggested six trait vital agile software tester seen tester team member also found one trait seemed important emerge top six trait eagernesstolearn traitthat seemed inherent interviewed tester mentioned role trait included stated important three role tester developer designer developer supposed develop something tester actually one see work almost checklist usage checklistdeveloper designer tester testerstructuredi occationally test software see test tester much thorough test matrix go case case youre structured may able write exactly took bug mistakei distressed forgetful time write lot note todo list checklistsdata sourcecodes trait meticulous processobservation note conversation logsthe tester writes list test case check test coverage different condition tend focus wrong also possibly reproduce error specic scenario attach test data used example thematic coding collected data interviewed professional used agile method mainly kanban devel opment combined scrum ceremony used product backlog itemsthe human factor agile software tester pbi extensively usually form user story intervie wee timeboxed sprint working rather continuous stream oftasks appeared backlog involved prioritization task maintenance pbi professional within testing also participated test automation process thus enhancing agile developmentby automationastheygo table number interviewee stating importance trait trait tester developer designer able see whole picture detailoriented good communication skill structured creative adaptable professional daily standup meeting held every day purpose meeting update team member eachothers progression bring problem regard specic eld average meeting lasted ten minute rarely reached min mark meeting conducted online using microsoft team andvideochat include team member overseas additional daily standup meeting interviewee test ing role attended teststatus meeting held biweekly basis purpose meeting establish coordination communication project tester reported current test status project discussed issue currently facing additionally tester could askother tester help exemplied common testenvironment used project due partly dependent project need make sure data correct manipulated others testing result analysis data material revealed six essential characteristic trait ofthe agile software tester presented table displaying human factor seen software professional pivotal trait agile software tester present trait able see whole picture participant stated able understand project whole essential tester ability overview project objec tives customer requirement quality demand domainknowledge paruch technical knowledge voiced vital tester trait interviewed similarly interviewee holding tester role stated perspective often helped unusual bug see thing dierent perspective others one tester mentioned need understand critical part sys temits nding bug fewest bug run testcases tester completed one testcase found system work supposed often eective tester ran hundred testcasesand found anything able see total picture one interaction designer recalled tester worked impressive term possessing domain technical skill good balance two one team good overview thing connected helicopterperspective insurance work scope dierent insurance type thing connected backend well developer broughtup software tester needed ability understand big picture one participant stated often developer receive task involved entire process think exciting involved functional technical aspect supertechnical detailoriented found agile software tester needed attentive multitude detail interviewee mentioned attribute softwaretester focal one tester stated manage considerable amount small detail thing he worked nontester interview participant experienced tester attentive used trait improvethe product found two common kind attentiveness user experience related technicalrelated interaction designer interviewed mentioned tester worked helped spot userexperience fault respectively overlooked one designer mentioned remember went old appli cation began carefully read text thought pretty attentive death insurance fact someone needed report person dy tested whole process made aware text wasntpleasant highly sensitive situation yeah aware detail similarly designer developer stated software tester needed attention detail one developer stated love working exactly pick thing dont see thing havent even thought inform thatthis wrong andthis wouldnt work method module logical individual another developer mentioned complex tangible product nice tester next give safety form ofokay conrms everything correct likely imdoing correct human factor agile software tester good communication skill addition core task role emerged interview agile software tester often needed provide support fellowteam member clarifying requirement providing additional bugrelated information however tester frequently communicated various stake holder project order conduct rigorous testing hence internal andexternal communication respectively tester needed friendly provide constructive feedback regarding issue discovered though testing mitigate potential negative teamdynamics example one software tester mentioned project year back sat next developer ive found bug stood walked towards friendly smile another mentioned thatwhenever bug developer mind ask suppose like try point ngers thats never pleasant anyone appreciated part interviewee mentioned tester good asking additional information external stakeholder tester recalled specication vague many dierent way interpret often onewho ask one wrote specication exactly mean one specie concrete requir ements developer aspect also brought second tester could developer interpreted correctly interpreted correctly dont know thats often customer deskand ask developer asserted important tester ask commodity try thing work active meeting productowners ask question functionality whatthey need order set testscenarios furthermore team member appreciated communicate slack observed often discussed test automation distributed team member testerswould also often conduct adhoc video meeting slack give developer thorough explanation discovered bug structured interview software tester disclosed structured work majority tester disclosed usually notedeverything checklist note calendar one tester voiced usual courseofaction come planning systematic every friday look calendar see whats happening next week also amonth look whole calendar next month plan leave room unexpected meeting another tester stated order succeed tester one structured even one performs exploratory testing playing around youre structured might able describe step performed found bug youre exploring without systematic dont think retrace paruch step opinion tester must structured one developer recalled result systematic work tester worked really hard systematically map clarify requirement specications even found thing overlooked result also adjusted improved work process creative interviewee stated importance creative software testing allowed abnormal bug one participant stated ive man aged weird bug creative midway force shutdown performing unusual processsequences one test like user always creative interviewed designer mentioned tester worked creative solving issue suggesting several alterna tive way resolve obstacle furthermore stated creative mind made tester valuable one nd strange thing loophole creative much appreciated tester nontesters havetunneled way testing many guesttesters test preciselyhow supposed used meaning wed test system behavior thing right tester interviewee voiced creativity necessary profes sion however one participant software testing role added even though creativity could help weird bug could team could choose daresay lot creativity point toldthe bug youve reported specic aects one specic customer leap year going one tester also mentioned always get creative mainly due time pressure participant stated bug found posttesting could found stage would time think toyed isnt always enough time focus getting important piece work deliver business analyst test developer mentioned creativity important tester posse mainly dierence role developer receive business requirement job fulll requirement canhave creative process construct architecture choose framework etc end youre fullling requirement tester supposed test system thats going work could many anomaly acreative tester likely much important team creative developer adaptable three interviewee testing role mentioned one adapt following current situation quickly one commented sometimes early looked task feel ready start someone wouldthe human factor agile software tester pat shoulder say something else another said work prioritization item high priority incomplete fromthe developer side ill start work something medium priority however often developer nish get complete testing item drop start testing one high priority one tester junior position stated since newly qualied constant contextswitching proved quite challenging keep rest team time observation mentioned workingextensively together experienced tester greatly improved ability contextswitch discussion previous section described human factor emerged data analysis describing software tester agile team notable resultis related overall perception role previous study found testing popular job due seen assecondclass unattractive career development currently perception drasticallychanged participant software testing role voiced full recogni tion merit role testing nontesting interviewee stated tester seen line role team structure incidentally improved motivation bettering work exciting considering previous research shah reported testing stepping stone developer career another notable result usage digital communication tool agile team noted slack signicant positive impact tester andincreased team transparency supporting recent study stating slack make communication transparent discus research question human factor software professional working agile project perceive signicant software testing role ndings show view human factor shaping role agile software tester crystallized six distinct dimension theability see whole picture detailedoriented communication skill structured creative adaptable result show tester need addition technical ability even complex overview role agile team nding support florea regard number diversity skill necessary software tester result also show change per ception role last decade capretz shah found people choosing software testing role technically procient ndings support hernandez pointed software tester worked wide variety topic requires complete view software well communication skill necessary trait posse factor eective collaboration department paruch participant interview voiced attention detail imper ative tester posse since useful userexperience technical solution enhancing domainknowledge technicalknowledge line survey research conducted kanij respondent agreed trait something good software tester howevercapretz found set demotivated factor requirement detailoriented skill demotivated cuban software tester found good communication skill seen crucial agile software tester also found earlier study ahmed described software tester asthe software development team worst enemy therefore need good relational skill recent study showed thatpeople careful communication conict thought occur software testing role implies bringing unwanted news team ndings conrm need good communication skill way provoke conicts tester stated writing checklist creating note allowed free brain focus thing kanji utilized big five taxonomy psychology highlight tester personality ings show tester generally higher level conscientiousness thanother role conscientiousness orderliness selfdiscipline hardworking dedication result show tester tend organized systematic structured subsumed conscientiousness even though creativity generally useful software development degree importance varies greatly amongst role regarding software tester study show creativity perceived necessary two course actionto conduct software testing making dierent user persona dierent scenario come creative way testing technicality system study conrms result obtained itkonen found exploratory testing nurtured diverse creative opportunity testing ekwoge mentioned adaptability needed new tool usage technique testing result suggest although adaptability indeed benet technical prociency trait holistic sense adaptability also concern domainknowledge ability quicklyswitch dierent context dierent mindset implication practice given eort software company invest recruiting retaining bestsuited individual role implication practice study concern employer software development industry thispapers ndings could benet industry providing set relevant trait software tester posse useful checklist charge hiring new testing personnel additionally ndings could benet thoseprofessionals whether technical background considering software tester career setting frame expectation role soft factor garousi recently reported one topranked knowledge gap softwarethe human factor agile software tester engineer software testing argue vital teach testing second implication ndings relates istqbs syllabus agile tester resulted selfdescription software tester backed description tester role team listed skill agile software tester updated example ableto see whole picture creative limitation study conducted one specic company one geographical location result could inuenced cultural organizational value specic company particular interview location mitigated inuence interviewing three role within software development team asking describe relevant human factor composing software testerrole avoid ambiguity allow time reection question open input insight kept contact respondent nalization study routinely checked data consistency thetranscripts code theme used conclusion future work qualitative study software professional order capture theirview relevant trait composing software testing role brought lightthat software tester agile setting need helicopter perspective project encompassing technical domainspecic ability order conduct testing eectively tester need think creatively two coursesto test software consumer perspective testing user persona domain condition coverage unique scenario nevertheless need also test system technical perspective system memory leak sql injection software tester need also detailoriented term user experience rening userjourney technical aspect wheretesters suggest alternative solution developer tester need structured role order test retrace step systematically nally adaptable change adept contextswitchers ndings study used industry particular charge hiring software tester check candidate role posse trait moreover considering career software testingshould result scrutinize ass tness software testing role agile environment finding show agile software tester selfimage human factor importance role following perception team member additionally human factor listed istqb agile syllabus found ability see whole picture creative future workshould conducted investigate manifestation constituent part newlyrevealed trait paruch acknowledgement want thank participant generous thoughtful collaboration study allowing observe conduct interview special thanks company supporting research making thecollaboration setup possible reference acu omez juristo personality team process task characteristic relate job satisfaction software quality inf softw technol ahmed capretz campbell evaluating demand soft skill software development prof mitp bai mork stray costbenet analysis accessibility testing agile software development result multiple case study int adv softw black van veenendaal graham foundation software testing istqb certication cengage learning emea edn braun clarke hayeld terry thematic analysis liamput tong handbook research method health social science springer singapore calefato giove andrea losavio case study tool support collaboration agile development ieeeacm international conference onglobal software engineering icgse october seoul republic korea acm new york capretz waychal jia varona lizama study software testing profession ieeeacm international conference software engineering companion proceeding icsecompanion http doiorgicsecompanion deak characterizes good software tester survey four wegian company merayo oca ed ictss lncsvol springer heidelberg demarco lister peopleware productive project team dorset house publishing inc new york city dingsyr falessi power agile development scale next frontier ieee softw ekwoge font diasneto tester experience concept issue denition ieee annual computer software applicationsconference httpsdoiorgcompsac florea stray software tester want hire analysis demand soft skill garbajosa wang aguiar ed lnbip springer cham florea stray global view hard skill testing tool software testing proceeding international conference global software engineering icgse ieee press icgse florea stray skill employer look software tester softw qual httpsdoiorgsthe human factor agile software tester florea stray qualitative study background skill acquisition learning preference software tester proceeding evaluation assessment software engineering ease association computing machinery new york garousi giray tuzun catal felderer closing gap software engineering education industrial need ieee softw garousi antyla systematic literature review literature review software testing inf softw technol gren link agile practice interpersonal conict perceived productivity proceeding international conference evaluation assessment software engineering hern andez tpry marsden understanding software tester automo tive industry mixedmethod case study international conference software engineering application icsoftea itkonen antyla lassenius role tester knowledge exploratory software testing httpsdoiorgtse kanij merkel grundy preliminary survey factor aecting software tester australian software engineering conference httpsdoiorgaswec kanij merkel grundy empirical investigation personality trait software tester ieeeacm international workshop cooperative human aspect software engineering chase begel distinguishes great software engineer empir ical softw eng livonen mantyla itkonen characteristic high performing tester case study proceeding international symposium empirical software engineering measurement esem matturro soft skill software engineering study demand software company uruguay international workshop cooperative human aspect software engineering chase chase santos amd karlsson cavalcante correia silva testing agile product development environment industry experience report latin american test workshop latw httpsdoi orglatw sfetsos stamelos angelis deligiannis experimental investigation personality type impact pair eectiveness pair programming empirical softw eng shah harrold studying human social aspect testing service based software company case study proceeding icse workshop cooperative human aspect software engineering stray moe understanding coordination global software engineering mixedmethods study meeting slack syst softw httpsdoiorgjjss press yang liang avgeriou systematic mapping study combination software architecture agile development syst softw experience application three nlp tool analysis natural language requirement monica arrabito alessandro fantechib stefania gnesi laura semini dipartimento informatica universit pisa pisa italy monicaarrabitohotmailit lauraseminiunipiit dipartimento ingegneria dellinformazione universit firenze florence italy alessandrofantechiunifiit istituto scienza tecnologie dellinformazione afaedo consiglio nazionale delle ricerche isticnr pisa italy stefaniagnesiisticnrit abstract report experience made three natural lan guage processing analysis tool aimed compare performance detecting ambiguity underspecication requirement documentsand compare respect quality like learnability usability eciency two industrial tool requirement scout qvscribe academic one quars compared keywords natural language processing natural language requirement ambiguity introduction natural language common way express software requirement even though intrinsically ambiguous ambiguity seen possible source problem later interpretation requirement ambiguity oneof dicult defect avoid since natural language ambiguous nature devoid formal semantics lack intrinsic formalism requirement document must therefore compensated detailed analysisduring initial stage product life cycle order correctly extrapolate needed information reason part work carried analysis phase intended disambiguation requirement natural language processing nlp technique used analyse requirement document single among issue ambiguity specication defect analyzing structure sentence using grammatical andlexical analysis dictionary parser natural language work partially funded miur project prin ftxrs matter method tool trustworthy smart system ccirclecopyrtspringer nature ed experience application three nlp tool recently several tool developed analyzing requirement systematic automatic way mean nlp technique focus onambiguity detection paper report experience made thee nlp analysis tool aimed compare performance detecting ambiguity underspecication compare respect quality like learnabil ity usability eciency two industrial tool requirement scout qvscribe academic one quars analysed scope experience choice three mentioned tool traced back similarity perform automatic detection possible language defect may determine interpretation problem aect following development stage highlight word construct reveal defective detected defect may however false positive subsequent manual analysis needed scope experience one hand allows focus similar tool better highlight dierences hand threatto validity result broaden investigation requirement analysis tool see instance sect considered future work notwithstanding extension believe study provide useful insight current state art automatic detection ambiguity natural language requirement following introduce nlp tool comparison quars qvscribe requirement scout quars quars quality analyzer requirement specications tool ana lyzing requirement systematic automatic way mean nlp technique focus ambiguity detection quars performs automatic linguistic analysis requirement docu ment plain text format based given quality model output indicates defective requirement highlight word reveal defect present indicator used quars detect defect lexical syntactic ambiguity sentence arrabito defect indicator vagueness dictionary clear easy strong good bad adequate subjectivity dictionary similar mind take account optionality dictionary andor possibly eventually case possible ifappropriate weakness dictionary could may implicity demonstrative adjective pronoun underspecication wording missing qualication interface information without aqualier user pricerespectively multiplicity multiple syntactic construct multiple verb multiple subject defect identication process divided two independent part part lexical analysis detects candidate defective term using set dictio naries lexical analysis permit capture optionality subjectivity vagueness optionality weakness defect second part syntactical analysis capture implicity multiplicity underspecication defect feature quars metric derivation evaluating quality requirement capability modify existing dictionary add new dictionary new indicator iii view derivation identify collect together requirement belonging given functional non functionalcharacteristics dening specic requirement qvscribe qvscribe industrial tool requirement analysis quality consis tency developed qra httpsqracorpcom qvscribe analyzes quality requirement highlighting ambiguity inconsistency possible similar ities providing score single requirement whole document itgenerates detailed report used increase quality require ments reducing review rewriting work analysis performed qvscribe based part rule dened incose guide writing requirement defect detected tool related indicator classied according following tablean experience application three nlp tool defect indicator imperative absence negation multiple occurrence imperative optional escape clause optional term like possibly may vague word vague noun verb various completed crossreferencing pronoun everybody anyone nonspecic temporal word early year ago continuance otherwise particular following superuous innitives since hide subject shall permit passive voice since hide subject based found shipped immeasurable quantication abundant far always incomplete sentence missing critical detail must something must done requirement scout requirement scout developed qualicen gmbh analyze require ments specications httpswwwqualicendeen distributed pluging editor including microsoft word make suitable immediate feedback writing requirement requirement scout operates similarly quars qvscribe using dictionary syntactic rule specify critical word might denote quality smell list defect indicator defect indicator motivation longcomplicated sentence dicult read prone ambiguity passive voice done found sent since hide subject multiple negation requirement must expressed positive term universal quantiers always every nothing imprecise phrase vagueness possibly various current small general possible vague pronoun nobody comparative superlative faster fastest bigger make requirement understandable isolation exactly one shall one occurrence shall occurrence may weak verb may wrong abstraction level exclude implementation detail dangerous slash interpreted andand detail requirement contain detail user interface cloning since duplicate burden successive maintenance besides identifying defect also permit keep track dierent ver sion requirement creating complete history detected defect soon requirement updated tool reanalyzes modied partsand show whether update eliminated existing defect introduced new one arrabito tool recent industrial tool assisting analyst denition require ments reqsuite osseno software gmbh dierently tool considered paper highlight defective word construct reqsuite support rigorous requirement denition correcting writer according pattern hence scope study candidate tool experiment rat requirement authoring tool reuse httpswwwreusecompanycom ibm rqa http wwwibmcomproductsrequirementsqualityassistant able detect ambiguity commercial nature immediately avail able study alternative experimentation otheshelf tool adoption customization general exible nlp tool allow tune kind detected ambiguity defect gate example tool collect several nlp module provides mean dene adhoc rule jape rule create advanced customized nlp solution example related requirement analysis gate used tune proposed requirement analysis according requirement writing styleadopted involved company achieving signicantly better quality analysis application tool eshop case study report observation applying quars qvscribe requirement scout running example simple eshop requirement table tool analysed general quality ability support ambiguity detection requirement general quality evaluation address documentation learnability dusability quars simple learn without referring manual qvscribe come equippedwith good documentation video tutorial easy acquainted requirement scout tool diculties encountered lack documentation non intuitive interface complex setupof user prole give rough measure learnability report number hour training order prociently quars qvscribe requirement scoutan experience application three nlp tool table requirement eshop case study system shall enable user enter search text screen system shall display matching product based search system possibly noties popup user matching product found search system shall allow user create prole set credential system shall authenticate user credential enter prole system shall display list active andor list completedorders customer prole system shall maintain customer email information required part customer prole system shall send order conrmation user email system shall allow user add remove product shopping cart system shall display various shipping method order shall shipped client address collect instore service available associated store system shall enable user select shipping method system may display current tracking information order system shall display available payment method system shall allow user select payment method order delivery system may enable user enter review rating order publish feedback purchase system need collect review rating collect instore service excludes tracking information service eciency found issue requirement scout analyze document requirement tool take min min respectively qvscribe quars tool analysis time considered document second problem probably due larger amount check performed requirement scout considered issue related particular usage tool ambiguitydetection rather generic low performance tool extensibility represented ability add new quality indicator quars feature also permit user select indicatorsshe want analysis qvscribe modication indi cators already present tool permitted adding removing term identied analysis requirement scout implement indicatorsselection indicator xed report generation possible quars qvscribe quars report contains quality indicator list requirement present arrabito ambiguity together term deemed incorrect report generated qvscribe assigns requirement score ranging depending onthe gravity defect result ltered focus specic defect quality interoperability andversion control particularly impor tant positive aspect qvscribe possibility integrating tool aword feature analysis document started selecting qvscribe word ribbon selecting requirement analyzed version control system oered requirement scout tool record history containing various version document comparison two version document return list defect added removed however tool permit editing document analysisthe user edit document externally load new version evaluation ability detect defect requirement focus analysing three tool point view ability indicator detect ambiguity underspecications report table raw outcome analysis eshop example three tool requirement requirement indicator column show word considered tool indicate certain defect reported last column detected defect result manually analysed todistinguish real defect false positive detailed result analysis discussed following indicator indicator table cumulatively show number false positive andambiguities result manual analysis tool outcome table forvagueness quars detects defect qvscribe requirement scout detect four defect vagueness related requirement detected quars requirement scout indeed classied real defect various happens term possibly detected requirement scout defect false positive note term possibly quars qvscribe indicator optionality hence detected according another indicator respect optionality refer meaning quars include term possibly classied optional escape clause qvscribe according indicator four ambiguity detected quars rrra one qvscribe optionality indicator requirement scout good number defect detected quars due fact tool looking occurrence orand andor forweakness tool perform eshop weakness referred optional escape clause qvscribe occurrence may requirement scout applying tool document alsoobserved quars qvscribe detect weak verb canwhich detected requirement scout two defecs related multiplicity quars indeed disjunction already detected optionality indicatorsan experience application three nlp tool table result application quars qvscribe requirement scout eshop case study requirement rra rcontain defect according tool requirement tool indicator defect system shall enable user enter search text screenquars multiplicity qvscribe enable vague word req scout screen detail system shall display matching product based onthe searchquars qvscribe universal quantiers based passive voice req scout universal quantiers system possibly noties popup user matching product found searchquars possibly optionality multiplicity possibly optional escape clause immeasurable quantication qvscribe universal quantiers found passive voice imperative possibly vagueness req scout found passive voice exactly one shall system shall allow user create prole set credentialsquars multiplicity qvscribe allow superuous innitives crossreferencingpronouns req scout vague pronoun system shall display list active andor list completed order customer prolequars andor optionality qvscribe req scout completed vagueness andor dangerous slash system shall maintain customer email information required part customer prolequars multiplicity qvscribe maintain superuous innitives immeasurablequantication req scout system shall allow user add remove product shopping cartquars multiplicity qvscribe allow superuous innitives req scout system shall display various shipping methodsquars various vagueness qvscribe req scout various vagueness order shall shipped client address collect instore service available associated storequars multiplicity optionality qvscribe shipped passive voice req scout shipped passive voice system shall enable user select shipping methodquars multiplicity qvscribe enable vague word req scout continued arrabito table continued requirement tool indicator defect system may display current tracking information orderquars may weakness may optional escape clause qvscribe vague word imperative current vagueness req scout may occurrence may exactly one shall orshould system shall allow user select paymentmethod orderquars qvscribe allow superuous innitives req scout delivery system may enable user enter review ratingsmultiplicity quars optionality may weakness nonspecic temporalwords may optional escape clause qvscribe enable vague word crossreferencing pronoun imperative vague pronoun req scout may occurrence may exactly one shall orshould order publish feedback purchase system need collect review ratingsquars qvscribe crossreferencing pronoun imperative req scout exactly one shall collect instore service excludes tracking information servicequars qvscribe imperative req scout exactly one shall looking table notice absence imperative main ambi guity indicator indicator considered qvscribe imperative requirement scout exactly one shall quars however notice requirement lacking imperative beingdefective containing term possible weak verb mayorcan quars capture indicator namely optionality weakness andcrosstree constraint indicatorsan experience application three nlp tool table summary ambiguity detection mean applicable eshop quars qvscriberequirements scout fpos amb fpos amb fpos amb vagueness optionality weakness multiplicity underspecicaiton imperative vague pronoun passive voice immeasurable quantication superous innitives incomplete sentence longcomplicated sentence multiple negation comparative superlative wrong abstraction level dangerous slash detail conclusion three tool examined shown comparable considered dimension apparently dierent indicator end weak verb imperative roughly defect best performancesare obtained best dictionary mean room lowering false negative rate better dictionary end extensibility feature quars permitting add modify dictionary qvscribethat permit modify builtin dictionary suited helpful dierences considering quality aspect outcome comparison help vendor refactor tool beatthe competitor however end share similar defect detecting strategy respect younger tool qvscribe requirement scout perform better quars developed year reference arora sabetzadeh briand zimmer automated checking confor mance requirement template using natural language processing ieee trans softw eng arrabito cunningham gate general architecture text engineering comput humanit femmer requirement quality defect detection qualicen requirement scout joint proceeding international conference requirement engineering foundation software quality refsq ceur workshop proceeding ceurwsorg ferrari gori rosadini trotta bacherini fantechi gnesi detecting requirement defect nlp pattern industrial experience railway domain empirical softw eng gnesi lami trentanni automatic tool analysis natural language requirement comput syst sci eng kenney cooper automating requirement quality standard qvscribe joint proceeding international conference requirement engineering foundation software quality refsq ceur workshop pro ceedings ceurwsorg author index ampatzoglou apostolos aoyama mikio ardila julieth patricia castellanos arrabito monica arvanitou elviramaria arzoky mahir avgeriou paris bakhteev dmitry baouya abdelhakim barsocchi paolo bensalem saddek bergel alexandre bezerra carlos magnum blanco miguel ngel bowes david bozga marius bragagnolo santiago bravosantos sergio bregu antonela calabr antonello casola valentina castellanos ardila julieth patricia catillo marta chatzigeorgiou alexander chehida salim counsell steve crivello antonino cuppens dric cuppensboulahia nora cunha adilson marque silva alberto rodrigues daoudagh said benedictis alessandra lara juan oliveira daniel dernaika farah derras mustapha destefanis giuseppe dia luiz alberto vieira digkas georgios ducasse stephane etien anne eveillard mathieu fantechi alessandro fischer rudolf florea raluca furfari francesco gallego micael gallina barbara gamito ivo ganz walter garc felix garc abarriocanal elena gasiba tiago gasparaite monika girolami michele gnesi stefania gonalves marco gortzar francisco guerra esther hall tracy heidrich jens heikkinen sanna hern ndez gonz lez guillermo jos jntti marko jimneznavajas luis joeckel lisa lavazza luigi lechner ulrike leotta maurizio licorish sherlock lope bruno maesbermejo michel malgaonkar saurabh marchetti eda marinho marcelo marque johnny cardoso miranda moracantallops mar morasca sandro murina ezequiel nakamichi koji namba isao naudziunaite kristina neuh ttler jens ohashi kyoko olianas dario paiva ana paradela claudio andr paruch lucas pecchia antonio pedreira oscar prezcastillo ricardo petri jean petrovaantonova dessislava piattini mario pintoalbuquerque maria pulla aleksand ragaisis saulius rak massimiliano raynaud olivier ricca filippo salzillo giovanni sampaio suzana snchezalonso salvador sanjurjo eduardo saranto kaija savarimuthu bastin tony roy semini laura seriai abderrahmane sicilia miguelangel siebert julien sotos nchez scar stray viktoria sudarikov roman swift steve tancheva rumyana tosi davide tsintzira angelikiagathi urmetzer florian verhaeghe beno villano umberto yamamoto rieko zaitsev oleksandr zouitni ala author index
addressing temporal variation qubit quality metric parameterized quantum circuit mahabubul alam department electrical engineering pennsylvania state university university park mxapsueduabdullah ashsaki department electrical engineering pennsylvania state university university park axspsueduswaroop ghosh department electrical engineering pennsylvania state university university park szgpsuedu abstract public access noisy intermediatescale quan tum nisq computer facilitated ibm rigetti dwave etc propelled development quantum application may offer quantum supremacy future largescale quantum computer parameterized quantum circuit pqc emerged major driver development quantum routine potentially improve circuit resilience noise pqc applied generative gen erative adversarial network discriminative quantum classier task eld quantum machine learning pqc also considered realize high delity quantum gate available imperfect native gate target quantum hardware parameter pqc determined iterative training process target noisy quantum hardware however temporal variation qubit quality metric affect performance pqc therefore circuit trained without considering temporal variation exhibit poor delity time paper present training methodology pqc completely classical environment improve delity trained pqc target nisq hardware much index term quantum computing parameterized quantum circuit fidelity decoherence noise ntroduction quantum computing observed shift purely academic exploration realistic industrial technology recent year however qubits small coherence time quantum state shortlived gate opera tions imperfect overall computation extremely errorprone moreover nearterm quantum device offer number qubits without costly feature error correction due limitation impossible implement test target quantum algorithm shors factorization grovers search etc made quantum computing attractive useful scale noisy intermediatescale quantum nisq hardware cent year quantum routine developed inherently resilient error using variationalparameterized quantum circuit pqc pqc composed set parameterized single controlled single qubit gate parameter iteratively optimized classical optimizer attain desired inputoutput relationship example gate available rigetti qagave hardware used perform arbitrary amount rotation target qubit alongzaxis employing variational hybrid quantumclassical algorithmspqc applied accomplish generative discriminative task eld quantum machine learning pqc used develop arbitrary highdelity quantum gate imperfect native gate target hardware motivation trained pqc supposed noise resilient training generally performed noisy hardware loop approach address impact noise shown figure however quantum computer operate extremely controlled environment operating temperature millikelvin range qubit performance metric dene qubit quality relaxation time dephasing time singlequbit gate error multiqubit gate error readout error etc experience signi cant uctuations time generally quantum computer ibmqx ibmqx ibm periodically calibrated randomized benchmarking updated qubit quality metric reported user validate quantum experiment target hardware variation performance metric qubits ibmqx quantum computer shown figure data collected day period signicant variation qubit quality metric indicate variational circuit trained particular time using hardware loop training methodology may show desired behavior time qbxh qaqbthe qubits prepared basis state terminal state qubits executing workload another basis state singlequbit parameterized gate supported qubits qubit cnot gate allowed control target coupling graph ibmqx tenerife hardware ibm random quantum workload outcome different point time temporal variability output quantum circuit expected arbitrary quantum circuit motivational example executed workload shown figure qubit ibmqx quantum computer coupling graph device shown figure different occasion ieee ieee xplore restriction apply dfig temporal variation qubit quality metric ibmqx relaxation dephasing single qubit gate error twoqubit gate error qubits prepared basis state ideally end execution period qubits another basis stateji projective measurement target hardware expected generate measurement time however due temporal variation qubit quality metric received signicantly different outcome different point time shown figure yaxis show delity measurement correct output sample time circuit circuitcentric binary quantum classiers based pqc discussed section nal outcome decided analyzing measurement distribution classical computer completely wrong due temporal variation qubit quality metric contribution paper demonstrate training methodology pqc address respective pro con present fully classical heuristic training method ology forpqc address temporal variation qubit quality metric used pqc based circuitcentric quantum classiers demonstrate solution veried effectiveness real quantum hardware ibm inary quantum classifier quantum computing preliminary qubit state vector qubit building block quantum computer qubit state expressed ketji notation known state vector single qubit state ii described asj iajibji herejiandjiare known basis state represented tand complex number jajjbj density matrix alternate approach representing qubit state density matrix formalism expressed ipij jwherepiis probability pure statej representation benecial since qubit state may end mixed state due noise need expressed using density matrix quantum gate quantum gate operation modulate state qubits mathematically quantum gate represented nnunitary matrix number qubits multiple gate work different qubits overall unitary matrix calculated using tensor product example two native gate ibmqx gate working qubit therefore overall gate matrix expectation value expectation value average eigenvalue weighted probability state measured corresponding eigenstate quantumcomputers measurement qubit performed called zbasis computational basis jiandji eigenvectors eigenstates pauliz operator eigenvalue respectively quantum computing positive negative expectation value mean mea surements yield jijithanjiji qubit prepared identical setup measured many time measurement always yield jijiif expectation value exactly expectation value mean qubit state perfect superposition jiandji clarity suppose state qubit quantum computation routine jinote higher amplitude ofji expectation value pauliz operator statej iish jzj positive expectation value validates discussion figure show variation expectation value target qubit respect gate parameter classier basic binary classication task classifying input data one two possible group supervised machine learning classication problem solved training mathematical model properly labeled input datasetfxy xmymgwherexiis feature vector multidimensional ithinput data andyiis associated label mathematical model predicts class input data based feature parameter model parameter updated iteratively model prediction satisfactory input dataset binary classication quantum computer proposed classical data pqc serf mathematical model statepreparation routine required encode classical data feed pqc output captured target qubit training phase thepqc parameter updated iteratively based given input dataset probability getting measurement target qubit one class maximized class state preparation state preparation circuit applied qubits ground state used convert classical input data quantum format quantum gate applied data andor quantum speedup exploited structure circuit depends chosen encoding scheme multitude quantum encoding scheme classical ieee xplore restriction apply mqmq mqmq parametric sublayerparametric sublayerentanglement sublayerentanglement sublayerlayer layer measurement tree tensor network ttnmultiscale entanglement renormalization ansatz mera state prepar ation circuittwoqubit unitaries additional unitaries cfig variation expectation value target qubit variational circuit respect tunable parameter generic structure multilayer pqc binary classication task generic structure entanglement sublayers data proposed two promising encoding scheme basis encoding amplitude encoding discussed following section basis encoding scheme binary encoded computational basis state jiji instance classical data binary represented qubits say qqqq whereqandqqandq prepared qubit statejiji effect statepreparation routine written gnj hereu unitary transformation prepares desired quantum state representative classical data ibm quantum computer qubits start jistate therefore quantum gate paulix applied qand qwhereas identity gate applied qandqto prepare state thus case although scheme result trivial quantum statepreparation circuit requires identity gate fairly easy implement existing quantum hardware required number qubits may grow linearly number input feature two bit classical feature require physical qubits amplitude encoding scheme normalized input vectorsx xntrof dimension associated amplitude nqubit statej xiu xrj xipn ixijiiexample state qubit quantum system due superposition linear combination possible computational basis state written ajibjicjidjisuch thatp abcd suppose classical input vectorxfg normalizing input vector getxnorm amplitude encoding scheme encode normalized classical input vector entry amplitude computational basis state whole quantum system state becomes scheme number qubits grows logarith mically dimension classical input vector example log qubits required encode classical value furthermore multiple input superposition state processed simultaneously leading potential speedup computation mathematically quantum algorithm polynomial number nof qubits perform computation namplitudes leading polylogarithmic processing time however encoding scheme result nontrivial statepreparation circuit whichcan unsuitable existing quantum hardware model circuit model circuit parameterized unitary transformation uwhereis set trainable variable act mathematical model classication task model circuit transforms encoded state xito another state say iuj generally model circuit layered architecture layer identical dis similar construct single layer consists parametric entanglement sublayer shown figure parametric sublayer consists parametric single qubit gate figure parameter updated training iterative fashion entanglement sub layer consists multiqubit gate gate shown figure create dependency target qubit qubits circuit state preparation model circuit executed state target qubit measured execution measurement operation repeated multiple time measured distribution analyzed classical computer determine class single input inferencing selection gate model circuit depends available native gate target nisq hardware treelike structure ttn proposed entanglement sublayer shown figure mera similar ttn make additional unitary transformation effectively capture broader range quantum correlation shown figure higher depth circuit susceptible decoherence induced error prominent source error qubits short lifetime therefore entanglement sublayer structure chosen based available native gate coupling graph goal minimize depth circuit iii raining pqc existing approach train pqc hardwareintheloop fashion term approach app approach pqc executed real quantum computer certain input output measured measured output postprocessed classical computer statistical technique kullbackleibler divergence method used calculate disparity target distribution measured distribution hence cost update parameter classical optimization technique stochastic gradient descent particle swarm optimization etc ieee xplore restriction apply quantum circuit simulator ideal parameter updateexpectation value postprocessing evaluation nostop criterionsave classical simulator training approach ideal quantum circuit simulator noisy parameter updateexpectation value postprocessing evaluation yesnostop criterionsave training classical environment target noisy quantum hardware singlemultiqubit gate error time target qcparameterized quantum circuit pqcprojective measurement parameter updatereadout postprocessing evaluation yesnostop criterionsavequantum hardware classical hardware quantum hardware loop hybrid training approachstate preparationfig training variational circuit pqc quantumclassical hybrid setup fully classical setup considering ideal target hardware fully classical setup target noisy hardware thepqc executed updated parameter process iterates measured output match target output certain threshold may seem ideal approach technique plagued certain impediment first qubits quality change time mean trained pqc certain day may show optimal behavior time due qubit specication drift second quantum computer expected operate client server fashion iterative training scheme may get prohibitively lengthy moreover unlike classical bit state intermediate quantummechanical state saved memory computation later stage since saved state lost due decoherence simulation based training pqc model quantum computer simulated name app simu lation result expectation value result qubit compared target expectation value calculate cost dene following costfunction iteratively update parameter pqc figure solve binary classication problem described hybrid approach mmx iyiexpectation pqc wheremis batchsize yiis label ith data batch data labeled class class respectively xii theithinput expectationpqc xiqt expectation value target qubit theithinput current value target minimize cost gradient descent technique applied achieve optimization goal partial derivative cost function equation respect circuit parameter calculated using numerical differentiation approach client need wait server quantum hardware train get parameter pqc ideal gate gate error probability gate time quantum program native gate set gate error error error wnoise eigen decomposition python based simulator repeat end quantum program depolarizing channel amplitude damping phase damping expectation value calculator bfig diagram simulation comparison output probability simulation model ibmqx however simulation model ideal without noise quantum computer whereas quantum computer noisy noise behavior show temporal variation pointed section therefore parameter optimization without con sidering noise may give optimal result inferencing phase real noisy quantum computer proposed approach classical training noise effect deal noisy hardware related dependency trainedpqc propose update parameter expectation value calculated modeled noise behavior target hardware noisy quantum hardware simu lation framework described section cost function remains equation address stochastic behavior noise source evident figure average value qubit quality metric collected signicant amount time day optimize pqc parameter averaging outlier removed dataset using interquartile range rule term approach app expected circuit optimized withappwill perform better circuit optimized appbut executed different day app section provide sufcient evidence behind claim simulation real quantum computer odeling simulation setup modeling noisy quantum system adopt modeling approach presented noisy quantum computation however work output den sity matrix eigendecomposed pure state vector eigenvectors resulting eigenvalue amplitude pure state finally decomposed state vector fed expectation value calculator calculate expectation value qubit heih jzj figure show schematic pythonbased simulation platform module qutip package execute matrix operation pertinent quantum computation validate model simulated parity classier test circuit using model ibmqx spec program compiled ibm native gateset circuit executed ibmqx day get real device result comparison model data realdevice data shown figure ibmqx probability correct output correct trialstotal trial different input model exhibit average error ieee xplore restriction apply validation setup data source order validate effectiveness proposed training methodology picked bit parity classication problem also thought high delity qubit parity gate realization problem using pqc known inputsoutputs combination two output class even odd parity evaluation method although parameterized quantum circuit minimize effect noise suppress altogether therefore expectation value optimized exactly value input thepqc training period indicates measurement guaranteed result desired class output certain input thus circuit executed multiple time known shot ibmqx target qubit measured trial get distribution ratio output binary classication large ratio indicates input belongs class represented logic example trained parity classier executed time qubits qqqq ibmqx input stateqqqq note input odd number oddparity qbeing resulttarget qubit execution resulted distribution time time ratio target qubit indicates class belongs logic odd parity alternately correct output incorrect output ideal noiseless quantum computer ratio would however class decision taken condence ratio close series measurement goal get high ratio value correct incorrect output noisy device ratio correct incorrect output also representation delity circuit esults discussion bit binary input parity classication coded four qubits using basis encoding scheme section parametric gate ibmqx used parametric gate model circuit outcome odd parity outcome even parity labeled respectively training based equation using stochastic gradient descent sgd technique performed parameter optimization model circuit using three different strategy appappand appdescribed section iii tested performance optimized circuit real quantum computer ibmqx simulation ttnpl ttnnl stand parametric sublayerentanglement sublayerlayer parametric sublayerentanglement sublayerlayer ttn layer architecture alternate layer architecture alt cqbqa qdqcpaulix identity gate state preparation circuit parity classier state preparation circuit singlelayer ttn structure singlelayer alt structurethe cost twolayer ttn architecture training target ideal pure noisy hardware respectively however noted adopted simulated hardwarein theloop approach mimic appdue interrupted access real quantum computer simulated approach substitute nisq computer noisy quantum computer simulation framework described section error specications respective day optimize pqc parameter note used iteration sgd circuit training approach report performance ratio correct incorrect output binary classier circuit layer ttn topol ogy ibmqx pqc generated app approach performed best term ratio correct incorrect outcome repeated measurement given day day parameter optimized evident figure ttn noisy average ratio ttn noisy found however circuit executed different day ttn noisydd figure show random behavior substantially degraded performance case average ratio trend validates one argument appstated section iii parameter optimized one time may optimal different time optimized circuit appapproach performed poorly average ratio entire input data set ttn pure figure gure evident circuit optimized appconsistently give better performance ttn pure ttn noisydd corroborat ing claim section iii ratio correct incorrect outcome possible input signicantly higher average ratio appapproach noted ttn pure ttn noisydd ttn noisyavg data collected day ibmqx substantiate claim simulation real hardware substituted nisq computer simulator section two topology parity classier model circuit ttn andalt chosen shown figure satises coupling graph ibmqx hardware shown figure topology singlelayer doublelayer avor simulated total test circuit simulated circuit optimized appttnpl ttnpl altpl altpl appttnnl ttnnl altnl altnl show superiority proposed approach app figure show aggregate actual cost entire input dataset trained pqc app ttnpl ttnpl altpl altpl app ttnnl ttnnl altnl altnl set qubit quality metric data error specication ibmqx collected day period cost interpreted measure difference ideal expected result result noise lesser cost closer result expected actual cost appis consistently smaller theapp instance average cost entire ieee xplore restriction apply ratio correct incorrect output sample different input different training approach collected ibmqx hard ware app ttn noisy app ttn pure appttn noisya ttn noisydd optimized pqc app executed target hardware different day bfig cost entire parity classication dataset different set value qubit quality metric ibmqx ttn structure alt structure cumulative density function served ratio correct incorrect output trained pqc appandapp ibmqx observation per pqc randomly chosen input shot per obser vation input dataset day period ttnpl app larger average cost ttnnl app thus real computer experiment simulation sup port proposed pqc parameter optimization technique considering noise real nisq device later executed optimized pqc forappttnplttnpl appttnnlttnnl ibmqx different time randomly chosen input shot per time cumulative probability distribution ratio correctincorrect output shown figure higher ratio value given cumulative probability appeg ttnnlr forcp app ttnplr forcp figure sub stantiate previous claim appoptimizedpqcs would outperform appon target quantum hardware average value rfor theapppqc found higher appfor ttn parity classiers onclusions presented shortcoming current training proaches parameterized quantum circuit pqc pro posed fully classical training methodology target nisq hardware address impact temporal variation qubit quality metric present simulation framework model circuit behavior target noisy quantum hardware validate proposed solution comprehensive simulation experiment real quantum device mqx quantum classier built pqc proposed methodology improve performance pqc based quantum application target nisq hardware acknowledgement work supported src nsf cns cns ccf dge dge darpa young faculty award dap reference farhi goldstone gutmann quantum approximate optimization algorithm arxiv preprint arxiv kandala mezzacapo temme takita brink chow gambetta hardwareefcient variational quantum eigensolver small molecule quantum magnet nature romero olson aspuruguzik quantum autoencoders efcient compression quantum data quantum science technology dallairedemers killoran quantum generative adversarial network physical review hsieh liu tao expressive power parameterized quantum circuit arxiv preprint arxiv schuld bocharov svore wiebe circuitcentric quantum classiers arxiv preprint arxiv killoran bromley arrazola schuld quesada lloyd continuousvariable quantum neural network arxiv preprint arxiv romero aspuruguzik variational quantum generator generative adversarial quantum machine learning continuous dis tributions arxiv preprint arxiv heya suzuki nakamura fujii variational quantum gate optimization arxiv preprint arxiv zhu linke benedetti landsman nguyen alderete perdomoortiz korda garfoot brecque training quantum circuit hybrid quantum computer arxiv preprint arxiv leytonortega perdomoortiz perdomo robust imple mentation generative modeling parametrized quantum circuit arxiv preprint arxiv benedetti garciapintos perdomo leytonortega nam perdomoortiz generative modeling approach benchmark ing training shallow quantum circuit npj quantum information otterbach manenti alidoust bestwick block bloom caldwell didier fried hong unsupervised machine learning hybrid quantum computer arxiv preprint arxiv knill leibfried reichle britton blakestad jost langer ozeri seidelin wineland randomized benchmarking quantum gate physical review schuld killoran quantum machine learning feature hilbert space physical review letter huggins patil mitchell whaley stoudenmire towards quantum machine learning tensor network quantum science technology cincio dziarmaga ram multiscale entanglement renormalization ansatz two dimension quantum ising model phys ical review letter schuld bergholm gogolin izaac killoran eval uating analytic gradient quantum hardware physical review barbato barini genta levi feature performance outlier detection method journal applied statistic ashsaki alam ghosh qure qubit reallocation noisy intermediatescale quantum computer proceeding annual design automation conference acm johansson nation nori qutip python framework dynamic open quantum system computer physic communication corporation ibm experience online available httpsquantumexperiencengbluemixnetqxeditor ieee xplore restriction apply
software quality issue quantum information system javier verdugo moiss rodrguez mario piattini alarcos research group univers ity castillala mancha ciudad real spain abstract quantum computing technology century quantum computer envi ronments already offering great advantage building advanced application nance health log istics however industry boost large scale production quantum software adequate quality level must achieved assured sense important consider quantum software quality platform product create effective quality environment quantum software paper summarise issue keywords quantum computing quantum software quality quantum quality environment introduction quantum technology includes several research area true random number generation quantum information atomic quantum clock quantum sensor quantum simulator quantum cryptography security quantum communication network quantum internet topic notabl quantum computing attracted lot interest recent year countless interesting application technology spanning several knowledge business area economics financial service chemistry medicine health supply chain logistics energy agriculture etc quantum computing also impacting different area computer science cybersecurit machine learning artificial intelligence prospect quantum computing exciting extraordinary expectation driving global effort perfect quantum techn ology believed quantum computing could also bring new golden age software engineering problem come realise order boost large scale production quantum software adequate quality level required society really benefit promising quantum application exist various domain achieve address area software engineering defined swebok design software constr uction software maintenance etc specifically software testing software quality software testing addressed miranskyy zhang polo software governance addressed blanco piattini paper focus software quality thus section analysis landscape quantum soft ware quality section address issue model metric considered creating efficient quality environment quantum software inally section summarises conclusion future work proceeding quantum software engineering workshop qset october virtual conference email javierverdugouclmes moisesrodriguezuclmes mariopiattiniuclmes orcid copyright paper author permitte creative common license attribut ion internationa ceur workshop proceeding ceurwsorg httpswwwcomputerorgeducationbodies ofknowledgesoftware engineering quality issue quantum computing quantum information system several factor influence quality result quality quantum hardware quality quantum software development operational platform quality quantum software per different type quantum simulator computer adiabatic gate based measurement based etc however date still present error hence name nisq noisy intermediate scale quantum committee technical assessment feasibility implication quantum computing analysed milestone evolution quantum computer towards current status large fault tolerant modular quantum compute moreover underlying technology trapped ion neutral atom qubi superconductors quantum dot semiconductor based qubits centre qubits topological qubits photon etc decisive influence maturity level quantum computer different technology present varying coherence time gate latency gate fidelity etc quantum hardware important matter achieving high quality quantum information system software quality also essential fact quantum software engineering qse essential contribution success quantum computing one principle talavera manifesto quantum software engineering programming establishes qse assures quality quantum software quality management process product essential quantum software expected quality level produced unfortunately quantum softw quality issue largely disregarded concerning quantum software process date interesting work proposed mostly dealing quantum life cycle process application agile methodology quantum development paper focus following quantum product software issue quantum software development execution platform quantum software product platform quality sodhi kapur published analysis impact different quantum computing platform quality attribute sdlc activity experimented main quantum programming platform examining one affect main software quality characteristic availability interoperability maintainability manageability performance reliability scalability security testability usabili characteristic dealt study impact quality attribute lower level programming abstraction increasing code complexity impact maintainability testability reliability availabil ity platform heterogeneity deteriorates software cohesion affecting maintainability reliability robustness reusability manageability testability system remote software development deployment make programming te ting debugging quantum program slower thus affecting maintainability testability dependency known quantum algorithm thereby affecting ability perform enhancement corrective maintenance well testability interoperab ility classical software portability software result lack standardization several area thus affecting availability interoperability maintainability scalability lack native quantum operating system thereb decreasing performance manageability reliability scalability security fundamentally different programming model thus increase code complexity affecting maintainability interoperability security testability study could help evaluate design decision need taken constructing quantum software carefully consider influence given platform every specific quality characteristic software quality existing research effor related quality quantum software focused general quantum program verification specifically verified compilation verification protocol relation verification quantum program formal quantum program description formal verification program certification equivalence checking quantum circuit term metric research deal measurement power quantum computing quantum volume tqf total quantum factor width depth etc consider software feature one exception sicilia carry preliminary study module structure quantum gate library microsofts quantum development platform qdk quantum developer kit using towards quantum software quality environment useful quantum software quality environment contain least quantum quali model set quantum software metric tool supporting automatic gathering visualisation quantum metric isoiec jure quality standard software product isoiec jtc scwg plenary meeting held june expert agreed standard adopted big data artificial intelligence iot blockchain cloud system system xaas etc new quality engineering division would established however time none new model yet cover quantum software propose introduce specific quantum software quality model aligned general isoiec standard family considering special nature quantum computing firstly applicability quantum software existing characteristic performance efficiency maintainability portability compatibility etc must consi dered experience using quantum programming language software practitioner student seen example understandability subcharacteristic need strongly modified quantum program fact difficult understand new computing paradigm also specific quantum software design program second step research must undertaken new quality characteristic aspect quantum software example even soiec consider either accuracy precision software quality characteristic decoherence due error quantum computer mean characteristic fact important present foreseeable future noisy intermediate scale quantum nisq technology going available hence must consider current quantum technology future one quantum fault tolerance computer defining quality model characteristic although lot research metric classical conceptual model none quantum software firstly important define metric conceptual level quantum technology agnostic one purpose conceptua model could uml extension describing quantum system quantum circuit model abstract quantum information measurement entity furthermore metric need defined logical technology specific level taking account different quantum programming language currently exist conceptual logical level metric must consider overhead arises due different quantum characteristic entanglement superposition non cloning etc different quantum gate hadamard pauli cnot controlled toffoli etc support metric calculation tool created extending possible existing open source tool following metamodel approach conclusion future work quantum computer potential solve type task today even dare dream classical computer never able solve eqf fact quantum computing speed process solving algorithm require massive parallel computation allows better simulate nature however achieve hese benefit quantum software developed appropriate way must commence quantum software engineering prepared future also avoid low quality quantum software error productivity problem interim end need comprehensive quantum software quality environment including quality model metric tool kind environment could useful creating developing quantum software also overall dernisation reengineering effort acknowledgement would like thank aquantum member especially guido peterssen pepe via help support work partially funded qhealth quantum pharmacogenomics applied aging project cdti mission program center development industrial technology ministry science innovati spain gema project consejera educacin cultura deportes junta comunidades castilla mancha fondo europeo desarrollo regional feder grant sbply reference idb quantum technology digita transformation social impact cross sector disruption interamerican development bank wallden kashefi cybersecurity quantum era communication acm biamonte wittek pancotti rebentrost wiebe lloyd quantum machine learning nature garg ramakrishnan advance quantum deep learning overview arxivv zhang recent advance quantum machine learning quantum engineering httpsdoiorgque humble debenedictis quantum realism ieee computer piattini peterssen prez castillo quantum computing new software engineering gol den age acm sigsoft software engineering newsletter june piattini serrano prez castillo peterssen hevia towards quantum software engineering professional jan feb doi mitp miranskyy zhang testing quantum program proceeding international conference software engineering new idea emerging result doiicse nier arxivv polo quantum software testing qanswer quantum software engineering programming proceeding international workshop quantum software engineering programming talave reina spain february blanco piattini adapting cobit quantum computing governance brito abreu rodrigues silva prez castillo ed quality information communicatio technology springer international publishing preskill quantum computing nisq era beyond quantum doiorgq grumbling horowitz quantum computing progress prospect washington national academy press eqf strategic research agenda european quantum flagship february resch karpuzcu quantum computing overview across system stack arxivv piattini peterssen prez castillo hevia talavera manifesto quantum software engineering programming qanswer quantum softw engineering programming proceeding international workshop quantum software engineering programming talavera reina spain february httpceur wsorgv olpaperpdf dey ghosh samir chakrabarti quantum development life cycle arxivv cset oct weder barzen leymann salm vietz quantum software lifecycle apeqs proceeding acm sigsoft international workshop architecture paradigm engineering quantum software november hernndez paradela quantum agile development framework qua tic sodhi kapur quantum computing platform assessing impact quality attribute sdlc activity accepted icsa january doi rand research statement language veri fication compilation quantum era httpspdfssemanticscholarorgbbecfcdcddaaafapdfga rand paykin zdancewic qwire practice formal verif ication quantum circuit coqth international conference quantum physic logic qpl bob coecke aleks kissinger ed eptcs gheorghiu kapourniotis kashefi verification quantum computation ove rview existing approach theory computing system arxivv barthe hsu ying zhou relational proof quantum program proc acm program lang popl article cartiere formal quant software engineering introducing formal method software engineering quantum computing httpswwwresearchgatenetpublication formalquantumsoftwareengineeringintroducingtheformalmethodsofso ftwareengineeringtoq uantumcomputing chareton bardin bobot perrelle valiron toward certified quantum programming arxivv burgholzer wille advanced equivalence checking quantum circuit arxivv bishop bravyi cross gambetta smolin quantum volume march httpswwwsemanticscholarorgpaperquantum volume bishop bravyicfaacdcfde eecd cross bishop sheldon nation gambetta validating quantum computer using randomized model circuit phys rev published september doiphysreva salm barzen leymann weder criterion successfully executing circuit nisq era eff really mean proceeding acm sigsoft international workshop architecture paradigm engineering quantum software apeqs november virtual usa acm new york icilia snchez mora garca source code structure quantum code insight qdk iso isoiec system software engineering system software quality requirement evaluatio square system software quality model ginebra international organization standarization prez delgado prez gonzlez towards quantum software modeling language icse workshop rieffel olak quantum computing gentle introduction cambridge massachusetts mit press garhwal ghorani ahmad quantum programming language systematic review research topic top cited language archive computational meth od engineering httpsdoiorgs rodrguez piattini ebert software verification validation technology tool ieee software prez castillo serrano piattini software modernization embrace quantum technology adv eng softw
challenge hpcqc integration amr elsharkawy xiaoting michelle philipp seitz yanbin chen yannick stade manuel geiger qunsheng huang xiaorang guo muhammad arslan ansari martin ruefenacht laura schulz sven karlsson christian mendl dieter kranzlm ullerand martin schulz school computation information technology technical university munich garching germany email amrelsharkawyhuangqschulzm intumde philippseitzyanbinchenyannickstademanuelgeigerxiaorangguoarslanansarichristianmendl tumde mnm team ludwigmaximiliansuniversit munich munich germany email michelletonmifilmude kranzlmuellerifilmude leibniz supercomputing centre garching germany email martinruefenachtlauraschulz lrzde technical university denmark denmark email sveadtudk abstract quantum computing potential adjunct highperformance computing hpc infrastructure clear integration two hpcqc face numerous challenge issue primarily lie complex infrastructure needed integration key hpcqc integration creation unified hybrid quantumclassical toolchain reduces latency support various quantum technology obstacle include hardwarerelated requirement like maintaining uptime networking poster focus challenge ntroduction traditionally largescale simulation run data cen ters hpc facility offer bespoke highperformance system research purpose quantum device known complicated technology requiring significant support necessary facility utilized motivated current state quantumbased service researcher access quantum computer lab setting remotely service provider since hpc center familiar pro viding support distributing access bespoke system make sense integrate quantum device additional accelerant device traditional hpc center still several quantum algorithm require classical feedback latency low possible main motivation hpcqc integration however exact integration quantum device existing hpc system yet set stone poster identifies main challenge four hardware integration scenario currently proposed loose integration standalone loose integrationcolocated tight integration colocated tight integrationonnode hpcqc ntegration scenario different hpcqc integration scenario cur rently available expected exist future present wide range challenge loose integration standalone initial step towards quantum device development largely overlook classical per formance focusing accurate control standalone quantum processing unit qpu problem hand optimized undergo basic compilation interaction pri marily web interface minimal integration stage loose integration colocated initial phase inte gration involves coupling singular quantum device hpc system usually colocated networkwise access qpu primarily hpc system necessitating advanced deployment management tool case extensive setup needed cloudbased integration may considered though colocation typically preferred tight integration colocated involves location multiple device potentially various vendor increasing complexity potential system utiliza tion integration effort performance expectation rise significantly counter hardware restriction hpc resource could allocated qpu integration main computation occurs elsewhere allowing resource snowballed across multiple facility tight integration onnode ultimate aim hpcqc integration present significant technical challenge onnode integration akin gpus facilitates tackling signifi cant problem finegrained solution transition quantum realm improve performance qpus becom ing almost indistinguishable closely interconnected classical component iii pplication level integration level support application different degree application grouped requirement three execution workflow first workflow embeds one quantum computation classical one second one invokes quantum computation iteratively third one consists overarching classical process send hybrid computation device classical component fpgas quantum component tightly coupled workflow pose stronger requirement hardware ieee international conference quantum computing engineering qce ieee doi qce ieee international conference quantum computing engineering qce ieee doi qce ieee xplore restriction apply loose integration scenario insufficient later type algorithm algorithm proven quantum advantage become feasible later scenario still exponential slowdown due poorly optimized software hardware integration nullify theoretical gain hpcqc ntegration challenge first challenge listed poster scheduling considering looselyintegrated smallscale system typ ically mean ensuring single task block access resource however larger system entail quantumclassical resource estimation remains open field research another prominent issue scala bility encompasses enhancement software capability handle increasing number user manage different problem magnitude offer broad array solution methodology complexity increase significantly quantum characteristic qubit connectivity fidelity decoherence time included quantum computing domain still state constant change witnessing influx innovative algorithm methodology hard ware technology constantly evolving requirement need accommodated enable longterm sustainability result shortterm solution must provide capability change restrictive another big challenge latency classical quantum device necessary keep latency low possible utilize scarce expensive resource effectively intermediate measurement part quantum algorithm rely fast classical computation based measurement outcome continue quantum operation however result quantum computation communicated classical device processed sent back quantum device multiple measurement communication quickly becomes bottleneck considering hpc system classical device hpc fundamentally different software hardware level presenting array complex challenge integration many different quantum tech nologies ranging superconducting device trapped ion neutral atombased system posse unique characteristic must addressed integration type mandate particular condition optimal operation interoperability mode must ensured sup porting multiple quantum device adding another layer complexity moreover data management resource management come complex classical data encoded quantum state entanglement novel resource type scheduling algorithm established manages request give fair access qpus enables efficient usage quantum resource reduces waiting time hpc quantum device ensuring efficient coordination quantum classical system integrating quantum data classical data achieving seamless interface hpc system critical challenge finally lack ofuniversal quantum standard impedes collaboration essential fostering interoperability system integration olution proposal addressing myriad challenge hpc inte gration requires innovative comprehensive solution important step unified toolchain easily extensible problem specific solution tackle scalability prob lem propose development algorithm software capitalize classical parallelism characteristic hpc quantum parallelism unique example crosstechnology execution facilitated introducing middleware layer hybrid toolchain layer abstract hardware intricacy provides uniform interface programmer thereby lowering complexity innovative idea data management propose developing new data model management system handle classical quantum data unified fashion resource management optimized building telligent system comprehend specific requirement limitation classical quantum system system dynamically allocate resource based real time demand system status problemspecific knowledge additionally hardwaresoftware codesigns take hpc consideration outset create compre hensive userfriendly application programming interface apis allow seamless communication sys tems achieve standardization encourage global collab oration develop adopt universal standard quantum technology initiative enhance interoperability different system facilitate integration process onclusion integration quantum computer hpc system promising field research integration separated four stage also regarded timeline loose integrationstandalone loose integrationcolocated tight integrationcolocated tight integrationonnode identified various challenge faced wellworking integration scalability support various quantum technology latency data resource management standardization solution propose challenge include software enabling parallel execution introducing middleware layer hybrid toolchain new data structure intelligent management system global collaboration standardization process reference elsharkawy seitz chen stade geiger huang guo ansari mendl kranzlm uller schulz integration quantum accelerator high performance computing review quantum programming tool submitted publication ruefenacht taketani ahteenm aki bergholm kran zlmuller schulz schulz bringing quantum acceleration supercomputer online available httpsmeetiqmcom uploadsdocumentsiqm hpcqcintegrationwhitepaperpdf ieee xplore restriction apply
voloptical quantum electronics httpsdoiorgsx studying efficacy traditional software quality parameter quantum software engineering memoona faryal saddaf rubab malik khan muhammad attique khan abdulaziz shehab usman tariq samia allaoua chelloug lobna osman received february accepted june published online august author licence springer sciencebusiness medium llc part springer nature abstract classical computing gave current digital age overriden exciting powerful radically distinct form computing technology termed quan tum computing quantumbased computing may eventually many time faster computing capability today smart phone laptop computer device leveraging fundamental quantum mechanic quantum potential initially focused research paper baseline defined get fundamental quantum computing get insight currently available quantum computing platform environment described software quality model investigated enlist detailed soft ware quality attribute relevance different software application type presented characteristic quantum computer quantum processor may pertinent understanding reasoning software quality attribute quantum comput ing characteristic qccs may impact quality quantum software analyzed end keywords quantum computing software quality quality attribute quantum impact quality model introduction today going emerging paradigm quantum computing quantum com puting operates entirely different scientific principle ability ena ble breakthrough artificial intelligence chemistry space capability medicine mixed reality much zhao quantum computing based quantum mechanic capable solving variety problem efficiently resolved classical computer ohya masuda leveraging science quantum mechanic operating system article part topical collection quantum technology quantum walk quantum image processing emerging trend issue challenge guest edited ahmed abd ellatif salvador venegasandraca abdulaziz shehab aishehabjuedusa extended author information available last page article faryal page basis completely new form computational power ohya masuda fast pace quantum computing pointing towards paradigm shift field soft ware engineering thus stepping towards novel quantum specific software engineering approach quantum computer utilize quantum bit known qubits zhao qubit seen superposition classical bit akama super position give combination compared classical bit capable hold ing single digit information hand qubit superposition different probability due distinction quantum com puters faster energy efficient computationally powerful classical counterpart ohya masuda raj increasing quantum momentum revolutionary social impact many engi neering area including chemical engineering machine learning disease diagnosis machine learning cryptography cyber security development new material medicine various simulation key potential area application include optimization com plex problem solving machine learning along effective number qubits application quantum computing actually interdisciplinary opportunity digi tal transformation currently different vendor provide quantum computer processor simulation via cloud cloud based service microsoft azure quantum obisat ibm experience alex google quantum playground http aws amazon com braket dwave leap asjad others variety quantum algorithm available till including fourier transformbased algorithm lin quantum walk based algo rithm nash santha amplitude amplificationbased algorithm nash hybrid quantum classical algorithm franco best known quantum algo rithms include grovers endo williams shors algorithm grover shors algorithm perform factorization large number exponentially faster pace grovers algorithm able carry searching larger unstructured data base unordered list speed four time faster classical algorithm considering pace development evolution quantum hardware software becoming pertinent investigate characteristic quantum computer pro cessors need indepth study investigation enhancement charac teristics qcs may influence quality attribute quantum software section establishes necessary understanding quantum computing funda mentals property distinction classical computing looked current available platform quantum computing sect thereafter different software application type relevant quality attribute investigated sect moreover discussed expected prime quality attribute software program algorithm post quantum era section sect contains foremost part research involves characteristic entire quantum hardware software apparatus impact software quality attribute literature review methodology proposed last year covering software engi neering domain post quantum era highlighted area modeling studying efficacy traditional software quality parameter page approach quantum software prezdelgado quantum programming language usaola error tracking quantum program hietala testing quantum software usaola engineering approach prezcastillo management approach quantum project gonzlez brief impact quantum computing software quality also highlighted sodhi sodhi kapur zhao discussed detailed background related quantum mechanic emphasized upon rapid progress domain quantum software engineering research delved state art engineering support quantum software sys tems via looking five quantum software development phase requirement analysis design implementation testing maintenance reuse end highlighted chal lenges opportunity related five stage software development life cycle sdlc introduced quantum software development life cycle zhao abstract refinement life cycle required application nisq preskill era moreo ver paper doesnt discus quantum software quality attribute dey high lighted root cause behind development classical sdlc model create con ceptualization quantum development life cycle qdlc model proposed stepwise infrastructure qdlc inspired classical waterfall model stage discussed detail considering quantum mechanic quantum waterfall model proposed dey unable accommodate uncertainty linked quantum computing form continuous evolution quantum hardware development tool well coordination different profile involved quantum software devel opment stated research provide specific modeling approach quan tumbased software design architecture testing idea proposed related functional nonfunctional testing quantum software qdlc weder introduced quantum software life cycle based ten phase considering specifically gatebased software application quantum analysis available method tool utilized phase presented moreover research highlighted importance hybrid algorithm quantumclassical weder provided specified gatebased quantum application life cycle strategy provide hybrid algorithm service lacking mechanism proposed decide part problem run classical quantum computer sodhi presented general architecture quantum computing platform qcps discussed architecturally significant characteristic qcps impact positively negatively various quality attribute qas software list presented sodhi exhaustive list doesnt cover every wider set software application type moreover apply qcp characteristic order evaluate quality quantum software absent furthermore sodhi kapur also determined salient characteristic qcps shown impact distinctive characteristic qcps quality attribute quantum software appli cation impact various qcps sdlc activity handling highlighted well sodhi kapur neither discussed broader set various software application type quality attribute covered every affected characteristic quantum computing platform prezcastillo suggested approach related software modernization modeldriven reengineering process based existing software engineering standard unified modeling language uml raj knowledge discovery metamodel kdm rieffel proposed restructure classical system migrating quantum algorithm together legacy classical system preserving business logic embedded legacy system integrate quantum software component existing classical software system faryal page discussed detail prezcastillo also choose classical infor mation system type embed kind quantum algorithm discussed importantly prezcastillo discussed reengineering impact quality quantumclassical software application table briefly summarized area covered discussed literature presented research discussed detail quality attribute presented different software quality model well detailed quantum computing hardware software apparatus characteristic indepth impact quantum software quality attribute quantum computing fundamental basis quantum computer quantum mechanic quantum mechanic deal physical world probabilistic nature reason kind computing circuitry utilizes subatomic particle electron atom photon along information state spin unlike classical circuit logic gate transistor marella parisa quantum computer utilize quantum bit contrast classical bit known qubits combarro qubit perceived superposition classical bit akama superposition give combination compared classical bit hold single digit information qubit quantum bit either state superposed state well mechanism exponentially increase processing speed quantum computer enables solve problem practically unsolvable classical computer quantum bit representation different compared classical bit representation qubit represented using dirac bracket notation unicvar unicvar rieffel polak one qubit equivalent column vec tor length specific quantum state space termed linear representation base combination zhao therefore two qubits represented single qubit unicvarr represented linear combination basis unicvarrpunicvarqunicvar probability normalization condition satisfied unicvarpunicvarunicvarqunicvar quantum computing property following quantum computing property important understand real quantum potential superposition qubit superposition different probability classical computer bit represent four different state shown belowunicvarbracketlefts bracketrights unicvarbracketlefts bracketrightsstudying efficacy traditional software quality parameter page table literature overview literature area covered quantum mechanic qcps character isticssoftware qas sdlc activity qcps impact qasqcps impact sdlcinfra structure proposedevalu ation method quantum software engineering landscape horizon zhao indepth indepth abstract qdlc quantum development life cycle dey brief indepth indepth quantum software lifecycle weder brief quality attribute quantum computing platform sodhi brief indepth quantum computing platform assessing impact quality attribute sdlc activity sodhi kapur brief indepth indepth reengineering information system toward classicalquantum system prezcastillo faryal page possible state two bit four possible state bit represent one state time ultimately limit process ing classical computer phenomenon similar trying one corridor time order escape maze quantum computer four state represented qubits difference represent four possible state increase processing power quantum computer manifold qubits quantum computer represent possible value simultaneously gyongyosi imre similar trying path maze bit like functionality highspeed parallel computer hence number qubits value state possible impli cates exponential growth processing power quantum computer enables quan tum computer solve problem classical computer practically unable handle entanglement strong correlation among two closely distant located quantum particle referred quantum entanglement mean one state described independently others state alex marella parisa creates compact communica tion relationship among qubits even existing opposite end universe quantum bit linked together intact instantaneous connection measurement performed one system may rule possible measurement another system entangled considering simplest coin flipping example two coin flipped chance getting head getting tail result independent ran dom uncorrelated classical universe quantum system coin considered entangled one coin state measured head enable predicting accuracy whether second coin likely either head tail similar like invisible thread connecting coin entanglement contributes fastness quantum computing system imagine two different apparatus measure quantum state entangled corre lated quantum particle separated large distance measuring state either quantum photon give spin particle state predicted accuracy rather classical comparing apparatus measurement reveals result surprisingly correlated despite fact separated large distance mean rather waiting apparatus send measurement result correla tion entanglement enables predicting end entangled group faster send ing result accuracy interference concept interference enables deliberately bias state qubit required one phenomenon interference quantum alike interference wave classical physic alex marella parisa two wave medium interfere interference creates resultant wave may either constructive destructive depending upon alignment studying efficacy traditional software quality parameter page opposite direction combarro although matter particle behavior sometimes also behaves like wave thus exhibit interference quantum object sensitive noise environment damaged external intervention thus exhibiting situation interference wave function quantum particle may either reinforce decline basis state may affected hadamard transformation combarro following way qubit state applying mentioned hadamard transformation basis state qubit state becomes clear example destructively interfered amplitude unicvar shown final state component along unicvar regardless fact equal magnitude opposite sign hand constructive dominantly interfered state unicvar new kind computing classical computing current digital computer classical computer present almost everywhere whether form personal computer smartphones simple controller powerful super computer able solve computationally intensive problem currently available conventional computer handle store information using bit bit value time classical threebit register capable generating choice one eight combination possible time using classical bit process classical record limitation con straint conventional computer however classical computation work well lot computational problem task related spreadsheet email classical desktop assignment name exist problem require available powerful classical computer npproblems ohya masuda etc supposed affected resource limitation conventional computersh faryal page quantum computing quantum computer harness quantum mechanical property like entanglement superposi tion interference perform computation combarro qubits quantum bit seen quantum version classical bit due qubits quantum computer stand need isolated environment reason interfer ence noise may ruin coherent state qubit quantum computer therefore hard maintain normal working environment since tend take task supposed heavy classical comput er recommended usually design implement hybrid system kind com putations classical quantum area specification handle problem quantum threebit register also capable generating choice alike classical regis ter abdelsamea nassar difference qubit mechanical characteristic enable operation eight combination depending number qubits added number operation increase exponentially alike classical logic gate classical computer quantum computer exploit quantum logic gate horesh processing information combination quantum logic gate form quantum circuit gate applied parallel several qubits one interesting distinction derived quantum specific characteristic result measured qubit probability space qubit probability space measured collapse single binary value longer superposition state thus quantum computer utilizes superposi tioned qubits calculation computation value measured comparison classical computing quantum computing classical computing quantum computing entirely different form computing quantum storage quantum bit mechanized via electron spin classical storage based upon electric voltage charge similarly quantum computer enable parallel pro cessing help quantum logic gate different classical logic gate classical logic gate allow sequential processing result slower computation distinct form notation representation termed dirac bracket notation used represent qubits classical computer simple binary code repre sent bit key difference among classical quantum computing depicted table availability quantum computing platformsenvironments real quantum computer hard operate maintain also quantum circuit deployment discussed costly process therefore quantum algorithm run cloudbased quantum simulator technical giant provider quantum computing given direct access quantum simulator processor via cloud documentation quantum computing tool language also available developer understanding different cloudbased quantum computing service available microsoft azure cloud quantum obisat ibm alex amazon braket kopka rigetti forest lin dwave leap asjad google quantum http aws amazon com braket name cloud provider dwave first company studying efficacy traditional software quality parameter page commercially provide quantum computer rigettis product forest lin includes tool suite development tool programming language example algorithm quan tum script language quantum development kit qdk development provided microsoft obisat ibm network quantum network started ibm accessed quantum software development kit qiskit cloud similarly amazon providing entire system cloud service quantum supremacy exponentially increase number qubits added quantum proces sor currently google achieved qubit supremacy software quality attribute major classification software contains system software application software one manages system resource designed fulfill userspecific require ments quality requirement significant kind software result end product quality attribute qas ass software quality isoiec lin model challa paul provide six main characteristic software functionality maintainability reli ability usability efficiency portability characteristic comprising subcharacteristics obisat instance functionality software achieved measuring subcharacteristics suitability accurateness compliance security interoperability maturity similarly software considered reliable fault tolerance recoverability understandability guaranteed stated model replaced isoiec marella quality model two main characteristic appended compared previous model table classical quantum computation key classical computing quantum computing storage bit quantum bit qubit storage mechanism via voltage charge via electron spin processing sequential logic gate parallel quantum logic gate state either infinite combination complex information representation binary code dirac bracket notation unicvar unicvar solution defined multiple probabilistic gate etc paulix pauliy hadamard etc circuitry macroscopic technology microscopic technology operation boolean algebra linear algebra unitary matrix power consumption lesser limitation slower computation dedicated physical environment high power consumption microscopic circuitry slow fragile difficult error handling advantage easy maintenance fastest execution easy circuit integration lesser power consumption outperform unsolvable problem faryal page compatibility security along subcharacteristics introduced later quality model table depicts characteristic subcharacteristics model application software class various different kind software program develop assist user completing task maintaining document setting alarm playing game may word processor spreadsheet web browser database software enterprise software quality lie essential essence type example performance quality attribute important factor application real time constraint military nuclear system even millisecond delay may result undesirable outcome example applica tion software type along relevant important quality attribute requirement shown table seen table important quality attribute majority software application type security security foremost region interest quantum computer due efficiency performance although quality attribute requirement part application nonfunctional requirement always explicitly stated software requirement gorton consider early stage software development may result poor quality unsatisfactory end product therefore clear understanding quality attribute requirement mandatory stepping towards software design phase architect designer must involved requirement gathering phase order nail relevant addressable quality attribute software electronic communication security relies upon cryptographic technique utilized upcoming era quantum computing bring end almost currently used public key encryption scheme mavroeidis since quantum computer able perform exhaustive searching calculation faster classical counter part able break cryptographic secret key speedily ultimately allow eavesdropper intercept communication channel breakable security algo rithms quantum computer listed sect authentication algorithm consider secure tends collapse quantum environment instance present public key algorithm rsa paar pelzl elliptic curve cryptosystems paar pelzl con sider secure efficient algorithm provably weakening quantum computer kirsch chow mavroeidis show algorithm qual ity attribute specifically security efficiency foremost targeting area technological advancement solution security disruption need develop quantum resilient algo rithms national institute standard technology nist already called pro posals algorithm three five year analysis report draft standard mavroeidis quantum resilient algorithm development required rely fundamental property quantum mechanic indestructible quantum computer characteristic quantum mechanic entanglement capable keeping far away object entangled helpful secure information exchange two party kind interception one may alter reveals presence third party discussed earlier clear understanding documenta tion required software quality attribute mandatory step plunge soft ware design development phase therefore addressable requisite quality attribute security efficiency vital consideration development quantum resistant authentication algorithmsstudying efficacy traditional software quality parameter page table characteristic subcharacteristics quality model isoiec isoiec appendage characteristic sub characteristic description characteristic sub characteristic description functionality accurateness functional correctness functional suitability correctness degree provide correct result suitability software function appropriateness appropriateness degree software appropriateness user need compliance software compliant capability completeness degree cover detailed specifica tions interoperability ability interact sys tems component security restrict illegal unauthorized access maturity lesser failure frequency efficiency time behavior response time given input performance efficiency time behavior resource behavior efficient resource usage cpu networkmemory etcresource utilization degree meet resource usage requirement analyzability capability identify deficiency cause failurescapacity degree meet max limit parameter requirement usability learnability capability enable user soft ware learningusability learnability operability capability well operable given environment given useroperability appropriateness recognizability degree user recognition whether appropriate need user error protection degree protect user making error user interface aesthetic degree providing pleasant user interaction accessibility degree software usage broader characteristic range faryal page table continued isoiec isoiec appendage characteristic sub characteristic description characteristic sub characteristic description reliability fault tolerance ability withstand failure continue normal operationsreliability fault tolerance recoverability bring back full operation recoverability understandability easily understandable software maturity degree meet reliability need normal operation availability ability remain accessible operational needed maintainability changeability ability effectively absorb changemaintainability modifiability stability sensitivity change impact modularity degree software decomposition discrete component testability ability testing change testability adaptability capability adapt change reusability degree reusing component asset analyzability degree assessing change impact software component portability installability degree effort cost required software installationportability installability degree efficient installation installation software conformance well component software conforms product specifica tionslack conformance may cause portability problemadaptability degree efficient adaptation dif ferent environment replaceability capability replace software component anotherreplaceability degree software replace another goalstudying efficacy traditional software quality parameter page table continued isoiec isoiec appendage characteristic sub characteristic description characteristic sub characteristic description compatibility coexistence degree perform function effi ciently without impacting product interoperability degree interact system component security confidentiality degree access integrity degree unauthorized access modification prevention nonrepudiation degree prohibition proven action repudiation authenticity degree prove claimed identity resource accountability degree trace action entity uniquely faryal page quantum computing software quality qccs impact software quality attribute sqas quantum computing characteristic qccs impact software quality attribute discussed detail available public usequantum processor hard keep stable state require kelvin absolute kelvin le universe temperature really difficult sustain low temperature real term requires high range price develop maintain personal computer yet available public impact sqasquantum processor available public due special physical operating environment quantum hardware cooling refrigera tor cost usual consumer budget nonavailability unfavora bly impact software system operability availability maintainability portability compatibility usability essential quality factor special physical environmentquantum hardware circuitry requires ultralow temperature necessitate maintain special physical environment proper functioning quantum mechanic moreover physical size quantum machine large keep practical everyday computing also quantum comput er processor highly sensitive noise environmental factor minimizes fault tolerance capability impact sqas highly challenging create maintain large prosensitive physical environment stable working quantum computer form new changed working environment may hamper proper functionality quantum system therefore special operating environment required may adversely impact software system operability availability maintainability port ability compatibility usability qas special algorithm require taskunlike classical computer quantum com puters require special distinctive algorithm perform computational task even specialized algorithm need new suitable distinct algorithm every single kind computation impact sqassince specific algorithm require every type com putation problem mean one algorithm written one problem table application software type relevant quality attribute type relevant quality attribute database software important security reliability portability enterprise software important functional suitability usability security maintainability portability web browser important security usability portability realtime application important performance efficiency reliability spreadsheet word processor important correctness user interface aesthet ic learnability accessibilitystudying efficacy traditional software quality parameter page utilized solve another problem rather unique algorithm required different kind problem prime factorization recursive problem large database searching algorithmic example written target distinctive computational problem quantum system characteristic may affect reusability functional suit ability appropriateness recognizability replaceability factor fastest executiondue distinguishing feature qubits quantum mechan ic quantum computer thousand time faster classical computer instance among quantum computing platform google developed quan tum computer accelerated computational speed million time compared classical computer david nield said google quantum computer million time faster laptop httpsquantumcomput ingibmcomhttps quant compu ting ibm com well known quantum algorithm grovers algorithm williams perform searching larger unstructured database unordered list speed four time faster classical counterpart algorithm impact sqasquantum computer processor exponentially faster modern classical cpu take fraction second process petabyte data quantum environment fastest ever execution even unsolvable problem classi cal computing quantum computer favorably impact software factor like time behavior resource utilization performance efficiency others outperform specific class problemsquantum computer solve problem efficiently handled classical computer outperform extremely well problem like large number factorization searching unor dered unstructured database recursive computation however execution time file handling subroutine observed significantly lower test case quantum execution narsapur impact sqasquantum computing solution every kind prob lem problem classical computer good solving quantum still dependent classical storage due certain physical factor functional suitability appropriateness recognizability need taken care choosing classical quantum computing processor performing computational task difficult dealing error delicate quantum computer error prone mean kind unsuitable environment change cause loss qubit information ultimately end fault even failure however error classical computer digital nature bit state accidentally put error quantum computer analogue due arbitrary superposition state single qubit impact sqasquantum hardware naturally errorprone highly chal lenging dealing error thus creates unfavorable processing environment software functional correctness user error protection fault tolerance operability testability analyzability quality factor solve complex problem lesser timesince quantum computer able perform complex computation faster classical one mean qcs continuous threat cryptographic algorithm well symmetric key public key algo rithms tends adversely impacted quantum computer public key cryptographic algorithm rsa asjad ecdsa johnson dsa johnson even consider breakable quantum computer mavroeidis security algorithm mainly rely upon factorization large number calculation faryal page discrete logarithm become vulnerable instance best known quantum algorithm shors algorithm grover able perform factorization large number exponentially faster pace impact sqashaving excel solving unsolvable complex problem within minimum time although favorable quality constraint like time behavior resource utilization performance efficiency however cryptographic algorithm used achieve confidentiality integrity security purpose become vulnerable introduction quantum computer therefore quality factor like software security unfavorably impacted characteristic moreover whole internet security risk introduction powerful quantum computer accommodate big datathe capability modern computer handle massively generated data already hit ceiling raj enriched big data classification depends computing power available therefore quantum bit qubits provide numbercrunching power handle accelerate big data processing fast reasonable time frame impact sqascurrent production large data set efficiently accom modated managed quantum computer huge unstructured data handling processing well incredibly fastest data analysis favorable characteristic certain qas like performance efficiency functional suitability usability reli ability maintainability others quality attribute marked indicate quality characteristic others shown subcharacteristics quantum computing characteristic favorable unfavorable impact software system quality attribute depicted table quantum computer seems perfect analyzing large amount data improved performance revolutionize artificial intelligence providing many possible choice simultaneous processing conclusion presented research established requisite understanding quantum comput ing work get real potential study depicts detailed comparison currently using classical coming era quantum computing technol ogies quality crucial factor software development aid availing customer satisfaction study analyzed different software quality model proposed quality charactersitics subcharacteristics probing analysis figure distinct characteristic quantum computer quantum apparatus impact different software quality attribute instance analyzed qcc fast est execution favorably impacted software time behavior performance efficiency one hand hand special operating maintenance environ ment unfavourably impact operability maintainability quality factor since quantum computing far year away utilize along classical conventional com puting potential impact analysis software engineering software quality never set aside needful exploration distinct characteristic qcs impact software system considering potential impact experimental quan tum simulation done future work elicit quantum characteristic studying efficacy traditional software quality parameter page table qccs impact sqas char acteris tic sqas func tional cor rect nessfunc tional suit abil itytime behav iorresource utiliza tionperfor mance effi ciencyoper abil ityappro priate ness recog nizabil ityuser error pro tec tionusa bil ityfault toler anceavail abilityreli abil itytest abil ityreus abil ityana lyz abil itymain tain abilityadapt abilityreplace abilityport abil itycom pata bilityscal abil itysecu rity avail able public special physi cal envi ron ment special algo rithm require task fastest execu tion outper form specific class prob lem difficult dealing errorsu faryal page table continued char acteris tic sqas func tional cor rect nessfunc tional suit abil itytime behav iorresource utiliza tionperfor mance effi ciencyoper abil ityappro priate ness recog nizabil ityuser error pro tec tionusa bil ityfault toler anceavail abilityreli abil itytest abil ityreus abil ityana lyz abil itymain tain abilityadapt abilityreplace abilityport abil itycom pata bilityscal abil itysecu rity solve com plex prob lem lesser time accom modate big data favorable unfavorable applicablestudying efficacy traditional software quality parameter page impact relevant effective solution overcome negative impact technological advancement though evolution quantum computing theorization successful develop ment testing process diverse variety coming quantum software qas impacted emerging technology really challenging explore funding funding used conduct publish work declaration conflict interest author declared conflict interest work reference abdelsamea nassar eldeeb past present future scalable computing technology trend paradigm survey ijias akama element quantum computing springer berlin obisat alhalhouli alrawashdeh alshabatat review literature software qual ity wscit alex introduction quantum computing amazon braket http aws amazon com braket asjad sirajuddin rsa algorithm azure quantum cloud service http azure micro soft com servi ce quant bichsel baader gehr vechev silq highlevel quantum programming language challa jagat paul integrated software quality evaluation fuzzy multi criterion approach infom process jips combarro practical introduction quantum computing qubits quantum machine learning beyond dey ghosh chakrabarti qdlc quantum development life cycle arxiv pre print arxiv dwave http www dwave sys com take lceap endo cai benjamin yuan hybrid quantumclassical algorithm quantum error mitigation phys soc japan franco quantum amplitude amplification algorithm explanation availability bias international symposium quantum interaction gonzlez paradela quantum agile development framework google quantum playground http www quant umpla ygrou net gorton software quality attribute essential software architecture springer grovers http www quant iki org wiki grove rssea rch algor ithm gyongyosi imre survey quantum computing technology csr hietala rand hick tracking error type quantum program horesh quantum computing theory practice qubit quantum computation ibm http www scien ceale com international organization standardization isoiec iso iec international organization standardization isoiec isoiec isoiec information technology object management group unified modeling lan guage omg uml isoiec isoiec information technology object management group architecturedriven mod ernization adm johnson menezes vanstone elliptic curve digital signature algorithm ecdsa ijis kirsch chow quantum computing risk existing encryption method kopka daly guide latex edn addisonwesley harlow england lin shors algorithm quantum fourier transform mcgill university faryal page author affiliation memoona faryal saddaf rubab malik khan muhammad attique khan abdulaziz shehab usman tariq samia allaoua chelloug lobna osman memoona faryal memoonafaryaalgmailcom saddaf rubab saddafmcsedupk malik khan mmurtazamcsedupk muhammad attique khan attiquekhanhitecuniedupkmarella parisa hsk introduction quantum computing quantum computing communica tions intechopen mavroeidis impact quantum computing present cryptography ijacsa narsapur arora shah pattnaik performance language code quantum com puting environment springer machine learning information processing nash introduction quantum walk research blog ohya masuda problem quantum algorithm osids oliver requirement quantum software platform paar pelzl introduction publickey cryptography understanding cryptography springer prezcastillo reengineering information system toward classicalquantum system qanswer prezcastillo serrano piattini software modernization embrace quantum technology adv eng soft prezdelgado perezgonzalez towards quantum software modeling language preskill quantum computing nisq era beyond quantum experience ibm http quant compu ting ibm com quantum computing essential need know http robin low medium com raj quantum computing big data sustainable humanosphere rieffel polak quantum computing gentle introduction mit press cambridge rigetti forest http www riget com santha quantum walk based search algorithm international conference theory application model computation sodhi kapur quantum computing platform assessing impact quality attribute sdlc activity ieee international conference icsa ieee sodhi quality attribute quantum computing platform arxiv preprint arxiv usaola quantum software testing weder barzen leymann salm vietz quantum software lifecycle acm sig soft international workshop architecture paradigm engineering quantum software williams exploration quantum computing springer newyork yung quantum supremacy fundamental concept national sci rev zhao quantum software engineering landscape horizon arxiv preprint arxiv publisher note springer nature remains neutral regard jurisdictional claim published map institutional affiliation springer nature licensor hold right article publishing agreement author rightsholders author selfarchiving accepted manuscript version article solely governed term publishing agreement applicable lawstudying efficacy traditional software quality parameter page lobna osman lobnaazizdhietedueg national university science technology nust islamabad pakistan department computer engineering college computing informatics university sharjah sharjah uae department computer science hitec university taxila taxila pakistan department information system college computer information science jouf university sakaka saudi arabia college computer engineering science prince sattam bin abdulaziz university alkharj saudi arabia department information technology college computer information science princess nourah bint abdulrahman university box riyadh saudi arabia department electronics communication engineering delta higher institute engineering technology talkha egypt department information system college computer science mansoura university mansoura egypt
